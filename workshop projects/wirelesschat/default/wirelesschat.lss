
wirelesschat.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001f2a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000007a  00800060  00001f2a  00001f9e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  008000da  00001fa4  00002018  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00002018  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000011d  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002cb9  00000000  00000000  00002155  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002e0  00000000  00000000  00004e0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000290a  00000000  00000000  000050ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000110  00000000  00000000  000079f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000017d  00000000  00000000  00007b08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00015f74  00000000  00000000  00007c85  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000003b0  00000000  00000000  0001dbf9  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e2       	ldi	r30, 0x2A	; 42
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 3d       	cpi	r26, 0xDA	; 218
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	aa ed       	ldi	r26, 0xDA	; 218
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a2 3e       	cpi	r26, 0xE2	; 226
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <main>
      8a:	0c 94 93 0f 	jmp	0x1f26	; 0x1f26 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <usart_init>:
    return 0;
}
 
 
void usart_init()
{
      92:	8a b1       	in	r24, 0x0a	; 10
      94:	88 61       	ori	r24, 0x18	; 24
      96:	8a b9       	out	0x0a, r24	; 10
    UCSRB |= (1 << RXEN)|(1<<TXEN);   // Turn on the transmission and reception circuitry
    UCSRC |= (1 << URSEL)  | (1<<USBS)| (1 << UCSZ0) | (1 << UCSZ1);                                            // Use 8-bit character sizes
      98:	80 b5       	in	r24, 0x20	; 32
      9a:	8e 68       	ori	r24, 0x8E	; 142
      9c:	80 bd       	out	0x20, r24	; 32
    UBRRL = BAUD_PRESCALE;            // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
      9e:	83 e3       	ldi	r24, 0x33	; 51
      a0:	89 b9       	out	0x09, r24	; 9
    UBRRH = (BAUD_PRESCALE >> 8); // Load upper 8-bits of the baud rate value..
      a2:	10 bc       	out	0x20, r1	; 32
                                    // into the high byte of the UBRR register
}
      a4:	08 95       	ret

000000a6 <usart_getch>:
 
unsigned int usart_getch()
{    unsigned int ret;
      a6:	5f 9b       	sbis	0x0b, 7	; 11
      a8:	fe cf       	rjmp	.-4      	; 0xa6 <usart_getch>
    while ((UCSRA & (1 << RXC)) == 0);
    {   
    }    // Do nothing until data has been received and is ready to be read from UDR
   
    return UDR; // return the byte
      aa:	8c b1       	in	r24, 0x0c	; 12
}
      ac:	90 e0       	ldi	r25, 0x00	; 0
      ae:	08 95       	ret

000000b0 <usart_putch>:
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
      b0:	5d 9b       	sbis	0x0b, 5	; 11
      b2:	fe cf       	rjmp	.-4      	; 0xb0 <usart_putch>
   {
   }
   UDR=send;
      b4:	8c b9       	out	0x0c, r24	; 12
}
      b6:	08 95       	ret

000000b8 <putstr>:

void putstr(char *send)
{
      b8:	fc 01       	movw	r30, r24
      ba:	04 c0       	rjmp	.+8      	; 0xc4 <putstr+0xc>
	int i=0;
  	while(send[i]!='\0')
   		{
		while(!(UCSRA & (1<<UDRE)));
      bc:	5d 9b       	sbis	0x0b, 5	; 11
      be:	fe cf       	rjmp	.-4      	; 0xbc <putstr+0x4>
	
		UDR=send[i];
      c0:	8c b9       	out	0x0c, r24	; 12
      c2:	31 96       	adiw	r30, 0x01	; 1
}

void putstr(char *send)
{
	int i=0;
  	while(send[i]!='\0')
      c4:	80 81       	ld	r24, Z
      c6:	88 23       	and	r24, r24
      c8:	c9 f7       	brne	.-14     	; 0xbc <putstr+0x4>
		while(!(UCSRA & (1<<UDRE)));
	
		UDR=send[i];
		i++;
		};
}
      ca:	08 95       	ret

000000cc <LCD_cmd>:
	disp_cmd(0x06);	
	disp_cmd(0x0e);	
}

void LCD_cmd(unsigned char saur)
{
      cc:	85 bb       	out	0x15, r24	; 21
PORTC=saur;
PORTC |=0x04;
      ce:	aa 9a       	sbi	0x15, 2	; 21
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      d0:	8a ef       	ldi	r24, 0xFA	; 250
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	01 97       	sbiw	r24, 0x01	; 1
      d6:	f1 f7       	brne	.-4      	; 0xd4 <LCD_cmd+0x8>
_delay_ms(1);
PORTC &=~0x04;
      d8:	aa 98       	cbi	0x15, 2	; 21
}
      da:	08 95       	ret

000000dc <LCD_data>:
void LCD_data(unsigned char saurabh)
{
      dc:	85 bb       	out	0x15, r24	; 21
PORTC=saurabh;
PORTC |=0x05; 
      de:	85 b3       	in	r24, 0x15	; 21
      e0:	85 60       	ori	r24, 0x05	; 5
      e2:	85 bb       	out	0x15, r24	; 21
      e4:	8a ef       	ldi	r24, 0xFA	; 250
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	01 97       	sbiw	r24, 0x01	; 1
      ea:	f1 f7       	brne	.-4      	; 0xe8 <LCD_data+0xc>
_delay_ms(1);
PORTC &=~0x04; 
      ec:	aa 98       	cbi	0x15, 2	; 21
}
      ee:	08 95       	ret

000000f0 <disp_cmd>:
void disp_cmd(unsigned char saur)       
{
      f0:	28 2f       	mov	r18, r24
      f2:	20 7f       	andi	r18, 0xF0	; 240
	disp_cmd(0x0e);	
}

void LCD_cmd(unsigned char saur)
{
PORTC=saur;
      f4:	25 bb       	out	0x15, r18	; 21
PORTC |=0x04;
      f6:	aa 9a       	sbi	0x15, 2	; 21
      f8:	2a ef       	ldi	r18, 0xFA	; 250
      fa:	30 e0       	ldi	r19, 0x00	; 0
      fc:	f9 01       	movw	r30, r18
      fe:	31 97       	sbiw	r30, 0x01	; 1
     100:	f1 f7       	brne	.-4      	; 0xfe <disp_cmd+0xe>
_delay_ms(1);
PORTC &=~0x04;
     102:	aa 98       	cbi	0x15, 2	; 21
PORTC &=~0x04; 
}
void disp_cmd(unsigned char saur)       
{
LCD_cmd(saur & 0xF0);
LCD_cmd(((saur<<4)&0xF0));
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	44 e0       	ldi	r20, 0x04	; 4
     108:	88 0f       	add	r24, r24
     10a:	99 1f       	adc	r25, r25
     10c:	4a 95       	dec	r20
     10e:	e1 f7       	brne	.-8      	; 0x108 <disp_cmd+0x18>
	disp_cmd(0x0e);	
}

void LCD_cmd(unsigned char saur)
{
PORTC=saur;
     110:	85 bb       	out	0x15, r24	; 21
PORTC |=0x04;
     112:	aa 9a       	sbi	0x15, 2	; 21
     114:	c9 01       	movw	r24, r18
     116:	01 97       	sbiw	r24, 0x01	; 1
     118:	f1 f7       	brne	.-4      	; 0x116 <disp_cmd+0x26>
_delay_ms(1);
PORTC &=~0x04;
     11a:	aa 98       	cbi	0x15, 2	; 21
}
void disp_cmd(unsigned char saur)       
{
LCD_cmd(saur & 0xF0);
LCD_cmd(((saur<<4)&0xF0));
}
     11c:	08 95       	ret

0000011e <LCD_init>:
		};
}


void LCD_init()
{	
     11e:	82 e0       	ldi	r24, 0x02	; 2
     120:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
	disp_cmd(0x02);
	disp_cmd(0x28);   	//another way of writing cmd 0x28;///LCD_cmd(0x20);	///LCD_cmd(0x08);		
     124:	88 e2       	ldi	r24, 0x28	; 40
     126:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
	disp_cmd(0x06);	
     12a:	86 e0       	ldi	r24, 0x06	; 6
     12c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
	disp_cmd(0x0e);	
     130:	8e e0       	ldi	r24, 0x0E	; 14
     132:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
}
     136:	08 95       	ret

00000138 <disp_data>:
LCD_cmd(saur & 0xF0);
LCD_cmd(((saur<<4)&0xF0));
}

void disp_data(unsigned char saurabh)
{
     138:	28 2f       	mov	r18, r24
     13a:	20 7f       	andi	r18, 0xF0	; 240
_delay_ms(1);
PORTC &=~0x04;
}
void LCD_data(unsigned char saurabh)
{
PORTC=saurabh;
     13c:	25 bb       	out	0x15, r18	; 21
PORTC |=0x05; 
     13e:	25 b3       	in	r18, 0x15	; 21
     140:	25 60       	ori	r18, 0x05	; 5
     142:	25 bb       	out	0x15, r18	; 21
     144:	2a ef       	ldi	r18, 0xFA	; 250
     146:	30 e0       	ldi	r19, 0x00	; 0
     148:	f9 01       	movw	r30, r18
     14a:	31 97       	sbiw	r30, 0x01	; 1
     14c:	f1 f7       	brne	.-4      	; 0x14a <disp_data+0x12>
_delay_ms(1);
PORTC &=~0x04; 
     14e:	aa 98       	cbi	0x15, 2	; 21
}

void disp_data(unsigned char saurabh)
{
LCD_data(saurabh & 0xF0);
LCD_data(((saurabh<<4)&0xF0));
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	54 e0       	ldi	r21, 0x04	; 4
     154:	88 0f       	add	r24, r24
     156:	99 1f       	adc	r25, r25
     158:	5a 95       	dec	r21
     15a:	e1 f7       	brne	.-8      	; 0x154 <disp_data+0x1c>
_delay_ms(1);
PORTC &=~0x04;
}
void LCD_data(unsigned char saurabh)
{
PORTC=saurabh;
     15c:	85 bb       	out	0x15, r24	; 21
PORTC |=0x05; 
     15e:	85 b3       	in	r24, 0x15	; 21
     160:	85 60       	ori	r24, 0x05	; 5
     162:	85 bb       	out	0x15, r24	; 21
     164:	c9 01       	movw	r24, r18
     166:	01 97       	sbiw	r24, 0x01	; 1
     168:	f1 f7       	brne	.-4      	; 0x166 <disp_data+0x2e>
_delay_ms(1);
PORTC &=~0x04; 
     16a:	aa 98       	cbi	0x15, 2	; 21

void disp_data(unsigned char saurabh)
{
LCD_data(saurabh & 0xF0);
LCD_data(((saurabh<<4)&0xF0));
}
     16c:	08 95       	ret

0000016e <LCD_string>:

void LCD_string(unsigned char *str)
{
     16e:	cf 93       	push	r28
     170:	df 93       	push	r29
     172:	ec 01       	movw	r28, r24
     174:	05 c0       	rjmp	.+10     	; 0x180 <LCD_string+0x12>
int i=0;
while(str[i]!='\0')
{
disp_data(str[i]);
     176:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
disp_cmd(0x06);
     17a:	86 e0       	ldi	r24, 0x06	; 6
     17c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
}

void LCD_string(unsigned char *str)
{
int i=0;
while(str[i]!='\0')
     180:	89 91       	ld	r24, Y+
     182:	88 23       	and	r24, r24
     184:	c1 f7       	brne	.-16     	; 0x176 <LCD_string+0x8>
{
disp_data(str[i]);
disp_cmd(0x06);
i++;
}
}
     186:	df 91       	pop	r29
     188:	cf 91       	pop	r28
     18a:	08 95       	ret

0000018c <number_LCD>:

void number_LCD(unsigned int abc)      ///// number in a string function   //////
{	disp_cmd(0x04);
     18c:	cf 93       	push	r28
     18e:	df 93       	push	r29
     190:	ec 01       	movw	r28, r24
     192:	84 e0       	ldi	r24, 0x04	; 4
     194:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
     198:	0e c0       	rjmp	.+28     	; 0x1b6 <number_LCD+0x2a>
	unsigned int d=0;
	while(abc!=0)
	{	d=abc%10;
		disp_data(d+48);
     19a:	ce 01       	movw	r24, r28
     19c:	6a e0       	ldi	r22, 0x0A	; 10
     19e:	70 e0       	ldi	r23, 0x00	; 0
     1a0:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__udivmodhi4>
     1a4:	80 5d       	subi	r24, 0xD0	; 208
     1a6:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
		abc=abc/10;
     1aa:	ce 01       	movw	r24, r28
     1ac:	6a e0       	ldi	r22, 0x0A	; 10
     1ae:	70 e0       	ldi	r23, 0x00	; 0
     1b0:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__udivmodhi4>
     1b4:	eb 01       	movw	r28, r22
}

void number_LCD(unsigned int abc)      ///// number in a string function   //////
{	disp_cmd(0x04);
	unsigned int d=0;
	while(abc!=0)
     1b6:	20 97       	sbiw	r28, 0x00	; 0
     1b8:	81 f7       	brne	.-32     	; 0x19a <number_LCD+0xe>
	{	d=abc%10;
		disp_data(d+48);
		abc=abc/10;
	}
}
     1ba:	df 91       	pop	r29
     1bc:	cf 91       	pop	r28
     1be:	08 95       	ret

000001c0 <msgrcv>:


void msgrcv()
{
     1c0:	4f 92       	push	r4
     1c2:	5f 92       	push	r5
     1c4:	6f 92       	push	r6
     1c6:	7f 92       	push	r7
     1c8:	8f 92       	push	r8
     1ca:	9f 92       	push	r9
     1cc:	af 92       	push	r10
     1ce:	bf 92       	push	r11
     1d0:	cf 92       	push	r12
     1d2:	df 92       	push	r13
     1d4:	ef 92       	push	r14
     1d6:	ff 92       	push	r15
     1d8:	0f 93       	push	r16
     1da:	1f 93       	push	r17
     1dc:	cf 93       	push	r28
     1de:	df 93       	push	r29
unsigned int val,h=1;
while(h)
{
		val=usart_getch();
		PORTB=0x0b;
     1e0:	bb e0       	ldi	r27, 0x0B	; 11
     1e2:	eb 2e       	mov	r14, r27
     1e4:	a2 ee       	ldi	r26, 0xE2	; 226
     1e6:	8a 2e       	mov	r8, r26
     1e8:	a4 e0       	ldi	r26, 0x04	; 4
     1ea:	9a 2e       	mov	r9, r26
			disp_cmd(x);
			disp_data(' ');
			_delay_ms(1000);
	}
	else if(val==93)
	{	x=0x80;
     1ec:	f0 e8       	ldi	r31, 0x80	; 128
     1ee:	af 2e       	mov	r10, r31
     1f0:	b1 2c       	mov	r11, r1
     1f2:	09 e1       	ldi	r16, 0x19	; 25
     1f4:	10 e0       	ldi	r17, 0x00	; 0
                                    // into the high byte of the UBRR register
}
 
unsigned int usart_getch()
{    unsigned int ret;
    while ((UCSRA & (1 << RXC)) == 0);
     1f6:	e0 e5       	ldi	r30, 0x50	; 80
     1f8:	6e 2e       	mov	r6, r30
     1fa:	e3 ec       	ldi	r30, 0xC3	; 195
     1fc:	7e 2e       	mov	r7, r30
     1fe:	74 e2       	ldi	r23, 0x24	; 36
     200:	47 2e       	mov	r4, r23
     202:	74 ef       	ldi	r23, 0xF4	; 244
     204:	57 2e       	mov	r5, r23
     206:	5f 9b       	sbis	0x0b, 7	; 11
     208:	fe cf       	rjmp	.-4      	; 0x206 <msgrcv+0x46>
    {   
    }    // Do nothing until data has been received and is ready to be read from UDR
   
    return UDR; // return the byte
     20a:	fc b0       	in	r15, 0x0c	; 12
     20c:	cf 2d       	mov	r28, r15
     20e:	d0 e0       	ldi	r29, 0x00	; 0
{
unsigned int val,h=1;
while(h)
{
		val=usart_getch();
		PORTB=0x0b;
     210:	e8 ba       	out	0x18, r14	; 24
     212:	c4 01       	movw	r24, r8
     214:	01 97       	sbiw	r24, 0x01	; 1
     216:	f1 f7       	brne	.-4      	; 0x214 <msgrcv+0x54>
		_delay_ms(5);
	if(val==94)
     218:	ce 35       	cpi	r28, 0x5E	; 94
     21a:	d1 05       	cpc	r29, r1
     21c:	21 f0       	breq	.+8      	; 0x226 <msgrcv+0x66>
     21e:	61 e0       	ldi	r22, 0x01	; 1
     220:	c6 2e       	mov	r12, r22
     222:	d1 2c       	mov	r13, r1
     224:	24 c0       	rjmp	.+72     	; 0x26e <msgrcv+0xae>
	{
			disp_cmd(0x80);	
     226:	80 e8       	ldi	r24, 0x80	; 128
     228:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			disp_cmd(0x01);	
     22c:	81 e0       	ldi	r24, 0x01	; 1
     22e:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			x=0x80;n=0;h=0;
     232:	b0 92 ce 00 	sts	0x00CE, r11
     236:	a0 92 cd 00 	sts	0x00CD, r10
     23a:	10 92 df 00 	sts	0x00DF, r1
     23e:	10 92 de 00 	sts	0x00DE, r1
     242:	c3 01       	movw	r24, r6
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <msgrcv+0x84>
			_delay_ms(200);
			disp_cmd(0x80);
     248:	80 e8       	ldi	r24, 0x80	; 128
     24a:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			LCD_string("R3,C1 for R mode");
     24e:	80 e6       	ldi	r24, 0x60	; 96
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
			disp_cmd(0xc0);
     256:	80 ec       	ldi	r24, 0xC0	; 192
     258:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			LCD_string("R3,C2 for S mode");
     25c:	81 e7       	ldi	r24, 0x71	; 113
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
     264:	c2 01       	movw	r24, r4
     266:	01 97       	sbiw	r24, 0x01	; 1
     268:	f1 f7       	brne	.-4      	; 0x266 <msgrcv+0xa6>
     26a:	cc 24       	eor	r12, r12
     26c:	dd 24       	eor	r13, r13
			_delay_ms(250);
	}
	
	if((val>=65) && (val<=90))
     26e:	ce 01       	movw	r24, r28
     270:	81 54       	subi	r24, 0x41	; 65
     272:	90 40       	sbci	r25, 0x00	; 0
     274:	4a 97       	sbiw	r24, 0x1a	; 26
     276:	08 f0       	brcs	.+2      	; 0x27a <msgrcv+0xba>
     278:	53 c2       	rjmp	.+1190   	; 0x720 <__stack+0x2c1>
	{	
		if(val==65)
     27a:	c1 34       	cpi	r28, 0x41	; 65
     27c:	d1 05       	cpc	r29, r1
     27e:	79 f4       	brne	.+30     	; 0x29e <msgrcv+0xde>
		{
		disp_cmd(x);
     280:	80 91 cd 00 	lds	r24, 0x00CD
     284:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     288:	8f 2d       	mov	r24, r15
     28a:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     28e:	88 eb       	ldi	r24, 0xB8	; 184
     290:	9b e0       	ldi	r25, 0x0B	; 11
     292:	f8 01       	movw	r30, r16
     294:	31 97       	sbiw	r30, 0x01	; 1
     296:	f1 f7       	brne	.-4      	; 0x294 <msgrcv+0xd4>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     298:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     29a:	d9 f7       	brne	.-10     	; 0x292 <msgrcv+0xd2>
     29c:	88 c0       	rjmp	.+272    	; 0x3ae <msgrcv+0x1ee>
		_delay_ms(300);		
		}
		else if(val==66)
     29e:	c2 34       	cpi	r28, 0x42	; 66
     2a0:	d1 05       	cpc	r29, r1
     2a2:	b1 f4       	brne	.+44     	; 0x2d0 <msgrcv+0x110>
		{x--;
     2a4:	80 91 cd 00 	lds	r24, 0x00CD
     2a8:	90 91 ce 00 	lds	r25, 0x00CE
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	90 93 ce 00 	sts	0x00CE, r25
     2b2:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     2b6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     2ba:	8f 2d       	mov	r24, r15
     2bc:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     2c0:	88 eb       	ldi	r24, 0xB8	; 184
     2c2:	9b e0       	ldi	r25, 0x0B	; 11
     2c4:	f8 01       	movw	r30, r16
     2c6:	31 97       	sbiw	r30, 0x01	; 1
     2c8:	f1 f7       	brne	.-4      	; 0x2c6 <msgrcv+0x106>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2ca:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2cc:	d9 f7       	brne	.-10     	; 0x2c4 <msgrcv+0x104>
     2ce:	2b c0       	rjmp	.+86     	; 0x326 <msgrcv+0x166>
		_delay_ms(300);	
		}
		else if(val==67)
     2d0:	c3 34       	cpi	r28, 0x43	; 67
     2d2:	d1 05       	cpc	r29, r1
     2d4:	b1 f4       	brne	.+44     	; 0x302 <msgrcv+0x142>
		{x--;
     2d6:	80 91 cd 00 	lds	r24, 0x00CD
     2da:	90 91 ce 00 	lds	r25, 0x00CE
     2de:	01 97       	sbiw	r24, 0x01	; 1
     2e0:	90 93 ce 00 	sts	0x00CE, r25
     2e4:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     2e8:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     2ec:	8f 2d       	mov	r24, r15
     2ee:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     2f2:	88 eb       	ldi	r24, 0xB8	; 184
     2f4:	9b e0       	ldi	r25, 0x0B	; 11
     2f6:	f8 01       	movw	r30, r16
     2f8:	31 97       	sbiw	r30, 0x01	; 1
     2fa:	f1 f7       	brne	.-4      	; 0x2f8 <msgrcv+0x138>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2fc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2fe:	d9 f7       	brne	.-10     	; 0x2f6 <msgrcv+0x136>
     300:	12 c0       	rjmp	.+36     	; 0x326 <msgrcv+0x166>
		_delay_ms(300);	
		}
		if(val==68)
     302:	c4 34       	cpi	r28, 0x44	; 68
     304:	d1 05       	cpc	r29, r1
     306:	79 f4       	brne	.+30     	; 0x326 <msgrcv+0x166>
		{
		disp_cmd(x);
     308:	80 91 cd 00 	lds	r24, 0x00CD
     30c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     310:	8f 2d       	mov	r24, r15
     312:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     316:	88 eb       	ldi	r24, 0xB8	; 184
     318:	9b e0       	ldi	r25, 0x0B	; 11
     31a:	f8 01       	movw	r30, r16
     31c:	31 97       	sbiw	r30, 0x01	; 1
     31e:	f1 f7       	brne	.-4      	; 0x31c <msgrcv+0x15c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     320:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     322:	d9 f7       	brne	.-10     	; 0x31a <msgrcv+0x15a>
     324:	88 c0       	rjmp	.+272    	; 0x436 <msgrcv+0x276>
		_delay_ms(300);		
		}
		else if(val==69)
     326:	c5 34       	cpi	r28, 0x45	; 69
     328:	d1 05       	cpc	r29, r1
     32a:	b1 f4       	brne	.+44     	; 0x358 <msgrcv+0x198>
		{x--;
     32c:	80 91 cd 00 	lds	r24, 0x00CD
     330:	90 91 ce 00 	lds	r25, 0x00CE
     334:	01 97       	sbiw	r24, 0x01	; 1
     336:	90 93 ce 00 	sts	0x00CE, r25
     33a:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     33e:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     342:	8f 2d       	mov	r24, r15
     344:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     348:	88 eb       	ldi	r24, 0xB8	; 184
     34a:	9b e0       	ldi	r25, 0x0B	; 11
     34c:	f8 01       	movw	r30, r16
     34e:	31 97       	sbiw	r30, 0x01	; 1
     350:	f1 f7       	brne	.-4      	; 0x34e <msgrcv+0x18e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     352:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     354:	d9 f7       	brne	.-10     	; 0x34c <msgrcv+0x18c>
     356:	2b c0       	rjmp	.+86     	; 0x3ae <msgrcv+0x1ee>
		_delay_ms(300);	
		}
		else if(val==70)
     358:	c6 34       	cpi	r28, 0x46	; 70
     35a:	d1 05       	cpc	r29, r1
     35c:	b1 f4       	brne	.+44     	; 0x38a <msgrcv+0x1ca>
		{x--;
     35e:	80 91 cd 00 	lds	r24, 0x00CD
     362:	90 91 ce 00 	lds	r25, 0x00CE
     366:	01 97       	sbiw	r24, 0x01	; 1
     368:	90 93 ce 00 	sts	0x00CE, r25
     36c:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     370:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     374:	8f 2d       	mov	r24, r15
     376:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     37a:	88 eb       	ldi	r24, 0xB8	; 184
     37c:	9b e0       	ldi	r25, 0x0B	; 11
     37e:	f8 01       	movw	r30, r16
     380:	31 97       	sbiw	r30, 0x01	; 1
     382:	f1 f7       	brne	.-4      	; 0x380 <msgrcv+0x1c0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     384:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     386:	d9 f7       	brne	.-10     	; 0x37e <msgrcv+0x1be>
     388:	12 c0       	rjmp	.+36     	; 0x3ae <msgrcv+0x1ee>
		_delay_ms(300);	
		}
		if(val==71)
     38a:	c7 34       	cpi	r28, 0x47	; 71
     38c:	d1 05       	cpc	r29, r1
     38e:	79 f4       	brne	.+30     	; 0x3ae <msgrcv+0x1ee>
		{
		disp_cmd(x);
     390:	80 91 cd 00 	lds	r24, 0x00CD
     394:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     398:	8f 2d       	mov	r24, r15
     39a:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     39e:	88 eb       	ldi	r24, 0xB8	; 184
     3a0:	9b e0       	ldi	r25, 0x0B	; 11
     3a2:	f8 01       	movw	r30, r16
     3a4:	31 97       	sbiw	r30, 0x01	; 1
     3a6:	f1 f7       	brne	.-4      	; 0x3a4 <msgrcv+0x1e4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3a8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3aa:	d9 f7       	brne	.-10     	; 0x3a2 <msgrcv+0x1e2>
     3ac:	88 c0       	rjmp	.+272    	; 0x4be <__stack+0x5f>
		_delay_ms(300);		
		}
		else if(val==72)
     3ae:	c8 34       	cpi	r28, 0x48	; 72
     3b0:	d1 05       	cpc	r29, r1
     3b2:	b1 f4       	brne	.+44     	; 0x3e0 <msgrcv+0x220>
		{x--;
     3b4:	80 91 cd 00 	lds	r24, 0x00CD
     3b8:	90 91 ce 00 	lds	r25, 0x00CE
     3bc:	01 97       	sbiw	r24, 0x01	; 1
     3be:	90 93 ce 00 	sts	0x00CE, r25
     3c2:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     3c6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     3ca:	8f 2d       	mov	r24, r15
     3cc:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     3d0:	88 eb       	ldi	r24, 0xB8	; 184
     3d2:	9b e0       	ldi	r25, 0x0B	; 11
     3d4:	f8 01       	movw	r30, r16
     3d6:	31 97       	sbiw	r30, 0x01	; 1
     3d8:	f1 f7       	brne	.-4      	; 0x3d6 <msgrcv+0x216>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3da:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3dc:	d9 f7       	brne	.-10     	; 0x3d4 <msgrcv+0x214>
     3de:	2b c0       	rjmp	.+86     	; 0x436 <msgrcv+0x276>
		_delay_ms(300);	
		}
		else if(val==73)
     3e0:	c9 34       	cpi	r28, 0x49	; 73
     3e2:	d1 05       	cpc	r29, r1
     3e4:	b1 f4       	brne	.+44     	; 0x412 <msgrcv+0x252>
		{x--;
     3e6:	80 91 cd 00 	lds	r24, 0x00CD
     3ea:	90 91 ce 00 	lds	r25, 0x00CE
     3ee:	01 97       	sbiw	r24, 0x01	; 1
     3f0:	90 93 ce 00 	sts	0x00CE, r25
     3f4:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     3f8:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     3fc:	8f 2d       	mov	r24, r15
     3fe:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     402:	88 eb       	ldi	r24, 0xB8	; 184
     404:	9b e0       	ldi	r25, 0x0B	; 11
     406:	f8 01       	movw	r30, r16
     408:	31 97       	sbiw	r30, 0x01	; 1
     40a:	f1 f7       	brne	.-4      	; 0x408 <msgrcv+0x248>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     40c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     40e:	d9 f7       	brne	.-10     	; 0x406 <msgrcv+0x246>
     410:	12 c0       	rjmp	.+36     	; 0x436 <msgrcv+0x276>
		_delay_ms(300);	
		}
		if(val==74)
     412:	ca 34       	cpi	r28, 0x4A	; 74
     414:	d1 05       	cpc	r29, r1
     416:	79 f4       	brne	.+30     	; 0x436 <msgrcv+0x276>
		{
		disp_cmd(x);
     418:	80 91 cd 00 	lds	r24, 0x00CD
     41c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     420:	8f 2d       	mov	r24, r15
     422:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     426:	88 eb       	ldi	r24, 0xB8	; 184
     428:	9b e0       	ldi	r25, 0x0B	; 11
     42a:	f8 01       	movw	r30, r16
     42c:	31 97       	sbiw	r30, 0x01	; 1
     42e:	f1 f7       	brne	.-4      	; 0x42c <msgrcv+0x26c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     430:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     432:	d9 f7       	brne	.-10     	; 0x42a <msgrcv+0x26a>
     434:	88 c0       	rjmp	.+272    	; 0x546 <__stack+0xe7>
		_delay_ms(300);		
		}
		else if(val==75)
     436:	cb 34       	cpi	r28, 0x4B	; 75
     438:	d1 05       	cpc	r29, r1
     43a:	b1 f4       	brne	.+44     	; 0x468 <__stack+0x9>
		{x--;
     43c:	80 91 cd 00 	lds	r24, 0x00CD
     440:	90 91 ce 00 	lds	r25, 0x00CE
     444:	01 97       	sbiw	r24, 0x01	; 1
     446:	90 93 ce 00 	sts	0x00CE, r25
     44a:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     44e:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     452:	8f 2d       	mov	r24, r15
     454:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     458:	88 eb       	ldi	r24, 0xB8	; 184
     45a:	9b e0       	ldi	r25, 0x0B	; 11
     45c:	f8 01       	movw	r30, r16
     45e:	31 97       	sbiw	r30, 0x01	; 1
     460:	f1 f7       	brne	.-4      	; 0x45e <msgrcv+0x29e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     462:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     464:	d9 f7       	brne	.-10     	; 0x45c <msgrcv+0x29c>
     466:	2b c0       	rjmp	.+86     	; 0x4be <__stack+0x5f>
		_delay_ms(300);	
		}
		else if(val==76)
     468:	cc 34       	cpi	r28, 0x4C	; 76
     46a:	d1 05       	cpc	r29, r1
     46c:	b1 f4       	brne	.+44     	; 0x49a <__stack+0x3b>
		{x--;
     46e:	80 91 cd 00 	lds	r24, 0x00CD
     472:	90 91 ce 00 	lds	r25, 0x00CE
     476:	01 97       	sbiw	r24, 0x01	; 1
     478:	90 93 ce 00 	sts	0x00CE, r25
     47c:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     480:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     484:	8f 2d       	mov	r24, r15
     486:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     48a:	88 eb       	ldi	r24, 0xB8	; 184
     48c:	9b e0       	ldi	r25, 0x0B	; 11
     48e:	f8 01       	movw	r30, r16
     490:	31 97       	sbiw	r30, 0x01	; 1
     492:	f1 f7       	brne	.-4      	; 0x490 <__stack+0x31>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     494:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     496:	d9 f7       	brne	.-10     	; 0x48e <__stack+0x2f>
     498:	12 c0       	rjmp	.+36     	; 0x4be <__stack+0x5f>
		_delay_ms(300);	
		}
		if(val==77)
     49a:	cd 34       	cpi	r28, 0x4D	; 77
     49c:	d1 05       	cpc	r29, r1
     49e:	79 f4       	brne	.+30     	; 0x4be <__stack+0x5f>
		{
		disp_cmd(x);
     4a0:	80 91 cd 00 	lds	r24, 0x00CD
     4a4:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     4a8:	8f 2d       	mov	r24, r15
     4aa:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     4ae:	88 eb       	ldi	r24, 0xB8	; 184
     4b0:	9b e0       	ldi	r25, 0x0B	; 11
     4b2:	f8 01       	movw	r30, r16
     4b4:	31 97       	sbiw	r30, 0x01	; 1
     4b6:	f1 f7       	brne	.-4      	; 0x4b4 <__stack+0x55>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4b8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ba:	d9 f7       	brne	.-10     	; 0x4b2 <__stack+0x53>
     4bc:	8f c0       	rjmp	.+286    	; 0x5dc <__stack+0x17d>
		_delay_ms(300);		
		}
		else if(val==78)
     4be:	ce 34       	cpi	r28, 0x4E	; 78
     4c0:	d1 05       	cpc	r29, r1
     4c2:	b1 f4       	brne	.+44     	; 0x4f0 <__stack+0x91>
		{x--;
     4c4:	80 91 cd 00 	lds	r24, 0x00CD
     4c8:	90 91 ce 00 	lds	r25, 0x00CE
     4cc:	01 97       	sbiw	r24, 0x01	; 1
     4ce:	90 93 ce 00 	sts	0x00CE, r25
     4d2:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     4d6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     4da:	8f 2d       	mov	r24, r15
     4dc:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     4e0:	88 eb       	ldi	r24, 0xB8	; 184
     4e2:	9b e0       	ldi	r25, 0x0B	; 11
     4e4:	f8 01       	movw	r30, r16
     4e6:	31 97       	sbiw	r30, 0x01	; 1
     4e8:	f1 f7       	brne	.-4      	; 0x4e6 <__stack+0x87>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4ea:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ec:	d9 f7       	brne	.-10     	; 0x4e4 <__stack+0x85>
     4ee:	2b c0       	rjmp	.+86     	; 0x546 <__stack+0xe7>
		_delay_ms(300);	
		}
		else if(val==79)
     4f0:	cf 34       	cpi	r28, 0x4F	; 79
     4f2:	d1 05       	cpc	r29, r1
     4f4:	b1 f4       	brne	.+44     	; 0x522 <__stack+0xc3>
		{x--;
     4f6:	80 91 cd 00 	lds	r24, 0x00CD
     4fa:	90 91 ce 00 	lds	r25, 0x00CE
     4fe:	01 97       	sbiw	r24, 0x01	; 1
     500:	90 93 ce 00 	sts	0x00CE, r25
     504:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     508:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     50c:	8f 2d       	mov	r24, r15
     50e:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     512:	88 eb       	ldi	r24, 0xB8	; 184
     514:	9b e0       	ldi	r25, 0x0B	; 11
     516:	f8 01       	movw	r30, r16
     518:	31 97       	sbiw	r30, 0x01	; 1
     51a:	f1 f7       	brne	.-4      	; 0x518 <__stack+0xb9>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     51c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     51e:	d9 f7       	brne	.-10     	; 0x516 <__stack+0xb7>
     520:	12 c0       	rjmp	.+36     	; 0x546 <__stack+0xe7>
		_delay_ms(300);	
		}
		if(val==80)
     522:	c0 35       	cpi	r28, 0x50	; 80
     524:	d1 05       	cpc	r29, r1
     526:	79 f4       	brne	.+30     	; 0x546 <__stack+0xe7>
		{
		disp_cmd(x);
     528:	80 91 cd 00 	lds	r24, 0x00CD
     52c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     530:	8f 2d       	mov	r24, r15
     532:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     536:	88 eb       	ldi	r24, 0xB8	; 184
     538:	9b e0       	ldi	r25, 0x0B	; 11
     53a:	f8 01       	movw	r30, r16
     53c:	31 97       	sbiw	r30, 0x01	; 1
     53e:	f1 f7       	brne	.-4      	; 0x53c <__stack+0xdd>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     540:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     542:	d9 f7       	brne	.-10     	; 0x53a <__stack+0xdb>
     544:	a1 c0       	rjmp	.+322    	; 0x688 <__stack+0x229>
		_delay_ms(300);		
		}
		else if(val==81)
     546:	c1 35       	cpi	r28, 0x51	; 81
     548:	d1 05       	cpc	r29, r1
     54a:	b1 f4       	brne	.+44     	; 0x578 <__stack+0x119>
		{x--;
     54c:	80 91 cd 00 	lds	r24, 0x00CD
     550:	90 91 ce 00 	lds	r25, 0x00CE
     554:	01 97       	sbiw	r24, 0x01	; 1
     556:	90 93 ce 00 	sts	0x00CE, r25
     55a:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     55e:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     562:	8f 2d       	mov	r24, r15
     564:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     568:	88 eb       	ldi	r24, 0xB8	; 184
     56a:	9b e0       	ldi	r25, 0x0B	; 11
     56c:	f8 01       	movw	r30, r16
     56e:	31 97       	sbiw	r30, 0x01	; 1
     570:	f1 f7       	brne	.-4      	; 0x56e <__stack+0x10f>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     572:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     574:	d9 f7       	brne	.-10     	; 0x56c <__stack+0x10d>
     576:	44 c0       	rjmp	.+136    	; 0x600 <__stack+0x1a1>
		_delay_ms(300);	
		}
		else if(val==82)
     578:	c2 35       	cpi	r28, 0x52	; 82
     57a:	d1 05       	cpc	r29, r1
     57c:	b1 f4       	brne	.+44     	; 0x5aa <__stack+0x14b>
		{x--;
     57e:	80 91 cd 00 	lds	r24, 0x00CD
     582:	90 91 ce 00 	lds	r25, 0x00CE
     586:	01 97       	sbiw	r24, 0x01	; 1
     588:	90 93 ce 00 	sts	0x00CE, r25
     58c:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     590:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     594:	8f 2d       	mov	r24, r15
     596:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     59a:	88 eb       	ldi	r24, 0xB8	; 184
     59c:	9b e0       	ldi	r25, 0x0B	; 11
     59e:	f8 01       	movw	r30, r16
     5a0:	31 97       	sbiw	r30, 0x01	; 1
     5a2:	f1 f7       	brne	.-4      	; 0x5a0 <__stack+0x141>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5a4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5a6:	d9 f7       	brne	.-10     	; 0x59e <__stack+0x13f>
     5a8:	2b c0       	rjmp	.+86     	; 0x600 <__stack+0x1a1>
		_delay_ms(300);	
		}
		else if(val==83)
     5aa:	c3 35       	cpi	r28, 0x53	; 83
     5ac:	d1 05       	cpc	r29, r1
     5ae:	b1 f4       	brne	.+44     	; 0x5dc <__stack+0x17d>
		{x--;
     5b0:	80 91 cd 00 	lds	r24, 0x00CD
     5b4:	90 91 ce 00 	lds	r25, 0x00CE
     5b8:	01 97       	sbiw	r24, 0x01	; 1
     5ba:	90 93 ce 00 	sts	0x00CE, r25
     5be:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     5c2:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     5c6:	8f 2d       	mov	r24, r15
     5c8:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     5cc:	88 eb       	ldi	r24, 0xB8	; 184
     5ce:	9b e0       	ldi	r25, 0x0B	; 11
     5d0:	f8 01       	movw	r30, r16
     5d2:	31 97       	sbiw	r30, 0x01	; 1
     5d4:	f1 f7       	brne	.-4      	; 0x5d2 <__stack+0x173>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5d6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5d8:	d9 f7       	brne	.-10     	; 0x5d0 <__stack+0x171>
     5da:	12 c0       	rjmp	.+36     	; 0x600 <__stack+0x1a1>
		_delay_ms(300);	
		}
		if(val==84)
     5dc:	c4 35       	cpi	r28, 0x54	; 84
     5de:	d1 05       	cpc	r29, r1
     5e0:	79 f4       	brne	.+30     	; 0x600 <__stack+0x1a1>
		{
		disp_cmd(x);
     5e2:	80 91 cd 00 	lds	r24, 0x00CD
     5e6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     5ea:	8f 2d       	mov	r24, r15
     5ec:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     5f0:	88 eb       	ldi	r24, 0xB8	; 184
     5f2:	9b e0       	ldi	r25, 0x0B	; 11
     5f4:	f8 01       	movw	r30, r16
     5f6:	31 97       	sbiw	r30, 0x01	; 1
     5f8:	f1 f7       	brne	.-4      	; 0x5f6 <__stack+0x197>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5fa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5fc:	d9 f7       	brne	.-10     	; 0x5f4 <__stack+0x195>
     5fe:	e7 c2       	rjmp	.+1486   	; 0xbce <__stack+0x76f>
		_delay_ms(300);		
		}
		else if(val==85)
     600:	c5 35       	cpi	r28, 0x55	; 85
     602:	d1 05       	cpc	r29, r1
     604:	b1 f4       	brne	.+44     	; 0x632 <__stack+0x1d3>
		{x--;
     606:	80 91 cd 00 	lds	r24, 0x00CD
     60a:	90 91 ce 00 	lds	r25, 0x00CE
     60e:	01 97       	sbiw	r24, 0x01	; 1
     610:	90 93 ce 00 	sts	0x00CE, r25
     614:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     618:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     61c:	8f 2d       	mov	r24, r15
     61e:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     622:	88 eb       	ldi	r24, 0xB8	; 184
     624:	9b e0       	ldi	r25, 0x0B	; 11
     626:	f8 01       	movw	r30, r16
     628:	31 97       	sbiw	r30, 0x01	; 1
     62a:	f1 f7       	brne	.-4      	; 0x628 <__stack+0x1c9>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     62c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     62e:	d9 f7       	brne	.-10     	; 0x626 <__stack+0x1c7>
     630:	2b c0       	rjmp	.+86     	; 0x688 <__stack+0x229>
		_delay_ms(300);	
		}
		else if(val==86)
     632:	c6 35       	cpi	r28, 0x56	; 86
     634:	d1 05       	cpc	r29, r1
     636:	b1 f4       	brne	.+44     	; 0x664 <__stack+0x205>
		{x--;
     638:	80 91 cd 00 	lds	r24, 0x00CD
     63c:	90 91 ce 00 	lds	r25, 0x00CE
     640:	01 97       	sbiw	r24, 0x01	; 1
     642:	90 93 ce 00 	sts	0x00CE, r25
     646:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     64a:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     64e:	8f 2d       	mov	r24, r15
     650:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     654:	88 eb       	ldi	r24, 0xB8	; 184
     656:	9b e0       	ldi	r25, 0x0B	; 11
     658:	f8 01       	movw	r30, r16
     65a:	31 97       	sbiw	r30, 0x01	; 1
     65c:	f1 f7       	brne	.-4      	; 0x65a <__stack+0x1fb>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     65e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     660:	d9 f7       	brne	.-10     	; 0x658 <__stack+0x1f9>
     662:	12 c0       	rjmp	.+36     	; 0x688 <__stack+0x229>
		_delay_ms(300);	
		}
		if(val==87)
     664:	c7 35       	cpi	r28, 0x57	; 87
     666:	d1 05       	cpc	r29, r1
     668:	79 f4       	brne	.+30     	; 0x688 <__stack+0x229>
		{
		disp_cmd(x);
     66a:	80 91 cd 00 	lds	r24, 0x00CD
     66e:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     672:	8f 2d       	mov	r24, r15
     674:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     678:	88 eb       	ldi	r24, 0xB8	; 184
     67a:	9b e0       	ldi	r25, 0x0B	; 11
     67c:	f8 01       	movw	r30, r16
     67e:	31 97       	sbiw	r30, 0x01	; 1
     680:	f1 f7       	brne	.-4      	; 0x67e <__stack+0x21f>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     682:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     684:	d9 f7       	brne	.-10     	; 0x67c <__stack+0x21d>
     686:	a3 c2       	rjmp	.+1350   	; 0xbce <__stack+0x76f>
		_delay_ms(300);		
		}
		else if(val==88)
     688:	c8 35       	cpi	r28, 0x58	; 88
     68a:	d1 05       	cpc	r29, r1
     68c:	b1 f4       	brne	.+44     	; 0x6ba <__stack+0x25b>
		{x--;
     68e:	80 91 cd 00 	lds	r24, 0x00CD
     692:	90 91 ce 00 	lds	r25, 0x00CE
     696:	01 97       	sbiw	r24, 0x01	; 1
     698:	90 93 ce 00 	sts	0x00CE, r25
     69c:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     6a0:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     6a4:	8f 2d       	mov	r24, r15
     6a6:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     6aa:	88 eb       	ldi	r24, 0xB8	; 184
     6ac:	9b e0       	ldi	r25, 0x0B	; 11
     6ae:	f8 01       	movw	r30, r16
     6b0:	31 97       	sbiw	r30, 0x01	; 1
     6b2:	f1 f7       	brne	.-4      	; 0x6b0 <__stack+0x251>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6b4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6b6:	d9 f7       	brne	.-10     	; 0x6ae <__stack+0x24f>
     6b8:	8a c2       	rjmp	.+1300   	; 0xbce <__stack+0x76f>
		_delay_ms(300);	
		}
		else if(val==89)
     6ba:	c9 35       	cpi	r28, 0x59	; 89
     6bc:	d1 05       	cpc	r29, r1
     6be:	b1 f4       	brne	.+44     	; 0x6ec <__stack+0x28d>
		{x--;
     6c0:	80 91 cd 00 	lds	r24, 0x00CD
     6c4:	90 91 ce 00 	lds	r25, 0x00CE
     6c8:	01 97       	sbiw	r24, 0x01	; 1
     6ca:	90 93 ce 00 	sts	0x00CE, r25
     6ce:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     6d2:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     6d6:	8f 2d       	mov	r24, r15
     6d8:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     6dc:	88 eb       	ldi	r24, 0xB8	; 184
     6de:	9b e0       	ldi	r25, 0x0B	; 11
     6e0:	f8 01       	movw	r30, r16
     6e2:	31 97       	sbiw	r30, 0x01	; 1
     6e4:	f1 f7       	brne	.-4      	; 0x6e2 <__stack+0x283>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6e6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6e8:	d9 f7       	brne	.-10     	; 0x6e0 <__stack+0x281>
     6ea:	71 c2       	rjmp	.+1250   	; 0xbce <__stack+0x76f>
		_delay_ms(300);	
		}
		else if(val==90)
     6ec:	ca 35       	cpi	r28, 0x5A	; 90
     6ee:	d1 05       	cpc	r29, r1
     6f0:	09 f0       	breq	.+2      	; 0x6f4 <__stack+0x295>
     6f2:	6d c2       	rjmp	.+1242   	; 0xbce <__stack+0x76f>
		{x--;
     6f4:	80 91 cd 00 	lds	r24, 0x00CD
     6f8:	90 91 ce 00 	lds	r25, 0x00CE
     6fc:	01 97       	sbiw	r24, 0x01	; 1
     6fe:	90 93 ce 00 	sts	0x00CE, r25
     702:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     706:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     70a:	8f 2d       	mov	r24, r15
     70c:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     710:	88 eb       	ldi	r24, 0xB8	; 184
     712:	9b e0       	ldi	r25, 0x0B	; 11
     714:	f8 01       	movw	r30, r16
     716:	31 97       	sbiw	r30, 0x01	; 1
     718:	f1 f7       	brne	.-4      	; 0x716 <__stack+0x2b7>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     71a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     71c:	d9 f7       	brne	.-10     	; 0x714 <__stack+0x2b5>
     71e:	57 c2       	rjmp	.+1198   	; 0xbce <__stack+0x76f>
		_delay_ms(300);	
		}
		x++;
	}
	else if((val>=97) && (val<=122))
     720:	ce 01       	movw	r24, r28
     722:	81 56       	subi	r24, 0x61	; 97
     724:	90 40       	sbci	r25, 0x00	; 0
     726:	4a 97       	sbiw	r24, 0x1a	; 26
     728:	08 f0       	brcs	.+2      	; 0x72c <__stack+0x2cd>
     72a:	5a c2       	rjmp	.+1204   	; 0xbe0 <__stack+0x781>
	{	
		if(val==97)
     72c:	c1 36       	cpi	r28, 0x61	; 97
     72e:	d1 05       	cpc	r29, r1
     730:	79 f4       	brne	.+30     	; 0x750 <__stack+0x2f1>
		{
		disp_cmd(x);
     732:	80 91 cd 00 	lds	r24, 0x00CD
     736:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     73a:	8f 2d       	mov	r24, r15
     73c:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     740:	88 eb       	ldi	r24, 0xB8	; 184
     742:	9b e0       	ldi	r25, 0x0B	; 11
     744:	f8 01       	movw	r30, r16
     746:	31 97       	sbiw	r30, 0x01	; 1
     748:	f1 f7       	brne	.-4      	; 0x746 <__stack+0x2e7>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     74a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     74c:	d9 f7       	brne	.-10     	; 0x744 <__stack+0x2e5>
     74e:	88 c0       	rjmp	.+272    	; 0x860 <__stack+0x401>
		_delay_ms(300);		
		}
		else if(val==98)
     750:	c2 36       	cpi	r28, 0x62	; 98
     752:	d1 05       	cpc	r29, r1
     754:	b1 f4       	brne	.+44     	; 0x782 <__stack+0x323>
		{x--;
     756:	80 91 cd 00 	lds	r24, 0x00CD
     75a:	90 91 ce 00 	lds	r25, 0x00CE
     75e:	01 97       	sbiw	r24, 0x01	; 1
     760:	90 93 ce 00 	sts	0x00CE, r25
     764:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     768:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     76c:	8f 2d       	mov	r24, r15
     76e:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     772:	88 eb       	ldi	r24, 0xB8	; 184
     774:	9b e0       	ldi	r25, 0x0B	; 11
     776:	f8 01       	movw	r30, r16
     778:	31 97       	sbiw	r30, 0x01	; 1
     77a:	f1 f7       	brne	.-4      	; 0x778 <__stack+0x319>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     77c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     77e:	d9 f7       	brne	.-10     	; 0x776 <__stack+0x317>
     780:	2b c0       	rjmp	.+86     	; 0x7d8 <__stack+0x379>
		_delay_ms(300);	
		}
		else if(val==99)
     782:	c3 36       	cpi	r28, 0x63	; 99
     784:	d1 05       	cpc	r29, r1
     786:	b1 f4       	brne	.+44     	; 0x7b4 <__stack+0x355>
		{x--;
     788:	80 91 cd 00 	lds	r24, 0x00CD
     78c:	90 91 ce 00 	lds	r25, 0x00CE
     790:	01 97       	sbiw	r24, 0x01	; 1
     792:	90 93 ce 00 	sts	0x00CE, r25
     796:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     79a:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     79e:	8f 2d       	mov	r24, r15
     7a0:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     7a4:	88 eb       	ldi	r24, 0xB8	; 184
     7a6:	9b e0       	ldi	r25, 0x0B	; 11
     7a8:	f8 01       	movw	r30, r16
     7aa:	31 97       	sbiw	r30, 0x01	; 1
     7ac:	f1 f7       	brne	.-4      	; 0x7aa <__stack+0x34b>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7ae:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7b0:	d9 f7       	brne	.-10     	; 0x7a8 <__stack+0x349>
     7b2:	12 c0       	rjmp	.+36     	; 0x7d8 <__stack+0x379>
		_delay_ms(300);	
		}
		if(val==100)
     7b4:	c4 36       	cpi	r28, 0x64	; 100
     7b6:	d1 05       	cpc	r29, r1
     7b8:	79 f4       	brne	.+30     	; 0x7d8 <__stack+0x379>
		{
		disp_cmd(x);
     7ba:	80 91 cd 00 	lds	r24, 0x00CD
     7be:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     7c2:	8f 2d       	mov	r24, r15
     7c4:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     7c8:	88 eb       	ldi	r24, 0xB8	; 184
     7ca:	9b e0       	ldi	r25, 0x0B	; 11
     7cc:	f8 01       	movw	r30, r16
     7ce:	31 97       	sbiw	r30, 0x01	; 1
     7d0:	f1 f7       	brne	.-4      	; 0x7ce <__stack+0x36f>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7d2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7d4:	d9 f7       	brne	.-10     	; 0x7cc <__stack+0x36d>
     7d6:	88 c0       	rjmp	.+272    	; 0x8e8 <__stack+0x489>
		_delay_ms(300);		
		}
		else if(val==101)
     7d8:	c5 36       	cpi	r28, 0x65	; 101
     7da:	d1 05       	cpc	r29, r1
     7dc:	b1 f4       	brne	.+44     	; 0x80a <__stack+0x3ab>
		{x--;
     7de:	80 91 cd 00 	lds	r24, 0x00CD
     7e2:	90 91 ce 00 	lds	r25, 0x00CE
     7e6:	01 97       	sbiw	r24, 0x01	; 1
     7e8:	90 93 ce 00 	sts	0x00CE, r25
     7ec:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     7f0:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     7f4:	8f 2d       	mov	r24, r15
     7f6:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     7fa:	88 eb       	ldi	r24, 0xB8	; 184
     7fc:	9b e0       	ldi	r25, 0x0B	; 11
     7fe:	f8 01       	movw	r30, r16
     800:	31 97       	sbiw	r30, 0x01	; 1
     802:	f1 f7       	brne	.-4      	; 0x800 <__stack+0x3a1>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     804:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     806:	d9 f7       	brne	.-10     	; 0x7fe <__stack+0x39f>
     808:	2b c0       	rjmp	.+86     	; 0x860 <__stack+0x401>
		_delay_ms(300);	
		}
		else if(val==102)
     80a:	c6 36       	cpi	r28, 0x66	; 102
     80c:	d1 05       	cpc	r29, r1
     80e:	b1 f4       	brne	.+44     	; 0x83c <__stack+0x3dd>
		{x--;
     810:	80 91 cd 00 	lds	r24, 0x00CD
     814:	90 91 ce 00 	lds	r25, 0x00CE
     818:	01 97       	sbiw	r24, 0x01	; 1
     81a:	90 93 ce 00 	sts	0x00CE, r25
     81e:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     822:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     826:	8f 2d       	mov	r24, r15
     828:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     82c:	88 eb       	ldi	r24, 0xB8	; 184
     82e:	9b e0       	ldi	r25, 0x0B	; 11
     830:	f8 01       	movw	r30, r16
     832:	31 97       	sbiw	r30, 0x01	; 1
     834:	f1 f7       	brne	.-4      	; 0x832 <__stack+0x3d3>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     836:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     838:	d9 f7       	brne	.-10     	; 0x830 <__stack+0x3d1>
     83a:	12 c0       	rjmp	.+36     	; 0x860 <__stack+0x401>
		_delay_ms(300);	
		}
		if(val==103)
     83c:	c7 36       	cpi	r28, 0x67	; 103
     83e:	d1 05       	cpc	r29, r1
     840:	79 f4       	brne	.+30     	; 0x860 <__stack+0x401>
		{
		disp_cmd(x);
     842:	80 91 cd 00 	lds	r24, 0x00CD
     846:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     84a:	8f 2d       	mov	r24, r15
     84c:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     850:	88 eb       	ldi	r24, 0xB8	; 184
     852:	9b e0       	ldi	r25, 0x0B	; 11
     854:	f8 01       	movw	r30, r16
     856:	31 97       	sbiw	r30, 0x01	; 1
     858:	f1 f7       	brne	.-4      	; 0x856 <__stack+0x3f7>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     85a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     85c:	d9 f7       	brne	.-10     	; 0x854 <__stack+0x3f5>
     85e:	88 c0       	rjmp	.+272    	; 0x970 <__stack+0x511>
		_delay_ms(300);		
		}
		else if(val==104)
     860:	c8 36       	cpi	r28, 0x68	; 104
     862:	d1 05       	cpc	r29, r1
     864:	b1 f4       	brne	.+44     	; 0x892 <__stack+0x433>
		{x--;
     866:	80 91 cd 00 	lds	r24, 0x00CD
     86a:	90 91 ce 00 	lds	r25, 0x00CE
     86e:	01 97       	sbiw	r24, 0x01	; 1
     870:	90 93 ce 00 	sts	0x00CE, r25
     874:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     878:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     87c:	8f 2d       	mov	r24, r15
     87e:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     882:	88 eb       	ldi	r24, 0xB8	; 184
     884:	9b e0       	ldi	r25, 0x0B	; 11
     886:	f8 01       	movw	r30, r16
     888:	31 97       	sbiw	r30, 0x01	; 1
     88a:	f1 f7       	brne	.-4      	; 0x888 <__stack+0x429>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     88c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     88e:	d9 f7       	brne	.-10     	; 0x886 <__stack+0x427>
     890:	2b c0       	rjmp	.+86     	; 0x8e8 <__stack+0x489>
		_delay_ms(300);	
		}
		else if(val==105)
     892:	c9 36       	cpi	r28, 0x69	; 105
     894:	d1 05       	cpc	r29, r1
     896:	b1 f4       	brne	.+44     	; 0x8c4 <__stack+0x465>
		{x--;
     898:	80 91 cd 00 	lds	r24, 0x00CD
     89c:	90 91 ce 00 	lds	r25, 0x00CE
     8a0:	01 97       	sbiw	r24, 0x01	; 1
     8a2:	90 93 ce 00 	sts	0x00CE, r25
     8a6:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     8aa:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     8ae:	8f 2d       	mov	r24, r15
     8b0:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     8b4:	88 eb       	ldi	r24, 0xB8	; 184
     8b6:	9b e0       	ldi	r25, 0x0B	; 11
     8b8:	f8 01       	movw	r30, r16
     8ba:	31 97       	sbiw	r30, 0x01	; 1
     8bc:	f1 f7       	brne	.-4      	; 0x8ba <__stack+0x45b>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8be:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8c0:	d9 f7       	brne	.-10     	; 0x8b8 <__stack+0x459>
     8c2:	12 c0       	rjmp	.+36     	; 0x8e8 <__stack+0x489>
		_delay_ms(300);	
		}
		if(val==106)
     8c4:	ca 36       	cpi	r28, 0x6A	; 106
     8c6:	d1 05       	cpc	r29, r1
     8c8:	79 f4       	brne	.+30     	; 0x8e8 <__stack+0x489>
		{
		disp_cmd(x);
     8ca:	80 91 cd 00 	lds	r24, 0x00CD
     8ce:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     8d2:	8f 2d       	mov	r24, r15
     8d4:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     8d8:	88 eb       	ldi	r24, 0xB8	; 184
     8da:	9b e0       	ldi	r25, 0x0B	; 11
     8dc:	f8 01       	movw	r30, r16
     8de:	31 97       	sbiw	r30, 0x01	; 1
     8e0:	f1 f7       	brne	.-4      	; 0x8de <__stack+0x47f>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8e2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8e4:	d9 f7       	brne	.-10     	; 0x8dc <__stack+0x47d>
     8e6:	88 c0       	rjmp	.+272    	; 0x9f8 <__stack+0x599>
		_delay_ms(300);		
		}
		else if(val==107)
     8e8:	cb 36       	cpi	r28, 0x6B	; 107
     8ea:	d1 05       	cpc	r29, r1
     8ec:	b1 f4       	brne	.+44     	; 0x91a <__stack+0x4bb>
		{x--;
     8ee:	80 91 cd 00 	lds	r24, 0x00CD
     8f2:	90 91 ce 00 	lds	r25, 0x00CE
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	90 93 ce 00 	sts	0x00CE, r25
     8fc:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     900:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     904:	8f 2d       	mov	r24, r15
     906:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     90a:	88 eb       	ldi	r24, 0xB8	; 184
     90c:	9b e0       	ldi	r25, 0x0B	; 11
     90e:	f8 01       	movw	r30, r16
     910:	31 97       	sbiw	r30, 0x01	; 1
     912:	f1 f7       	brne	.-4      	; 0x910 <__stack+0x4b1>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     914:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     916:	d9 f7       	brne	.-10     	; 0x90e <__stack+0x4af>
     918:	2b c0       	rjmp	.+86     	; 0x970 <__stack+0x511>
		_delay_ms(300);	
		}
		else if(val==108)
     91a:	cc 36       	cpi	r28, 0x6C	; 108
     91c:	d1 05       	cpc	r29, r1
     91e:	b1 f4       	brne	.+44     	; 0x94c <__stack+0x4ed>
		{x--;
     920:	80 91 cd 00 	lds	r24, 0x00CD
     924:	90 91 ce 00 	lds	r25, 0x00CE
     928:	01 97       	sbiw	r24, 0x01	; 1
     92a:	90 93 ce 00 	sts	0x00CE, r25
     92e:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     932:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     936:	8f 2d       	mov	r24, r15
     938:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     93c:	88 eb       	ldi	r24, 0xB8	; 184
     93e:	9b e0       	ldi	r25, 0x0B	; 11
     940:	f8 01       	movw	r30, r16
     942:	31 97       	sbiw	r30, 0x01	; 1
     944:	f1 f7       	brne	.-4      	; 0x942 <__stack+0x4e3>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     946:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     948:	d9 f7       	brne	.-10     	; 0x940 <__stack+0x4e1>
     94a:	12 c0       	rjmp	.+36     	; 0x970 <__stack+0x511>
		_delay_ms(300);	
		}
		if(val==109)
     94c:	cd 36       	cpi	r28, 0x6D	; 109
     94e:	d1 05       	cpc	r29, r1
     950:	79 f4       	brne	.+30     	; 0x970 <__stack+0x511>
		{
		disp_cmd(x);
     952:	80 91 cd 00 	lds	r24, 0x00CD
     956:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     95a:	8f 2d       	mov	r24, r15
     95c:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     960:	88 eb       	ldi	r24, 0xB8	; 184
     962:	9b e0       	ldi	r25, 0x0B	; 11
     964:	f8 01       	movw	r30, r16
     966:	31 97       	sbiw	r30, 0x01	; 1
     968:	f1 f7       	brne	.-4      	; 0x966 <__stack+0x507>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     96a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     96c:	d9 f7       	brne	.-10     	; 0x964 <__stack+0x505>
     96e:	8f c0       	rjmp	.+286    	; 0xa8e <__stack+0x62f>
		_delay_ms(300);		
		}
		else if(val==110)
     970:	ce 36       	cpi	r28, 0x6E	; 110
     972:	d1 05       	cpc	r29, r1
     974:	b1 f4       	brne	.+44     	; 0x9a2 <__stack+0x543>
		{x--;
     976:	80 91 cd 00 	lds	r24, 0x00CD
     97a:	90 91 ce 00 	lds	r25, 0x00CE
     97e:	01 97       	sbiw	r24, 0x01	; 1
     980:	90 93 ce 00 	sts	0x00CE, r25
     984:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     988:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     98c:	8f 2d       	mov	r24, r15
     98e:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     992:	88 eb       	ldi	r24, 0xB8	; 184
     994:	9b e0       	ldi	r25, 0x0B	; 11
     996:	f8 01       	movw	r30, r16
     998:	31 97       	sbiw	r30, 0x01	; 1
     99a:	f1 f7       	brne	.-4      	; 0x998 <__stack+0x539>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     99c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     99e:	d9 f7       	brne	.-10     	; 0x996 <__stack+0x537>
     9a0:	2b c0       	rjmp	.+86     	; 0x9f8 <__stack+0x599>
		_delay_ms(300);	
		}
		else if(val==111)
     9a2:	cf 36       	cpi	r28, 0x6F	; 111
     9a4:	d1 05       	cpc	r29, r1
     9a6:	b1 f4       	brne	.+44     	; 0x9d4 <__stack+0x575>
		{x--;
     9a8:	80 91 cd 00 	lds	r24, 0x00CD
     9ac:	90 91 ce 00 	lds	r25, 0x00CE
     9b0:	01 97       	sbiw	r24, 0x01	; 1
     9b2:	90 93 ce 00 	sts	0x00CE, r25
     9b6:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     9ba:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     9be:	8f 2d       	mov	r24, r15
     9c0:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     9c4:	88 eb       	ldi	r24, 0xB8	; 184
     9c6:	9b e0       	ldi	r25, 0x0B	; 11
     9c8:	f8 01       	movw	r30, r16
     9ca:	31 97       	sbiw	r30, 0x01	; 1
     9cc:	f1 f7       	brne	.-4      	; 0x9ca <__stack+0x56b>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9ce:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9d0:	d9 f7       	brne	.-10     	; 0x9c8 <__stack+0x569>
     9d2:	12 c0       	rjmp	.+36     	; 0x9f8 <__stack+0x599>
		_delay_ms(300);	
		}
		if(val==112)
     9d4:	c0 37       	cpi	r28, 0x70	; 112
     9d6:	d1 05       	cpc	r29, r1
     9d8:	79 f4       	brne	.+30     	; 0x9f8 <__stack+0x599>
		{
		disp_cmd(x);
     9da:	80 91 cd 00 	lds	r24, 0x00CD
     9de:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     9e2:	8f 2d       	mov	r24, r15
     9e4:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     9e8:	88 eb       	ldi	r24, 0xB8	; 184
     9ea:	9b e0       	ldi	r25, 0x0B	; 11
     9ec:	f8 01       	movw	r30, r16
     9ee:	31 97       	sbiw	r30, 0x01	; 1
     9f0:	f1 f7       	brne	.-4      	; 0x9ee <__stack+0x58f>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9f2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9f4:	d9 f7       	brne	.-10     	; 0x9ec <__stack+0x58d>
     9f6:	a1 c0       	rjmp	.+322    	; 0xb3a <__stack+0x6db>
		_delay_ms(300);		
		}
		else if(val==113)
     9f8:	c1 37       	cpi	r28, 0x71	; 113
     9fa:	d1 05       	cpc	r29, r1
     9fc:	b1 f4       	brne	.+44     	; 0xa2a <__stack+0x5cb>
		{x--;
     9fe:	80 91 cd 00 	lds	r24, 0x00CD
     a02:	90 91 ce 00 	lds	r25, 0x00CE
     a06:	01 97       	sbiw	r24, 0x01	; 1
     a08:	90 93 ce 00 	sts	0x00CE, r25
     a0c:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     a10:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     a14:	8f 2d       	mov	r24, r15
     a16:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     a1a:	88 eb       	ldi	r24, 0xB8	; 184
     a1c:	9b e0       	ldi	r25, 0x0B	; 11
     a1e:	f8 01       	movw	r30, r16
     a20:	31 97       	sbiw	r30, 0x01	; 1
     a22:	f1 f7       	brne	.-4      	; 0xa20 <__stack+0x5c1>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a24:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a26:	d9 f7       	brne	.-10     	; 0xa1e <__stack+0x5bf>
     a28:	44 c0       	rjmp	.+136    	; 0xab2 <__stack+0x653>
		_delay_ms(300);	
		}
		else if(val==114)
     a2a:	c2 37       	cpi	r28, 0x72	; 114
     a2c:	d1 05       	cpc	r29, r1
     a2e:	b1 f4       	brne	.+44     	; 0xa5c <__stack+0x5fd>
		{x--;
     a30:	80 91 cd 00 	lds	r24, 0x00CD
     a34:	90 91 ce 00 	lds	r25, 0x00CE
     a38:	01 97       	sbiw	r24, 0x01	; 1
     a3a:	90 93 ce 00 	sts	0x00CE, r25
     a3e:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     a42:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     a46:	8f 2d       	mov	r24, r15
     a48:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     a4c:	88 eb       	ldi	r24, 0xB8	; 184
     a4e:	9b e0       	ldi	r25, 0x0B	; 11
     a50:	f8 01       	movw	r30, r16
     a52:	31 97       	sbiw	r30, 0x01	; 1
     a54:	f1 f7       	brne	.-4      	; 0xa52 <__stack+0x5f3>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a56:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a58:	d9 f7       	brne	.-10     	; 0xa50 <__stack+0x5f1>
     a5a:	2b c0       	rjmp	.+86     	; 0xab2 <__stack+0x653>
		_delay_ms(300);	
		}
		else if(val==115)
     a5c:	c3 37       	cpi	r28, 0x73	; 115
     a5e:	d1 05       	cpc	r29, r1
     a60:	b1 f4       	brne	.+44     	; 0xa8e <__stack+0x62f>
		{x--;
     a62:	80 91 cd 00 	lds	r24, 0x00CD
     a66:	90 91 ce 00 	lds	r25, 0x00CE
     a6a:	01 97       	sbiw	r24, 0x01	; 1
     a6c:	90 93 ce 00 	sts	0x00CE, r25
     a70:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     a74:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     a78:	8f 2d       	mov	r24, r15
     a7a:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     a7e:	88 eb       	ldi	r24, 0xB8	; 184
     a80:	9b e0       	ldi	r25, 0x0B	; 11
     a82:	f8 01       	movw	r30, r16
     a84:	31 97       	sbiw	r30, 0x01	; 1
     a86:	f1 f7       	brne	.-4      	; 0xa84 <__stack+0x625>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a88:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a8a:	d9 f7       	brne	.-10     	; 0xa82 <__stack+0x623>
     a8c:	12 c0       	rjmp	.+36     	; 0xab2 <__stack+0x653>
		_delay_ms(300);	
		}
		if(val==116)
     a8e:	c4 37       	cpi	r28, 0x74	; 116
     a90:	d1 05       	cpc	r29, r1
     a92:	79 f4       	brne	.+30     	; 0xab2 <__stack+0x653>
		{
		disp_cmd(x);
     a94:	80 91 cd 00 	lds	r24, 0x00CD
     a98:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     a9c:	8f 2d       	mov	r24, r15
     a9e:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     aa2:	88 eb       	ldi	r24, 0xB8	; 184
     aa4:	9b e0       	ldi	r25, 0x0B	; 11
     aa6:	f8 01       	movw	r30, r16
     aa8:	31 97       	sbiw	r30, 0x01	; 1
     aaa:	f1 f7       	brne	.-4      	; 0xaa8 <__stack+0x649>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     aac:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     aae:	d9 f7       	brne	.-10     	; 0xaa6 <__stack+0x647>
     ab0:	8e c0       	rjmp	.+284    	; 0xbce <__stack+0x76f>
		_delay_ms(300);		
		}
		else if(val==117)
     ab2:	c5 37       	cpi	r28, 0x75	; 117
     ab4:	d1 05       	cpc	r29, r1
     ab6:	b1 f4       	brne	.+44     	; 0xae4 <__stack+0x685>
		{x--;
     ab8:	80 91 cd 00 	lds	r24, 0x00CD
     abc:	90 91 ce 00 	lds	r25, 0x00CE
     ac0:	01 97       	sbiw	r24, 0x01	; 1
     ac2:	90 93 ce 00 	sts	0x00CE, r25
     ac6:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     aca:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     ace:	8f 2d       	mov	r24, r15
     ad0:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     ad4:	88 eb       	ldi	r24, 0xB8	; 184
     ad6:	9b e0       	ldi	r25, 0x0B	; 11
     ad8:	f8 01       	movw	r30, r16
     ada:	31 97       	sbiw	r30, 0x01	; 1
     adc:	f1 f7       	brne	.-4      	; 0xada <__stack+0x67b>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ade:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ae0:	d9 f7       	brne	.-10     	; 0xad8 <__stack+0x679>
     ae2:	2b c0       	rjmp	.+86     	; 0xb3a <__stack+0x6db>
		_delay_ms(300);	
		}
		else if(val==118)
     ae4:	c6 37       	cpi	r28, 0x76	; 118
     ae6:	d1 05       	cpc	r29, r1
     ae8:	b1 f4       	brne	.+44     	; 0xb16 <__stack+0x6b7>
		{x--;
     aea:	80 91 cd 00 	lds	r24, 0x00CD
     aee:	90 91 ce 00 	lds	r25, 0x00CE
     af2:	01 97       	sbiw	r24, 0x01	; 1
     af4:	90 93 ce 00 	sts	0x00CE, r25
     af8:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     afc:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     b00:	8f 2d       	mov	r24, r15
     b02:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     b06:	88 eb       	ldi	r24, 0xB8	; 184
     b08:	9b e0       	ldi	r25, 0x0B	; 11
     b0a:	f8 01       	movw	r30, r16
     b0c:	31 97       	sbiw	r30, 0x01	; 1
     b0e:	f1 f7       	brne	.-4      	; 0xb0c <__stack+0x6ad>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b10:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b12:	d9 f7       	brne	.-10     	; 0xb0a <__stack+0x6ab>
     b14:	12 c0       	rjmp	.+36     	; 0xb3a <__stack+0x6db>
		_delay_ms(300);	
		}
		if(val==119)
     b16:	c7 37       	cpi	r28, 0x77	; 119
     b18:	d1 05       	cpc	r29, r1
     b1a:	79 f4       	brne	.+30     	; 0xb3a <__stack+0x6db>
		{
		disp_cmd(x);
     b1c:	80 91 cd 00 	lds	r24, 0x00CD
     b20:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     b24:	8f 2d       	mov	r24, r15
     b26:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     b2a:	88 eb       	ldi	r24, 0xB8	; 184
     b2c:	9b e0       	ldi	r25, 0x0B	; 11
     b2e:	f8 01       	movw	r30, r16
     b30:	31 97       	sbiw	r30, 0x01	; 1
     b32:	f1 f7       	brne	.-4      	; 0xb30 <__stack+0x6d1>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b34:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b36:	d9 f7       	brne	.-10     	; 0xb2e <__stack+0x6cf>
     b38:	4a c0       	rjmp	.+148    	; 0xbce <__stack+0x76f>
		_delay_ms(300);		
		}
		else if(val==120)
     b3a:	c8 37       	cpi	r28, 0x78	; 120
     b3c:	d1 05       	cpc	r29, r1
     b3e:	b1 f4       	brne	.+44     	; 0xb6c <__stack+0x70d>
		{x--;
     b40:	80 91 cd 00 	lds	r24, 0x00CD
     b44:	90 91 ce 00 	lds	r25, 0x00CE
     b48:	01 97       	sbiw	r24, 0x01	; 1
     b4a:	90 93 ce 00 	sts	0x00CE, r25
     b4e:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     b52:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     b56:	8f 2d       	mov	r24, r15
     b58:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     b5c:	88 eb       	ldi	r24, 0xB8	; 184
     b5e:	9b e0       	ldi	r25, 0x0B	; 11
     b60:	f8 01       	movw	r30, r16
     b62:	31 97       	sbiw	r30, 0x01	; 1
     b64:	f1 f7       	brne	.-4      	; 0xb62 <__stack+0x703>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b66:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b68:	d9 f7       	brne	.-10     	; 0xb60 <__stack+0x701>
     b6a:	31 c0       	rjmp	.+98     	; 0xbce <__stack+0x76f>
		_delay_ms(300);	
		}
		else if(val==121)
     b6c:	c9 37       	cpi	r28, 0x79	; 121
     b6e:	d1 05       	cpc	r29, r1
     b70:	b1 f4       	brne	.+44     	; 0xb9e <__stack+0x73f>
		{x--;
     b72:	80 91 cd 00 	lds	r24, 0x00CD
     b76:	90 91 ce 00 	lds	r25, 0x00CE
     b7a:	01 97       	sbiw	r24, 0x01	; 1
     b7c:	90 93 ce 00 	sts	0x00CE, r25
     b80:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     b84:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     b88:	8f 2d       	mov	r24, r15
     b8a:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     b8e:	88 eb       	ldi	r24, 0xB8	; 184
     b90:	9b e0       	ldi	r25, 0x0B	; 11
     b92:	f8 01       	movw	r30, r16
     b94:	31 97       	sbiw	r30, 0x01	; 1
     b96:	f1 f7       	brne	.-4      	; 0xb94 <__stack+0x735>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b98:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b9a:	d9 f7       	brne	.-10     	; 0xb92 <__stack+0x733>
     b9c:	18 c0       	rjmp	.+48     	; 0xbce <__stack+0x76f>
		_delay_ms(300);	
		}
		else if(val==122)
     b9e:	ca 37       	cpi	r28, 0x7A	; 122
     ba0:	d1 05       	cpc	r29, r1
     ba2:	a9 f4       	brne	.+42     	; 0xbce <__stack+0x76f>
		{x--;
     ba4:	80 91 cd 00 	lds	r24, 0x00CD
     ba8:	90 91 ce 00 	lds	r25, 0x00CE
     bac:	01 97       	sbiw	r24, 0x01	; 1
     bae:	90 93 ce 00 	sts	0x00CE, r25
     bb2:	80 93 cd 00 	sts	0x00CD, r24
		disp_cmd(x);
     bb6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     bba:	8f 2d       	mov	r24, r15
     bbc:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     bc0:	88 eb       	ldi	r24, 0xB8	; 184
     bc2:	9b e0       	ldi	r25, 0x0B	; 11
     bc4:	f8 01       	movw	r30, r16
     bc6:	31 97       	sbiw	r30, 0x01	; 1
     bc8:	f1 f7       	brne	.-4      	; 0xbc6 <__stack+0x767>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bca:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bcc:	d9 f7       	brne	.-10     	; 0xbc4 <__stack+0x765>
		_delay_ms(300);	
		}		
		x++;
     bce:	80 91 cd 00 	lds	r24, 0x00CD
     bd2:	90 91 ce 00 	lds	r25, 0x00CE
     bd6:	01 96       	adiw	r24, 0x01	; 1
     bd8:	90 93 ce 00 	sts	0x00CE, r25
     bdc:	80 93 cd 00 	sts	0x00CD, r24
	}
	if((val>=48) && (val<=57))
     be0:	ce 01       	movw	r24, r28
     be2:	c0 97       	sbiw	r24, 0x30	; 48
     be4:	0a 97       	sbiw	r24, 0x0a	; 10
     be6:	08 f0       	brcs	.+2      	; 0xbea <__stack+0x78b>
     be8:	8f c0       	rjmp	.+286    	; 0xd08 <__stack+0x8a9>
	{
	if(val==49)
     bea:	c1 33       	cpi	r28, 0x31	; 49
     bec:	d1 05       	cpc	r29, r1
     bee:	79 f4       	brne	.+30     	; 0xc0e <__stack+0x7af>
		{
		disp_cmd(x);
     bf0:	80 91 cd 00 	lds	r24, 0x00CD
     bf4:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     bf8:	8f 2d       	mov	r24, r15
     bfa:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     bfe:	88 eb       	ldi	r24, 0xB8	; 184
     c00:	9b e0       	ldi	r25, 0x0B	; 11
     c02:	f8 01       	movw	r30, r16
     c04:	31 97       	sbiw	r30, 0x01	; 1
     c06:	f1 f7       	brne	.-4      	; 0xc04 <__stack+0x7a5>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c08:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c0a:	d9 f7       	brne	.-10     	; 0xc02 <__stack+0x7a3>
     c0c:	48 c0       	rjmp	.+144    	; 0xc9e <__stack+0x83f>
		_delay_ms(300);		
		}
	 if(val==50)
     c0e:	c2 33       	cpi	r28, 0x32	; 50
     c10:	d1 05       	cpc	r29, r1
     c12:	79 f4       	brne	.+30     	; 0xc32 <__stack+0x7d3>
		{
		disp_cmd(x);
     c14:	80 91 cd 00 	lds	r24, 0x00CD
     c18:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     c1c:	8f 2d       	mov	r24, r15
     c1e:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     c22:	88 eb       	ldi	r24, 0xB8	; 184
     c24:	9b e0       	ldi	r25, 0x0B	; 11
     c26:	f8 01       	movw	r30, r16
     c28:	31 97       	sbiw	r30, 0x01	; 1
     c2a:	f1 f7       	brne	.-4      	; 0xc28 <__stack+0x7c9>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c2c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c2e:	d9 f7       	brne	.-10     	; 0xc26 <__stack+0x7c7>
     c30:	48 c0       	rjmp	.+144    	; 0xcc2 <__stack+0x863>
		_delay_ms(300);	
		}
	if(val==51)
     c32:	c3 33       	cpi	r28, 0x33	; 51
     c34:	d1 05       	cpc	r29, r1
     c36:	79 f4       	brne	.+30     	; 0xc56 <__stack+0x7f7>
		{
		disp_cmd(x);
     c38:	80 91 cd 00 	lds	r24, 0x00CD
     c3c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     c40:	8f 2d       	mov	r24, r15
     c42:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     c46:	88 eb       	ldi	r24, 0xB8	; 184
     c48:	9b e0       	ldi	r25, 0x0B	; 11
     c4a:	f8 01       	movw	r30, r16
     c4c:	31 97       	sbiw	r30, 0x01	; 1
     c4e:	f1 f7       	brne	.-4      	; 0xc4c <__stack+0x7ed>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c50:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c52:	d9 f7       	brne	.-10     	; 0xc4a <__stack+0x7eb>
     c54:	48 c0       	rjmp	.+144    	; 0xce6 <__stack+0x887>
		_delay_ms(300);	
		}
	if(val==53)
     c56:	c5 33       	cpi	r28, 0x35	; 53
     c58:	d1 05       	cpc	r29, r1
     c5a:	79 f4       	brne	.+30     	; 0xc7a <__stack+0x81b>
		{
		disp_cmd(x);
     c5c:	80 91 cd 00 	lds	r24, 0x00CD
     c60:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     c64:	8f 2d       	mov	r24, r15
     c66:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     c6a:	88 eb       	ldi	r24, 0xB8	; 184
     c6c:	9b e0       	ldi	r25, 0x0B	; 11
     c6e:	f8 01       	movw	r30, r16
     c70:	31 97       	sbiw	r30, 0x01	; 1
     c72:	f1 f7       	brne	.-4      	; 0xc70 <__stack+0x811>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c74:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c76:	d9 f7       	brne	.-10     	; 0xc6e <__stack+0x80f>
     c78:	58 c0       	rjmp	.+176    	; 0xd2a <__stack+0x8cb>
		_delay_ms(300);	
		}	
	if(val==54)
     c7a:	c6 33       	cpi	r28, 0x36	; 54
     c7c:	d1 05       	cpc	r29, r1
     c7e:	79 f4       	brne	.+30     	; 0xc9e <__stack+0x83f>
		{
		disp_cmd(x);
     c80:	80 91 cd 00 	lds	r24, 0x00CD
     c84:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     c88:	8f 2d       	mov	r24, r15
     c8a:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     c8e:	88 eb       	ldi	r24, 0xB8	; 184
     c90:	9b e0       	ldi	r25, 0x0B	; 11
     c92:	f8 01       	movw	r30, r16
     c94:	31 97       	sbiw	r30, 0x01	; 1
     c96:	f1 f7       	brne	.-4      	; 0xc94 <__stack+0x835>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c98:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c9a:	d9 f7       	brne	.-10     	; 0xc92 <__stack+0x833>
     c9c:	46 c0       	rjmp	.+140    	; 0xd2a <__stack+0x8cb>
		_delay_ms(300);		
		}
	 if(val==55)
     c9e:	c7 33       	cpi	r28, 0x37	; 55
     ca0:	d1 05       	cpc	r29, r1
     ca2:	79 f4       	brne	.+30     	; 0xcc2 <__stack+0x863>
		{
		disp_cmd(x);
     ca4:	80 91 cd 00 	lds	r24, 0x00CD
     ca8:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     cac:	8f 2d       	mov	r24, r15
     cae:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     cb2:	88 eb       	ldi	r24, 0xB8	; 184
     cb4:	9b e0       	ldi	r25, 0x0B	; 11
     cb6:	f8 01       	movw	r30, r16
     cb8:	31 97       	sbiw	r30, 0x01	; 1
     cba:	f1 f7       	brne	.-4      	; 0xcb8 <__stack+0x859>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     cbc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     cbe:	d9 f7       	brne	.-10     	; 0xcb6 <__stack+0x857>
     cc0:	34 c0       	rjmp	.+104    	; 0xd2a <__stack+0x8cb>
		_delay_ms(300);	
		}
	if(val==56)
     cc2:	c8 33       	cpi	r28, 0x38	; 56
     cc4:	d1 05       	cpc	r29, r1
     cc6:	79 f4       	brne	.+30     	; 0xce6 <__stack+0x887>
		{
		disp_cmd(x);
     cc8:	80 91 cd 00 	lds	r24, 0x00CD
     ccc:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     cd0:	8f 2d       	mov	r24, r15
     cd2:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     cd6:	88 eb       	ldi	r24, 0xB8	; 184
     cd8:	9b e0       	ldi	r25, 0x0B	; 11
     cda:	f8 01       	movw	r30, r16
     cdc:	31 97       	sbiw	r30, 0x01	; 1
     cde:	f1 f7       	brne	.-4      	; 0xcdc <__stack+0x87d>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ce0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ce2:	d9 f7       	brne	.-10     	; 0xcda <__stack+0x87b>
     ce4:	22 c0       	rjmp	.+68     	; 0xd2a <__stack+0x8cb>
		_delay_ms(300);	
		}
	if(val==52)
     ce6:	e4 97       	sbiw	r28, 0x34	; 52
     ce8:	01 f5       	brne	.+64     	; 0xd2a <__stack+0x8cb>
		{
		disp_cmd(x);
     cea:	80 91 cd 00 	lds	r24, 0x00CD
     cee:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(val);
     cf2:	8f 2d       	mov	r24, r15
     cf4:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     cf8:	88 eb       	ldi	r24, 0xB8	; 184
     cfa:	9b e0       	ldi	r25, 0x0B	; 11
     cfc:	f8 01       	movw	r30, r16
     cfe:	31 97       	sbiw	r30, 0x01	; 1
     d00:	f1 f7       	brne	.-4      	; 0xcfe <__stack+0x89f>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d02:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d04:	d9 f7       	brne	.-10     	; 0xcfc <__stack+0x89d>
     d06:	11 c0       	rjmp	.+34     	; 0xd2a <__stack+0x8cb>
		_delay_ms(300);	
		}		
		x++;
	}	
	else if(val==91)
     d08:	cb 35       	cpi	r28, 0x5B	; 91
     d0a:	d1 05       	cpc	r29, r1
     d0c:	c1 f4       	brne	.+48     	; 0xd3e <__stack+0x8df>
		{
		disp_cmd(x);
     d0e:	80 91 cd 00 	lds	r24, 0x00CD
     d12:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		disp_data(' ');
     d16:	80 e2       	ldi	r24, 0x20	; 32
     d18:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     d1c:	88 eb       	ldi	r24, 0xB8	; 184
     d1e:	9b e0       	ldi	r25, 0x0B	; 11
     d20:	f8 01       	movw	r30, r16
     d22:	31 97       	sbiw	r30, 0x01	; 1
     d24:	f1 f7       	brne	.-4      	; 0xd22 <__stack+0x8c3>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d26:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d28:	d9 f7       	brne	.-10     	; 0xd20 <__stack+0x8c1>
		_delay_ms(300);		
		x++;
     d2a:	80 91 cd 00 	lds	r24, 0x00CD
     d2e:	90 91 ce 00 	lds	r25, 0x00CE
     d32:	01 96       	adiw	r24, 0x01	; 1
     d34:	90 93 ce 00 	sts	0x00CE, r25
     d38:	80 93 cd 00 	sts	0x00CD, r24
     d3c:	2e c0       	rjmp	.+92     	; 0xd9a <__stack+0x93b>
		}
	else if(val==92)
     d3e:	cc 35       	cpi	r28, 0x5C	; 92
     d40:	d1 05       	cpc	r29, r1
     d42:	b1 f4       	brne	.+44     	; 0xd70 <__stack+0x911>
	{	x--;
     d44:	80 91 cd 00 	lds	r24, 0x00CD
     d48:	90 91 ce 00 	lds	r25, 0x00CE
     d4c:	01 97       	sbiw	r24, 0x01	; 1
     d4e:	90 93 ce 00 	sts	0x00CE, r25
     d52:	80 93 cd 00 	sts	0x00CD, r24
			disp_cmd(x);
     d56:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			disp_data(' ');
     d5a:	80 e2       	ldi	r24, 0x20	; 32
     d5c:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
     d60:	80 e1       	ldi	r24, 0x10	; 16
     d62:	97 e2       	ldi	r25, 0x27	; 39
     d64:	f8 01       	movw	r30, r16
     d66:	31 97       	sbiw	r30, 0x01	; 1
     d68:	f1 f7       	brne	.-4      	; 0xd66 <__stack+0x907>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d6a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d6c:	d9 f7       	brne	.-10     	; 0xd64 <__stack+0x905>
     d6e:	15 c0       	rjmp	.+42     	; 0xd9a <__stack+0x93b>
			_delay_ms(1000);
	}
	else if(val==93)
     d70:	cd 35       	cpi	r28, 0x5D	; 93
     d72:	d1 05       	cpc	r29, r1
     d74:	91 f4       	brne	.+36     	; 0xd9a <__stack+0x93b>
	{	x=0x80;
     d76:	b0 92 ce 00 	sts	0x00CE, r11
     d7a:	a0 92 cd 00 	sts	0x00CD, r10
			disp_cmd(x);
     d7e:	80 e8       	ldi	r24, 0x80	; 128
     d80:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			LCD_string("                ");
     d84:	82 e8       	ldi	r24, 0x82	; 130
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
     d8c:	88 e8       	ldi	r24, 0x88	; 136
     d8e:	93 e1       	ldi	r25, 0x13	; 19
     d90:	f8 01       	movw	r30, r16
     d92:	31 97       	sbiw	r30, 0x01	; 1
     d94:	f1 f7       	brne	.-4      	; 0xd92 <__stack+0x933>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d96:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d98:	d9 f7       	brne	.-10     	; 0xd90 <__stack+0x931>


void msgrcv()
{
unsigned int val,h=1;
while(h)
     d9a:	cd 28       	or	r12, r13
     d9c:	09 f0       	breq	.+2      	; 0xda0 <__stack+0x941>
     d9e:	33 ca       	rjmp	.-2970   	; 0x206 <msgrcv+0x46>
			disp_cmd(x);
			LCD_string("                ");
			_delay_ms(500);
	}
}
}
     da0:	df 91       	pop	r29
     da2:	cf 91       	pop	r28
     da4:	1f 91       	pop	r17
     da6:	0f 91       	pop	r16
     da8:	ff 90       	pop	r15
     daa:	ef 90       	pop	r14
     dac:	df 90       	pop	r13
     dae:	cf 90       	pop	r12
     db0:	bf 90       	pop	r11
     db2:	af 90       	pop	r10
     db4:	9f 90       	pop	r9
     db6:	8f 90       	pop	r8
     db8:	7f 90       	pop	r7
     dba:	6f 90       	pop	r6
     dbc:	5f 90       	pop	r5
     dbe:	4f 90       	pop	r4
     dc0:	08 95       	ret

00000dc2 <pass>:


//////////////////////////////

unsigned int pass()
{int i=1;
     dc2:	4e e0       	ldi	r20, 0x0E	; 14
     dc4:	22 ee       	ldi	r18, 0xE2	; 226
     dc6:	34 e0       	ldi	r19, 0x04	; 4
while(i==1)
	{	PORTB=0x0e;
     dc8:	48 bb       	out	0x18, r20	; 24
     dca:	c9 01       	movw	r24, r18
     dcc:	01 97       	sbiw	r24, 0x01	; 1
     dce:	f1 f7       	brne	.-4      	; 0xdcc <pass+0xa>
		_delay_ms(5);
		if(PINA==0x0e)
     dd0:	89 b3       	in	r24, 0x19	; 25
     dd2:	8e 30       	cpi	r24, 0x0E	; 14
     dd4:	71 f4       	brne	.+28     	; 0xdf2 <pass+0x30>
     dd6:	80 e1       	ldi	r24, 0x10	; 16
     dd8:	97 e2       	ldi	r25, 0x27	; 39
     dda:	29 e1       	ldi	r18, 0x19	; 25
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	f9 01       	movw	r30, r18
     de0:	31 97       	sbiw	r30, 0x01	; 1
     de2:	f1 f7       	brne	.-4      	; 0xde0 <pass+0x1e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     de4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     de6:	d9 f7       	brne	.-10     	; 0xdde <pass+0x1c>
		{i=0;_delay_ms(1000); usart_putch(t); return 'A';}
     de8:	80 91 cf 00 	lds	r24, 0x00CF
    return UDR; // return the byte
}
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
     dec:	5d 9b       	sbis	0x0b, 5	; 11
     dee:	fe cf       	rjmp	.-4      	; 0xdec <pass+0x2a>
     df0:	36 c0       	rjmp	.+108    	; 0xe5e <pass+0x9c>
while(i==1)
	{	PORTB=0x0e;
		_delay_ms(5);
		if(PINA==0x0e)
		{i=0;_delay_ms(1000); usart_putch(t); return 'A';}
		if(PINA==0x0d)
     df2:	89 b3       	in	r24, 0x19	; 25
     df4:	8d 30       	cpi	r24, 0x0D	; 13
     df6:	79 f4       	brne	.+30     	; 0xe16 <pass+0x54>
     df8:	80 e1       	ldi	r24, 0x10	; 16
     dfa:	97 e2       	ldi	r25, 0x27	; 39
     dfc:	29 e1       	ldi	r18, 0x19	; 25
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	f9 01       	movw	r30, r18
     e02:	31 97       	sbiw	r30, 0x01	; 1
     e04:	f1 f7       	brne	.-4      	; 0xe02 <pass+0x40>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e06:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e08:	d9 f7       	brne	.-10     	; 0xe00 <pass+0x3e>
		{i=0;_delay_ms(1000); usart_putch(t+1); return 'A';}
     e0a:	80 91 cf 00 	lds	r24, 0x00CF
    return UDR; // return the byte
}
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
     e0e:	5d 9b       	sbis	0x0b, 5	; 11
     e10:	fe cf       	rjmp	.-4      	; 0xe0e <pass+0x4c>
	{	PORTB=0x0e;
		_delay_ms(5);
		if(PINA==0x0e)
		{i=0;_delay_ms(1000); usart_putch(t); return 'A';}
		if(PINA==0x0d)
		{i=0;_delay_ms(1000); usart_putch(t+1); return 'A';}
     e12:	8f 5f       	subi	r24, 0xFF	; 255
     e14:	24 c0       	rjmp	.+72     	; 0xe5e <pass+0x9c>
		if(PINA==0x0b)
     e16:	89 b3       	in	r24, 0x19	; 25
     e18:	8b 30       	cpi	r24, 0x0B	; 11
     e1a:	79 f4       	brne	.+30     	; 0xe3a <pass+0x78>
     e1c:	80 e1       	ldi	r24, 0x10	; 16
     e1e:	97 e2       	ldi	r25, 0x27	; 39
     e20:	29 e1       	ldi	r18, 0x19	; 25
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	f9 01       	movw	r30, r18
     e26:	31 97       	sbiw	r30, 0x01	; 1
     e28:	f1 f7       	brne	.-4      	; 0xe26 <pass+0x64>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e2a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e2c:	d9 f7       	brne	.-10     	; 0xe24 <pass+0x62>
		{i=0;_delay_ms(1000); usart_putch(t+2); return 'A';}
     e2e:	80 91 cf 00 	lds	r24, 0x00CF
    return UDR; // return the byte
}
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
     e32:	5d 9b       	sbis	0x0b, 5	; 11
     e34:	fe cf       	rjmp	.-4      	; 0xe32 <pass+0x70>
		if(PINA==0x0e)
		{i=0;_delay_ms(1000); usart_putch(t); return 'A';}
		if(PINA==0x0d)
		{i=0;_delay_ms(1000); usart_putch(t+1); return 'A';}
		if(PINA==0x0b)
		{i=0;_delay_ms(1000); usart_putch(t+2); return 'A';}
     e36:	8e 5f       	subi	r24, 0xFE	; 254
     e38:	12 c0       	rjmp	.+36     	; 0xe5e <pass+0x9c>
		if(PINA==0x07)
     e3a:	89 b3       	in	r24, 0x19	; 25
     e3c:	87 30       	cpi	r24, 0x07	; 7
     e3e:	09 f0       	breq	.+2      	; 0xe42 <pass+0x80>
     e40:	c3 cf       	rjmp	.-122    	; 0xdc8 <pass+0x6>
     e42:	80 e1       	ldi	r24, 0x10	; 16
     e44:	97 e2       	ldi	r25, 0x27	; 39
     e46:	29 e1       	ldi	r18, 0x19	; 25
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	f9 01       	movw	r30, r18
     e4c:	31 97       	sbiw	r30, 0x01	; 1
     e4e:	f1 f7       	brne	.-4      	; 0xe4c <pass+0x8a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e50:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e52:	d9 f7       	brne	.-10     	; 0xe4a <pass+0x88>
		{i=0;_delay_ms(1000); usart_putch(t+3); return 'A';}
     e54:	80 91 cf 00 	lds	r24, 0x00CF
    return UDR; // return the byte
}
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
     e58:	5d 9b       	sbis	0x0b, 5	; 11
     e5a:	fe cf       	rjmp	.-4      	; 0xe58 <pass+0x96>
		if(PINA==0x0d)
		{i=0;_delay_ms(1000); usart_putch(t+1); return 'A';}
		if(PINA==0x0b)
		{i=0;_delay_ms(1000); usart_putch(t+2); return 'A';}
		if(PINA==0x07)
		{i=0;_delay_ms(1000); usart_putch(t+3); return 'A';}
     e5c:	8d 5f       	subi	r24, 0xFD	; 253

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
   {
   }
   UDR=send;
     e5e:	8c b9       	out	0x0c, r24	; 12
		if(PINA==0x0b)
		{i=0;_delay_ms(1000); usart_putch(t+2); return 'A';}
		if(PINA==0x07)
		{i=0;_delay_ms(1000); usart_putch(t+3); return 'A';}
	}
}
     e60:	81 e4       	ldi	r24, 0x41	; 65
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	08 95       	ret

00000e66 <printc>:
	}
  }
}

void printc()
{//	disp_cmd(x);	
     e66:	80 91 da 00 	lds	r24, 0x00DA
     e6a:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
disp_data(c);
usart_putch(c);
     e6e:	80 91 da 00 	lds	r24, 0x00DA
    return UDR; // return the byte
}
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
     e72:	5d 9b       	sbis	0x0b, 5	; 11
     e74:	fe cf       	rjmp	.-4      	; 0xe72 <printc+0xc>
   {
   }
   UDR=send;
     e76:	8c b9       	out	0x0c, r24	; 12
     e78:	84 ed       	ldi	r24, 0xD4	; 212
     e7a:	90 e3       	ldi	r25, 0x30	; 48
     e7c:	01 97       	sbiw	r24, 0x01	; 1
     e7e:	f1 f7       	brne	.-4      	; 0xe7c <printc+0x16>
void printc()
{//	disp_cmd(x);	
disp_data(c);
usart_putch(c);
_delay_ms(50);
}
     e80:	08 95       	ret

00000e82 <key>:


//////////////////////////////

void key()
{int h=1;
     e82:	2f 92       	push	r2
     e84:	3f 92       	push	r3
     e86:	4f 92       	push	r4
     e88:	5f 92       	push	r5
     e8a:	6f 92       	push	r6
     e8c:	7f 92       	push	r7
     e8e:	8f 92       	push	r8
     e90:	9f 92       	push	r9
     e92:	af 92       	push	r10
     e94:	bf 92       	push	r11
     e96:	cf 92       	push	r12
     e98:	df 92       	push	r13
     e9a:	ef 92       	push	r14
     e9c:	ff 92       	push	r15
     e9e:	0f 93       	push	r16
     ea0:	1f 93       	push	r17
     ea2:	cf 93       	push	r28
     ea4:	df 93       	push	r29
     ea6:	f9 e1       	ldi	r31, 0x19	; 25
     ea8:	cf 2e       	mov	r12, r31
     eaa:	d1 2c       	mov	r13, r1
						}
					_delay_ms(500);
						for(int j=0;j<100;j++)
		 				 {
							if(PINA == 0x07)
							{ c=90;
     eac:	ea e5       	ldi	r30, 0x5A	; 90
     eae:	2e 2e       	mov	r2, r30
     eb0:	31 2c       	mov	r3, r1

void key()
{int h=1;
  while(h)
  {
	{	PORTB=0x0e;
     eb2:	8e e0       	ldi	r24, 0x0E	; 14
     eb4:	88 bb       	out	0x18, r24	; 24
     eb6:	82 ee       	ldi	r24, 0xE2	; 226
     eb8:	94 e0       	ldi	r25, 0x04	; 4
     eba:	01 97       	sbiw	r24, 0x01	; 1
     ebc:	f1 f7       	brne	.-4      	; 0xeba <key+0x38>
		_delay_ms(5);
		if(PINA==0x0e)
     ebe:	89 b3       	in	r24, 0x19	; 25
     ec0:	8e 30       	cpi	r24, 0x0E	; 14
     ec2:	09 f0       	breq	.+2      	; 0xec6 <key+0x44>
     ec4:	9f c0       	rjmp	.+318    	; 0x1004 <key+0x182>
		{ c=65;
     ec6:	81 e4       	ldi	r24, 0x41	; 65
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	90 93 db 00 	sts	0x00DB, r25
     ece:	80 93 da 00 	sts	0x00DA, r24
			disp_cmd(x);		
     ed2:	80 91 cd 00 	lds	r24, 0x00CD
     ed6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			if(LUC==2)
     eda:	80 91 d1 00 	lds	r24, 0x00D1
     ede:	90 91 d2 00 	lds	r25, 0x00D2
     ee2:	02 97       	sbiw	r24, 0x02	; 2
     ee4:	11 f4       	brne	.+4      	; 0xeea <key+0x68>
			{
			printc();
     ee6:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(LUC==1)
     eea:	80 91 d1 00 	lds	r24, 0x00D1
     eee:	90 91 d2 00 	lds	r25, 0x00D2
     ef2:	01 97       	sbiw	r24, 0x01	; 1
     ef4:	41 f4       	brne	.+16     	; 0xf06 <key+0x84>
			{c=97;
     ef6:	81 e6       	ldi	r24, 0x61	; 97
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	90 93 db 00 	sts	0x00DB, r25
     efe:	80 93 da 00 	sts	0x00DA, r24
			printc();
     f02:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(NUM==1)
     f06:	80 91 dc 00 	lds	r24, 0x00DC
     f0a:	90 91 dd 00 	lds	r25, 0x00DD
     f0e:	01 97       	sbiw	r24, 0x01	; 1
     f10:	41 f4       	brne	.+16     	; 0xf22 <key+0xa0>
			{
			c=49;
     f12:	81 e3       	ldi	r24, 0x31	; 49
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	90 93 db 00 	sts	0x00DB, r25
     f1a:	80 93 da 00 	sts	0x00DA, r24
			printc();
     f1e:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
     f22:	88 e8       	ldi	r24, 0x88	; 136
     f24:	93 e1       	ldi	r25, 0x13	; 19
     f26:	f6 01       	movw	r30, r12
     f28:	31 97       	sbiw	r30, 0x01	; 1
     f2a:	f1 f7       	brne	.-4      	; 0xf28 <key+0xa6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f2c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f2e:	d9 f7       	brne	.-10     	; 0xf26 <key+0xa4>
     f30:	00 e0       	ldi	r16, 0x00	; 0
     f32:	10 e0       	ldi	r17, 0x00	; 0
			}
			_delay_ms(500);	
		for(int i=0;i<400;i++)
  		 {
			if(PINA == 0x0e)
			{ c=66;
     f34:	72 e4       	ldi	r23, 0x42	; 66
     f36:	67 2e       	mov	r6, r23
     f38:	71 2c       	mov	r7, r1
				}
				_delay_ms(500);
			for(int j=0;j<4000;j++)
		 		 {
					if(PINA == 0x0e)
					{ c=67;
     f3a:	63 e4       	ldi	r22, 0x43	; 67
     f3c:	86 2e       	mov	r8, r22
     f3e:	91 2c       	mov	r9, r1
		 				if(LUC==2)
						{
						printc();
						}
						if(LUC==1)
						{c=99;
     f40:	53 e6       	ldi	r21, 0x63	; 99
     f42:	a5 2e       	mov	r10, r21
     f44:	b1 2c       	mov	r11, r1
				if(LUC==2)
				{
				printc();
				}
				if(LUC==1)
				{c=98;
     f46:	42 e6       	ldi	r20, 0x62	; 98
     f48:	e4 2e       	mov	r14, r20
     f4a:	f1 2c       	mov	r15, r1
			printc();
			}
			_delay_ms(500);	
		for(int i=0;i<400;i++)
  		 {
			if(PINA == 0x0e)
     f4c:	89 b3       	in	r24, 0x19	; 25
     f4e:	8e 30       	cpi	r24, 0x0E	; 14
     f50:	09 f0       	breq	.+2      	; 0xf54 <key+0xd2>
     f52:	50 c0       	rjmp	.+160    	; 0xff4 <key+0x172>
			{ c=66;
     f54:	70 92 db 00 	sts	0x00DB, r7
     f58:	60 92 da 00 	sts	0x00DA, r6
				disp_cmd(x);		
     f5c:	80 91 cd 00 	lds	r24, 0x00CD
     f60:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
				if(LUC==2)
     f64:	80 91 d1 00 	lds	r24, 0x00D1
     f68:	90 91 d2 00 	lds	r25, 0x00D2
     f6c:	02 97       	sbiw	r24, 0x02	; 2
     f6e:	11 f4       	brne	.+4      	; 0xf74 <key+0xf2>
				{
				printc();
     f70:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
				}
				if(LUC==1)
     f74:	80 91 d1 00 	lds	r24, 0x00D1
     f78:	90 91 d2 00 	lds	r25, 0x00D2
     f7c:	01 97       	sbiw	r24, 0x01	; 1
     f7e:	31 f4       	brne	.+12     	; 0xf8c <key+0x10a>
				{c=98;
     f80:	f0 92 db 00 	sts	0x00DB, r15
     f84:	e0 92 da 00 	sts	0x00DA, r14
				printc();
     f88:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
     f8c:	88 e8       	ldi	r24, 0x88	; 136
     f8e:	93 e1       	ldi	r25, 0x13	; 19
     f90:	f6 01       	movw	r30, r12
     f92:	31 97       	sbiw	r30, 0x01	; 1
     f94:	f1 f7       	brne	.-4      	; 0xf92 <key+0x110>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f96:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f98:	d9 f7       	brne	.-10     	; 0xf90 <key+0x10e>
     f9a:	c0 e0       	ldi	r28, 0x00	; 0
     f9c:	d0 e0       	ldi	r29, 0x00	; 0
				}
				_delay_ms(500);
			for(int j=0;j<4000;j++)
		 		 {
					if(PINA == 0x0e)
     f9e:	89 b3       	in	r24, 0x19	; 25
     fa0:	8e 30       	cpi	r24, 0x0E	; 14
     fa2:	19 f5       	brne	.+70     	; 0xfea <key+0x168>
					{ c=67;
     fa4:	90 92 db 00 	sts	0x00DB, r9
     fa8:	80 92 da 00 	sts	0x00DA, r8
						disp_cmd(x);		
     fac:	80 91 cd 00 	lds	r24, 0x00CD
     fb0:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		 				if(LUC==2)
     fb4:	80 91 d1 00 	lds	r24, 0x00D1
     fb8:	90 91 d2 00 	lds	r25, 0x00D2
     fbc:	02 97       	sbiw	r24, 0x02	; 2
     fbe:	11 f4       	brne	.+4      	; 0xfc4 <key+0x142>
						{
						printc();
     fc0:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
						}
						if(LUC==1)
     fc4:	80 91 d1 00 	lds	r24, 0x00D1
     fc8:	90 91 d2 00 	lds	r25, 0x00D2
     fcc:	01 97       	sbiw	r24, 0x01	; 1
     fce:	31 f4       	brne	.+12     	; 0xfdc <key+0x15a>
						{c=99;
     fd0:	b0 92 db 00 	sts	0x00DB, r11
     fd4:	a0 92 da 00 	sts	0x00DA, r10
						printc();
     fd8:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
     fdc:	88 e8       	ldi	r24, 0x88	; 136
     fde:	93 e1       	ldi	r25, 0x13	; 19
     fe0:	f6 01       	movw	r30, r12
     fe2:	31 97       	sbiw	r30, 0x01	; 1
     fe4:	f1 f7       	brne	.-4      	; 0xfe2 <key+0x160>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fe6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fe8:	d9 f7       	brne	.-10     	; 0xfe0 <key+0x15e>
				if(LUC==1)
				{c=98;
				printc();
				}
				_delay_ms(500);
			for(int j=0;j<4000;j++)
     fea:	21 96       	adiw	r28, 0x01	; 1
     fec:	8f e0       	ldi	r24, 0x0F	; 15
     fee:	c0 3a       	cpi	r28, 0xA0	; 160
     ff0:	d8 07       	cpc	r29, r24
     ff2:	a9 f6       	brne	.-86     	; 0xf9e <key+0x11c>
			{
			c=49;
			printc();
			}
			_delay_ms(500);	
		for(int i=0;i<400;i++)
     ff4:	0f 5f       	subi	r16, 0xFF	; 255
     ff6:	1f 4f       	sbci	r17, 0xFF	; 255
     ff8:	91 e0       	ldi	r25, 0x01	; 1
     ffa:	00 39       	cpi	r16, 0x90	; 144
     ffc:	19 07       	cpc	r17, r25
     ffe:	09 f0       	breq	.+2      	; 0x1002 <key+0x180>
    1000:	a5 cf       	rjmp	.-182    	; 0xf4c <key+0xca>
    1002:	e8 c1       	rjmp	.+976    	; 0x13d4 <key+0x552>
	
			}
		  }
		  x++;
		}			
	else if(PINA == 0x0d)
    1004:	89 b3       	in	r24, 0x19	; 25
    1006:	8d 30       	cpi	r24, 0x0D	; 13
    1008:	09 f0       	breq	.+2      	; 0x100c <key+0x18a>
    100a:	9f c0       	rjmp	.+318    	; 0x114a <key+0x2c8>
		{ c=68;	
    100c:	84 e4       	ldi	r24, 0x44	; 68
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	90 93 db 00 	sts	0x00DB, r25
    1014:	80 93 da 00 	sts	0x00DA, r24
			disp_cmd(x);	
    1018:	80 91 cd 00 	lds	r24, 0x00CD
    101c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			if(LUC==2)
    1020:	80 91 d1 00 	lds	r24, 0x00D1
    1024:	90 91 d2 00 	lds	r25, 0x00D2
    1028:	02 97       	sbiw	r24, 0x02	; 2
    102a:	11 f4       	brne	.+4      	; 0x1030 <key+0x1ae>
			{
			printc();
    102c:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(LUC==1)
    1030:	80 91 d1 00 	lds	r24, 0x00D1
    1034:	90 91 d2 00 	lds	r25, 0x00D2
    1038:	01 97       	sbiw	r24, 0x01	; 1
    103a:	41 f4       	brne	.+16     	; 0x104c <key+0x1ca>
			{c=100;
    103c:	84 e6       	ldi	r24, 0x64	; 100
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	90 93 db 00 	sts	0x00DB, r25
    1044:	80 93 da 00 	sts	0x00DA, r24
			printc();
    1048:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(NUM==1)
    104c:	80 91 dc 00 	lds	r24, 0x00DC
    1050:	90 91 dd 00 	lds	r25, 0x00DD
    1054:	01 97       	sbiw	r24, 0x01	; 1
    1056:	41 f4       	brne	.+16     	; 0x1068 <key+0x1e6>
			{
			c=50;
    1058:	82 e3       	ldi	r24, 0x32	; 50
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	90 93 db 00 	sts	0x00DB, r25
    1060:	80 93 da 00 	sts	0x00DA, r24
			printc();
    1064:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1068:	88 e8       	ldi	r24, 0x88	; 136
    106a:	93 e1       	ldi	r25, 0x13	; 19
    106c:	f6 01       	movw	r30, r12
    106e:	31 97       	sbiw	r30, 0x01	; 1
    1070:	f1 f7       	brne	.-4      	; 0x106e <key+0x1ec>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1072:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1074:	d9 f7       	brne	.-10     	; 0x106c <key+0x1ea>
    1076:	00 e0       	ldi	r16, 0x00	; 0
    1078:	10 e0       	ldi	r17, 0x00	; 0
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x0d)
			{ c=69;			
    107a:	35 e4       	ldi	r19, 0x45	; 69
    107c:	63 2e       	mov	r6, r19
    107e:	71 2c       	mov	r7, r1
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x0d)
					{ c=70;
    1080:	26 e4       	ldi	r18, 0x46	; 70
    1082:	82 2e       	mov	r8, r18
    1084:	91 2c       	mov	r9, r1
					if(LUC==2)
					{
					printc();
					}
					if(LUC==1)
					{c=102;
    1086:	96 e6       	ldi	r25, 0x66	; 102
    1088:	a9 2e       	mov	r10, r25
    108a:	b1 2c       	mov	r11, r1
				if(LUC==2)
				{
				printc();
				}
				if(LUC==1)
				{c=101;
    108c:	85 e6       	ldi	r24, 0x65	; 101
    108e:	e8 2e       	mov	r14, r24
    1090:	f1 2c       	mov	r15, r1
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x0d)
    1092:	89 b3       	in	r24, 0x19	; 25
    1094:	8d 30       	cpi	r24, 0x0D	; 13
    1096:	09 f0       	breq	.+2      	; 0x109a <key+0x218>
    1098:	50 c0       	rjmp	.+160    	; 0x113a <key+0x2b8>
			{ c=69;			
    109a:	70 92 db 00 	sts	0x00DB, r7
    109e:	60 92 da 00 	sts	0x00DA, r6
				disp_cmd(x);	
    10a2:	80 91 cd 00 	lds	r24, 0x00CD
    10a6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
				if(LUC==2)
    10aa:	80 91 d1 00 	lds	r24, 0x00D1
    10ae:	90 91 d2 00 	lds	r25, 0x00D2
    10b2:	02 97       	sbiw	r24, 0x02	; 2
    10b4:	11 f4       	brne	.+4      	; 0x10ba <key+0x238>
				{
				printc();
    10b6:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
				}
				if(LUC==1)
    10ba:	80 91 d1 00 	lds	r24, 0x00D1
    10be:	90 91 d2 00 	lds	r25, 0x00D2
    10c2:	01 97       	sbiw	r24, 0x01	; 1
    10c4:	31 f4       	brne	.+12     	; 0x10d2 <key+0x250>
				{c=101;
    10c6:	f0 92 db 00 	sts	0x00DB, r15
    10ca:	e0 92 da 00 	sts	0x00DA, r14
				printc();
    10ce:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    10d2:	88 e8       	ldi	r24, 0x88	; 136
    10d4:	93 e1       	ldi	r25, 0x13	; 19
    10d6:	f6 01       	movw	r30, r12
    10d8:	31 97       	sbiw	r30, 0x01	; 1
    10da:	f1 f7       	brne	.-4      	; 0x10d8 <key+0x256>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10dc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10de:	d9 f7       	brne	.-10     	; 0x10d6 <key+0x254>
    10e0:	c0 e0       	ldi	r28, 0x00	; 0
    10e2:	d0 e0       	ldi	r29, 0x00	; 0
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x0d)
    10e4:	89 b3       	in	r24, 0x19	; 25
    10e6:	8d 30       	cpi	r24, 0x0D	; 13
    10e8:	19 f5       	brne	.+70     	; 0x1130 <key+0x2ae>
					{ c=70;
    10ea:	90 92 db 00 	sts	0x00DB, r9
    10ee:	80 92 da 00 	sts	0x00DA, r8
						disp_cmd(x);		
    10f2:	80 91 cd 00 	lds	r24, 0x00CD
    10f6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
					if(LUC==2)
    10fa:	80 91 d1 00 	lds	r24, 0x00D1
    10fe:	90 91 d2 00 	lds	r25, 0x00D2
    1102:	02 97       	sbiw	r24, 0x02	; 2
    1104:	11 f4       	brne	.+4      	; 0x110a <key+0x288>
					{
					printc();
    1106:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
					}
					if(LUC==1)
    110a:	80 91 d1 00 	lds	r24, 0x00D1
    110e:	90 91 d2 00 	lds	r25, 0x00D2
    1112:	01 97       	sbiw	r24, 0x01	; 1
    1114:	31 f4       	brne	.+12     	; 0x1122 <key+0x2a0>
					{c=102;
    1116:	b0 92 db 00 	sts	0x00DB, r11
    111a:	a0 92 da 00 	sts	0x00DA, r10
					printc();
    111e:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1122:	88 e8       	ldi	r24, 0x88	; 136
    1124:	93 e1       	ldi	r25, 0x13	; 19
    1126:	f6 01       	movw	r30, r12
    1128:	31 97       	sbiw	r30, 0x01	; 1
    112a:	f1 f7       	brne	.-4      	; 0x1128 <key+0x2a6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    112c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    112e:	d9 f7       	brne	.-10     	; 0x1126 <key+0x2a4>
				if(LUC==1)
				{c=101;
				printc();
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
    1130:	21 96       	adiw	r28, 0x01	; 1
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	c0 39       	cpi	r28, 0x90	; 144
    1136:	d8 07       	cpc	r29, r24
    1138:	a9 f6       	brne	.-86     	; 0x10e4 <key+0x262>
			{
			c=50;
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
    113a:	0f 5f       	subi	r16, 0xFF	; 255
    113c:	1f 4f       	sbci	r17, 0xFF	; 255
    113e:	9f e0       	ldi	r25, 0x0F	; 15
    1140:	00 3a       	cpi	r16, 0xA0	; 160
    1142:	19 07       	cpc	r17, r25
    1144:	09 f0       	breq	.+2      	; 0x1148 <key+0x2c6>
    1146:	a5 cf       	rjmp	.-182    	; 0x1092 <key+0x210>
    1148:	45 c1       	rjmp	.+650    	; 0x13d4 <key+0x552>
         		 }
			}
          }
		  x++;
		}
			else if(PINA == 0x0b)
    114a:	89 b3       	in	r24, 0x19	; 25
    114c:	8b 30       	cpi	r24, 0x0B	; 11
    114e:	09 f0       	breq	.+2      	; 0x1152 <key+0x2d0>
    1150:	9f c0       	rjmp	.+318    	; 0x1290 <key+0x40e>
		{ c=71;	
    1152:	87 e4       	ldi	r24, 0x47	; 71
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	90 93 db 00 	sts	0x00DB, r25
    115a:	80 93 da 00 	sts	0x00DA, r24
			disp_cmd(x);	
    115e:	80 91 cd 00 	lds	r24, 0x00CD
    1162:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			if(LUC==2)
    1166:	80 91 d1 00 	lds	r24, 0x00D1
    116a:	90 91 d2 00 	lds	r25, 0x00D2
    116e:	02 97       	sbiw	r24, 0x02	; 2
    1170:	11 f4       	brne	.+4      	; 0x1176 <key+0x2f4>
			{
			printc();
    1172:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(LUC==1)
    1176:	80 91 d1 00 	lds	r24, 0x00D1
    117a:	90 91 d2 00 	lds	r25, 0x00D2
    117e:	01 97       	sbiw	r24, 0x01	; 1
    1180:	41 f4       	brne	.+16     	; 0x1192 <key+0x310>
			{c=103;
    1182:	87 e6       	ldi	r24, 0x67	; 103
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	90 93 db 00 	sts	0x00DB, r25
    118a:	80 93 da 00 	sts	0x00DA, r24
			printc();
    118e:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(NUM==1)
    1192:	80 91 dc 00 	lds	r24, 0x00DC
    1196:	90 91 dd 00 	lds	r25, 0x00DD
    119a:	01 97       	sbiw	r24, 0x01	; 1
    119c:	41 f4       	brne	.+16     	; 0x11ae <key+0x32c>
			{
			c=51;
    119e:	83 e3       	ldi	r24, 0x33	; 51
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	90 93 db 00 	sts	0x00DB, r25
    11a6:	80 93 da 00 	sts	0x00DA, r24
			printc();
    11aa:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    11ae:	88 e8       	ldi	r24, 0x88	; 136
    11b0:	93 e1       	ldi	r25, 0x13	; 19
    11b2:	f6 01       	movw	r30, r12
    11b4:	31 97       	sbiw	r30, 0x01	; 1
    11b6:	f1 f7       	brne	.-4      	; 0x11b4 <key+0x332>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11b8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11ba:	d9 f7       	brne	.-10     	; 0x11b2 <key+0x330>
    11bc:	00 e0       	ldi	r16, 0x00	; 0
    11be:	10 e0       	ldi	r17, 0x00	; 0
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x0b)
			{ c=72;			
    11c0:	b8 e4       	ldi	r27, 0x48	; 72
    11c2:	6b 2e       	mov	r6, r27
    11c4:	71 2c       	mov	r7, r1
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x0b)
					{ c=73;
    11c6:	a9 e4       	ldi	r26, 0x49	; 73
    11c8:	8a 2e       	mov	r8, r26
    11ca:	91 2c       	mov	r9, r1
						if(LUC==2)
						{
						printc();
						}
						if(LUC==1)
						{c=105;
    11cc:	f9 e6       	ldi	r31, 0x69	; 105
    11ce:	af 2e       	mov	r10, r31
    11d0:	b1 2c       	mov	r11, r1
				if(LUC==2)
				{
				printc();
				}
				if(LUC==1)
				{c=104;
    11d2:	e8 e6       	ldi	r30, 0x68	; 104
    11d4:	ee 2e       	mov	r14, r30
    11d6:	f1 2c       	mov	r15, r1
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x0b)
    11d8:	89 b3       	in	r24, 0x19	; 25
    11da:	8b 30       	cpi	r24, 0x0B	; 11
    11dc:	09 f0       	breq	.+2      	; 0x11e0 <key+0x35e>
    11de:	50 c0       	rjmp	.+160    	; 0x1280 <key+0x3fe>
			{ c=72;			
    11e0:	70 92 db 00 	sts	0x00DB, r7
    11e4:	60 92 da 00 	sts	0x00DA, r6
				disp_cmd(x);	
    11e8:	80 91 cd 00 	lds	r24, 0x00CD
    11ec:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
				if(LUC==2)
    11f0:	80 91 d1 00 	lds	r24, 0x00D1
    11f4:	90 91 d2 00 	lds	r25, 0x00D2
    11f8:	02 97       	sbiw	r24, 0x02	; 2
    11fa:	11 f4       	brne	.+4      	; 0x1200 <key+0x37e>
				{
				printc();
    11fc:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
				}
				if(LUC==1)
    1200:	80 91 d1 00 	lds	r24, 0x00D1
    1204:	90 91 d2 00 	lds	r25, 0x00D2
    1208:	01 97       	sbiw	r24, 0x01	; 1
    120a:	31 f4       	brne	.+12     	; 0x1218 <key+0x396>
				{c=104;
    120c:	f0 92 db 00 	sts	0x00DB, r15
    1210:	e0 92 da 00 	sts	0x00DA, r14
				printc();
    1214:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1218:	88 e8       	ldi	r24, 0x88	; 136
    121a:	93 e1       	ldi	r25, 0x13	; 19
    121c:	f6 01       	movw	r30, r12
    121e:	31 97       	sbiw	r30, 0x01	; 1
    1220:	f1 f7       	brne	.-4      	; 0x121e <key+0x39c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1222:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1224:	d9 f7       	brne	.-10     	; 0x121c <key+0x39a>
    1226:	c0 e0       	ldi	r28, 0x00	; 0
    1228:	d0 e0       	ldi	r29, 0x00	; 0
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x0b)
    122a:	89 b3       	in	r24, 0x19	; 25
    122c:	8b 30       	cpi	r24, 0x0B	; 11
    122e:	19 f5       	brne	.+70     	; 0x1276 <key+0x3f4>
					{ c=73;
    1230:	90 92 db 00 	sts	0x00DB, r9
    1234:	80 92 da 00 	sts	0x00DA, r8
						disp_cmd(x);		
    1238:	80 91 cd 00 	lds	r24, 0x00CD
    123c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
						if(LUC==2)
    1240:	80 91 d1 00 	lds	r24, 0x00D1
    1244:	90 91 d2 00 	lds	r25, 0x00D2
    1248:	02 97       	sbiw	r24, 0x02	; 2
    124a:	11 f4       	brne	.+4      	; 0x1250 <key+0x3ce>
						{
						printc();
    124c:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
						}
						if(LUC==1)
    1250:	80 91 d1 00 	lds	r24, 0x00D1
    1254:	90 91 d2 00 	lds	r25, 0x00D2
    1258:	01 97       	sbiw	r24, 0x01	; 1
    125a:	31 f4       	brne	.+12     	; 0x1268 <key+0x3e6>
						{c=105;
    125c:	b0 92 db 00 	sts	0x00DB, r11
    1260:	a0 92 da 00 	sts	0x00DA, r10
						printc();
    1264:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1268:	88 e8       	ldi	r24, 0x88	; 136
    126a:	93 e1       	ldi	r25, 0x13	; 19
    126c:	f6 01       	movw	r30, r12
    126e:	31 97       	sbiw	r30, 0x01	; 1
    1270:	f1 f7       	brne	.-4      	; 0x126e <key+0x3ec>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1272:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1274:	d9 f7       	brne	.-10     	; 0x126c <key+0x3ea>
				if(LUC==1)
				{c=104;
				printc();
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
    1276:	21 96       	adiw	r28, 0x01	; 1
    1278:	81 e0       	ldi	r24, 0x01	; 1
    127a:	c0 39       	cpi	r28, 0x90	; 144
    127c:	d8 07       	cpc	r29, r24
    127e:	a9 f6       	brne	.-86     	; 0x122a <key+0x3a8>
			{
			c=51;
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
    1280:	0f 5f       	subi	r16, 0xFF	; 255
    1282:	1f 4f       	sbci	r17, 0xFF	; 255
    1284:	9f e0       	ldi	r25, 0x0F	; 15
    1286:	00 3a       	cpi	r16, 0xA0	; 160
    1288:	19 07       	cpc	r17, r25
    128a:	09 f0       	breq	.+2      	; 0x128e <key+0x40c>
    128c:	a5 cf       	rjmp	.-182    	; 0x11d8 <key+0x356>
    128e:	a2 c0       	rjmp	.+324    	; 0x13d4 <key+0x552>
         		 }
			}
          }
		  x++;
		}
		  	else if(PINA == 0x07)
    1290:	89 b3       	in	r24, 0x19	; 25
    1292:	87 30       	cpi	r24, 0x07	; 7
    1294:	09 f0       	breq	.+2      	; 0x1298 <key+0x416>
    1296:	a7 c0       	rjmp	.+334    	; 0x13e6 <key+0x564>
		{ c=74;	
    1298:	8a e4       	ldi	r24, 0x4A	; 74
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	90 93 db 00 	sts	0x00DB, r25
    12a0:	80 93 da 00 	sts	0x00DA, r24
			disp_cmd(x);	
    12a4:	80 91 cd 00 	lds	r24, 0x00CD
    12a8:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			if(LUC==2)
    12ac:	80 91 d1 00 	lds	r24, 0x00D1
    12b0:	90 91 d2 00 	lds	r25, 0x00D2
    12b4:	02 97       	sbiw	r24, 0x02	; 2
    12b6:	11 f4       	brne	.+4      	; 0x12bc <key+0x43a>
			{
			printc();
    12b8:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(LUC==1)
    12bc:	80 91 d1 00 	lds	r24, 0x00D1
    12c0:	90 91 d2 00 	lds	r25, 0x00D2
    12c4:	01 97       	sbiw	r24, 0x01	; 1
    12c6:	41 f4       	brne	.+16     	; 0x12d8 <key+0x456>
			{c=106;
    12c8:	8a e6       	ldi	r24, 0x6A	; 106
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	90 93 db 00 	sts	0x00DB, r25
    12d0:	80 93 da 00 	sts	0x00DA, r24
			printc();
    12d4:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(NUM==1)
    12d8:	80 91 dc 00 	lds	r24, 0x00DC
    12dc:	90 91 dd 00 	lds	r25, 0x00DD
    12e0:	01 97       	sbiw	r24, 0x01	; 1
    12e2:	41 f4       	brne	.+16     	; 0x12f4 <key+0x472>
			{
			c=52;
    12e4:	84 e3       	ldi	r24, 0x34	; 52
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	90 93 db 00 	sts	0x00DB, r25
    12ec:	80 93 da 00 	sts	0x00DA, r24
			printc();
    12f0:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    12f4:	88 e8       	ldi	r24, 0x88	; 136
    12f6:	93 e1       	ldi	r25, 0x13	; 19
    12f8:	f6 01       	movw	r30, r12
    12fa:	31 97       	sbiw	r30, 0x01	; 1
    12fc:	f1 f7       	brne	.-4      	; 0x12fa <key+0x478>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12fe:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1300:	d9 f7       	brne	.-10     	; 0x12f8 <key+0x476>
    1302:	00 e0       	ldi	r16, 0x00	; 0
    1304:	10 e0       	ldi	r17, 0x00	; 0
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x07)
			{ c=75;			
    1306:	7b e4       	ldi	r23, 0x4B	; 75
    1308:	67 2e       	mov	r6, r23
    130a:	71 2c       	mov	r7, r1
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x07)
					{ c=76;
    130c:	6c e4       	ldi	r22, 0x4C	; 76
    130e:	86 2e       	mov	r8, r22
    1310:	91 2c       	mov	r9, r1
						if(LUC==2)
						{
						printc();
						}
						if(LUC==1)
						{c=108;
    1312:	5c e6       	ldi	r21, 0x6C	; 108
    1314:	a5 2e       	mov	r10, r21
    1316:	b1 2c       	mov	r11, r1
				if(LUC==2)
				{
				printc();
				}
				if(LUC==1)
				{c=107;
    1318:	4b e6       	ldi	r20, 0x6B	; 107
    131a:	e4 2e       	mov	r14, r20
    131c:	f1 2c       	mov	r15, r1
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x07)
    131e:	89 b3       	in	r24, 0x19	; 25
    1320:	87 30       	cpi	r24, 0x07	; 7
    1322:	09 f0       	breq	.+2      	; 0x1326 <key+0x4a4>
    1324:	50 c0       	rjmp	.+160    	; 0x13c6 <key+0x544>
			{ c=75;			
    1326:	70 92 db 00 	sts	0x00DB, r7
    132a:	60 92 da 00 	sts	0x00DA, r6
				disp_cmd(x);	
    132e:	80 91 cd 00 	lds	r24, 0x00CD
    1332:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
				if(LUC==2)
    1336:	80 91 d1 00 	lds	r24, 0x00D1
    133a:	90 91 d2 00 	lds	r25, 0x00D2
    133e:	02 97       	sbiw	r24, 0x02	; 2
    1340:	11 f4       	brne	.+4      	; 0x1346 <key+0x4c4>
				{
				printc();
    1342:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
				}
				if(LUC==1)
    1346:	80 91 d1 00 	lds	r24, 0x00D1
    134a:	90 91 d2 00 	lds	r25, 0x00D2
    134e:	01 97       	sbiw	r24, 0x01	; 1
    1350:	31 f4       	brne	.+12     	; 0x135e <key+0x4dc>
				{c=107;
    1352:	f0 92 db 00 	sts	0x00DB, r15
    1356:	e0 92 da 00 	sts	0x00DA, r14
				printc();
    135a:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    135e:	88 e8       	ldi	r24, 0x88	; 136
    1360:	93 e1       	ldi	r25, 0x13	; 19
    1362:	f6 01       	movw	r30, r12
    1364:	31 97       	sbiw	r30, 0x01	; 1
    1366:	f1 f7       	brne	.-4      	; 0x1364 <key+0x4e2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1368:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    136a:	d9 f7       	brne	.-10     	; 0x1362 <key+0x4e0>
    136c:	c0 e0       	ldi	r28, 0x00	; 0
    136e:	d0 e0       	ldi	r29, 0x00	; 0
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x07)
    1370:	89 b3       	in	r24, 0x19	; 25
    1372:	87 30       	cpi	r24, 0x07	; 7
    1374:	19 f5       	brne	.+70     	; 0x13bc <key+0x53a>
					{ c=76;
    1376:	90 92 db 00 	sts	0x00DB, r9
    137a:	80 92 da 00 	sts	0x00DA, r8
						disp_cmd(x);		
    137e:	80 91 cd 00 	lds	r24, 0x00CD
    1382:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
						if(LUC==2)
    1386:	80 91 d1 00 	lds	r24, 0x00D1
    138a:	90 91 d2 00 	lds	r25, 0x00D2
    138e:	02 97       	sbiw	r24, 0x02	; 2
    1390:	11 f4       	brne	.+4      	; 0x1396 <key+0x514>
						{
						printc();
    1392:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
						}
						if(LUC==1)
    1396:	80 91 d1 00 	lds	r24, 0x00D1
    139a:	90 91 d2 00 	lds	r25, 0x00D2
    139e:	01 97       	sbiw	r24, 0x01	; 1
    13a0:	31 f4       	brne	.+12     	; 0x13ae <key+0x52c>
						{c=108;
    13a2:	b0 92 db 00 	sts	0x00DB, r11
    13a6:	a0 92 da 00 	sts	0x00DA, r10
						printc();
    13aa:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    13ae:	88 e8       	ldi	r24, 0x88	; 136
    13b0:	93 e1       	ldi	r25, 0x13	; 19
    13b2:	f6 01       	movw	r30, r12
    13b4:	31 97       	sbiw	r30, 0x01	; 1
    13b6:	f1 f7       	brne	.-4      	; 0x13b4 <key+0x532>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13b8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13ba:	d9 f7       	brne	.-10     	; 0x13b2 <key+0x530>
				if(LUC==1)
				{c=107;
				printc();
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
    13bc:	21 96       	adiw	r28, 0x01	; 1
    13be:	81 e0       	ldi	r24, 0x01	; 1
    13c0:	c0 39       	cpi	r28, 0x90	; 144
    13c2:	d8 07       	cpc	r29, r24
    13c4:	a9 f6       	brne	.-86     	; 0x1370 <key+0x4ee>
			{
			c=52;
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
    13c6:	0f 5f       	subi	r16, 0xFF	; 255
    13c8:	1f 4f       	sbci	r17, 0xFF	; 255
    13ca:	9f e0       	ldi	r25, 0x0F	; 15
    13cc:	00 3a       	cpi	r16, 0xA0	; 160
    13ce:	19 07       	cpc	r17, r25
    13d0:	09 f0       	breq	.+2      	; 0x13d4 <key+0x552>
    13d2:	a5 cf       	rjmp	.-182    	; 0x131e <key+0x49c>
					_delay_ms(500);
					}
         		 }
			}
          }
		  x++;
    13d4:	80 91 cd 00 	lds	r24, 0x00CD
    13d8:	90 91 ce 00 	lds	r25, 0x00CE
    13dc:	01 96       	adiw	r24, 0x01	; 1
    13de:	90 93 ce 00 	sts	0x00CE, r25
    13e2:	80 93 cd 00 	sts	0x00CD, r24
		}
	}



	{	PORTB=0x0d;
    13e6:	8d e0       	ldi	r24, 0x0D	; 13
    13e8:	88 bb       	out	0x18, r24	; 24
    13ea:	82 ee       	ldi	r24, 0xE2	; 226
    13ec:	94 e0       	ldi	r25, 0x04	; 4
    13ee:	01 97       	sbiw	r24, 0x01	; 1
    13f0:	f1 f7       	brne	.-4      	; 0x13ee <key+0x56c>
		_delay_ms(5);
		if(PINA==0x0e)
    13f2:	89 b3       	in	r24, 0x19	; 25
    13f4:	8e 30       	cpi	r24, 0x0E	; 14
    13f6:	09 f0       	breq	.+2      	; 0x13fa <key+0x578>
    13f8:	9f c0       	rjmp	.+318    	; 0x1538 <key+0x6b6>
		{ c=77;
    13fa:	8d e4       	ldi	r24, 0x4D	; 77
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	90 93 db 00 	sts	0x00DB, r25
    1402:	80 93 da 00 	sts	0x00DA, r24
			disp_cmd(x);		
    1406:	80 91 cd 00 	lds	r24, 0x00CD
    140a:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			if(LUC==2)
    140e:	80 91 d1 00 	lds	r24, 0x00D1
    1412:	90 91 d2 00 	lds	r25, 0x00D2
    1416:	02 97       	sbiw	r24, 0x02	; 2
    1418:	11 f4       	brne	.+4      	; 0x141e <key+0x59c>
			{
			printc();
    141a:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(LUC==1)
    141e:	80 91 d1 00 	lds	r24, 0x00D1
    1422:	90 91 d2 00 	lds	r25, 0x00D2
    1426:	01 97       	sbiw	r24, 0x01	; 1
    1428:	41 f4       	brne	.+16     	; 0x143a <key+0x5b8>
			{c=109;
    142a:	8d e6       	ldi	r24, 0x6D	; 109
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	90 93 db 00 	sts	0x00DB, r25
    1432:	80 93 da 00 	sts	0x00DA, r24
			printc();
    1436:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(NUM==1)
    143a:	80 91 dc 00 	lds	r24, 0x00DC
    143e:	90 91 dd 00 	lds	r25, 0x00DD
    1442:	01 97       	sbiw	r24, 0x01	; 1
    1444:	41 f4       	brne	.+16     	; 0x1456 <key+0x5d4>
			{
			c=53;
    1446:	85 e3       	ldi	r24, 0x35	; 53
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	90 93 db 00 	sts	0x00DB, r25
    144e:	80 93 da 00 	sts	0x00DA, r24
			printc();
    1452:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1456:	88 e8       	ldi	r24, 0x88	; 136
    1458:	93 e1       	ldi	r25, 0x13	; 19
    145a:	f6 01       	movw	r30, r12
    145c:	31 97       	sbiw	r30, 0x01	; 1
    145e:	f1 f7       	brne	.-4      	; 0x145c <key+0x5da>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1460:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1462:	d9 f7       	brne	.-10     	; 0x145a <key+0x5d8>
    1464:	00 e0       	ldi	r16, 0x00	; 0
    1466:	10 e0       	ldi	r17, 0x00	; 0
			}
			_delay_ms(500);
		for(int i=0;i<400;i++)
  		 {
			if(PINA == 0x0e)
			{ c=78;
    1468:	3e e4       	ldi	r19, 0x4E	; 78
    146a:	63 2e       	mov	r6, r19
    146c:	71 2c       	mov	r7, r1
				}
			_delay_ms(500);
			for(int j=0;j<4000;j++)
		 		 {
					if(PINA == 0x0e)
					{ c=79;
    146e:	2f e4       	ldi	r18, 0x4F	; 79
    1470:	82 2e       	mov	r8, r18
    1472:	91 2c       	mov	r9, r1
		 				if(LUC==2)
						{
						printc();
						}
						if(LUC==1)
						{c=111;
    1474:	9f e6       	ldi	r25, 0x6F	; 111
    1476:	a9 2e       	mov	r10, r25
    1478:	b1 2c       	mov	r11, r1
				if(LUC==2)
				{
				printc();
				}
				if(LUC==1)
				{c=110;
    147a:	8e e6       	ldi	r24, 0x6E	; 110
    147c:	e8 2e       	mov	r14, r24
    147e:	f1 2c       	mov	r15, r1
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<400;i++)
  		 {
			if(PINA == 0x0e)
    1480:	89 b3       	in	r24, 0x19	; 25
    1482:	8e 30       	cpi	r24, 0x0E	; 14
    1484:	09 f0       	breq	.+2      	; 0x1488 <key+0x606>
    1486:	50 c0       	rjmp	.+160    	; 0x1528 <key+0x6a6>
			{ c=78;
    1488:	70 92 db 00 	sts	0x00DB, r7
    148c:	60 92 da 00 	sts	0x00DA, r6
				disp_cmd(x);		
    1490:	80 91 cd 00 	lds	r24, 0x00CD
    1494:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
				if(LUC==2)
    1498:	80 91 d1 00 	lds	r24, 0x00D1
    149c:	90 91 d2 00 	lds	r25, 0x00D2
    14a0:	02 97       	sbiw	r24, 0x02	; 2
    14a2:	11 f4       	brne	.+4      	; 0x14a8 <key+0x626>
				{
				printc();
    14a4:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
				}
				if(LUC==1)
    14a8:	80 91 d1 00 	lds	r24, 0x00D1
    14ac:	90 91 d2 00 	lds	r25, 0x00D2
    14b0:	01 97       	sbiw	r24, 0x01	; 1
    14b2:	31 f4       	brne	.+12     	; 0x14c0 <key+0x63e>
				{c=110;
    14b4:	f0 92 db 00 	sts	0x00DB, r15
    14b8:	e0 92 da 00 	sts	0x00DA, r14
				printc();
    14bc:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    14c0:	88 e8       	ldi	r24, 0x88	; 136
    14c2:	93 e1       	ldi	r25, 0x13	; 19
    14c4:	f6 01       	movw	r30, r12
    14c6:	31 97       	sbiw	r30, 0x01	; 1
    14c8:	f1 f7       	brne	.-4      	; 0x14c6 <key+0x644>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14ca:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14cc:	d9 f7       	brne	.-10     	; 0x14c4 <key+0x642>
    14ce:	c0 e0       	ldi	r28, 0x00	; 0
    14d0:	d0 e0       	ldi	r29, 0x00	; 0
				}
			_delay_ms(500);
			for(int j=0;j<4000;j++)
		 		 {
					if(PINA == 0x0e)
    14d2:	89 b3       	in	r24, 0x19	; 25
    14d4:	8e 30       	cpi	r24, 0x0E	; 14
    14d6:	19 f5       	brne	.+70     	; 0x151e <key+0x69c>
					{ c=79;
    14d8:	90 92 db 00 	sts	0x00DB, r9
    14dc:	80 92 da 00 	sts	0x00DA, r8
						disp_cmd(x);		
    14e0:	80 91 cd 00 	lds	r24, 0x00CD
    14e4:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		 				if(LUC==2)
    14e8:	80 91 d1 00 	lds	r24, 0x00D1
    14ec:	90 91 d2 00 	lds	r25, 0x00D2
    14f0:	02 97       	sbiw	r24, 0x02	; 2
    14f2:	11 f4       	brne	.+4      	; 0x14f8 <key+0x676>
						{
						printc();
    14f4:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
						}
						if(LUC==1)
    14f8:	80 91 d1 00 	lds	r24, 0x00D1
    14fc:	90 91 d2 00 	lds	r25, 0x00D2
    1500:	01 97       	sbiw	r24, 0x01	; 1
    1502:	31 f4       	brne	.+12     	; 0x1510 <key+0x68e>
						{c=111;
    1504:	b0 92 db 00 	sts	0x00DB, r11
    1508:	a0 92 da 00 	sts	0x00DA, r10
						printc();
    150c:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1510:	88 e8       	ldi	r24, 0x88	; 136
    1512:	93 e1       	ldi	r25, 0x13	; 19
    1514:	f6 01       	movw	r30, r12
    1516:	31 97       	sbiw	r30, 0x01	; 1
    1518:	f1 f7       	brne	.-4      	; 0x1516 <key+0x694>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    151a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    151c:	d9 f7       	brne	.-10     	; 0x1514 <key+0x692>
				if(LUC==1)
				{c=110;
				printc();
				}
			_delay_ms(500);
			for(int j=0;j<4000;j++)
    151e:	21 96       	adiw	r28, 0x01	; 1
    1520:	8f e0       	ldi	r24, 0x0F	; 15
    1522:	c0 3a       	cpi	r28, 0xA0	; 160
    1524:	d8 07       	cpc	r29, r24
    1526:	a9 f6       	brne	.-86     	; 0x14d2 <key+0x650>
			{
			c=53;
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<400;i++)
    1528:	0f 5f       	subi	r16, 0xFF	; 255
    152a:	1f 4f       	sbci	r17, 0xFF	; 255
    152c:	91 e0       	ldi	r25, 0x01	; 1
    152e:	00 39       	cpi	r16, 0x90	; 144
    1530:	19 07       	cpc	r17, r25
    1532:	09 f0       	breq	.+2      	; 0x1536 <key+0x6b4>
    1534:	a5 cf       	rjmp	.-182    	; 0x1480 <key+0x5fe>
    1536:	50 c2       	rjmp	.+1184   	; 0x19d8 <key+0xb56>
	
			}
		  }
		  x++;
		}			
		else if(PINA == 0x0d)
    1538:	89 b3       	in	r24, 0x19	; 25
    153a:	8d 30       	cpi	r24, 0x0D	; 13
    153c:	09 f0       	breq	.+2      	; 0x1540 <key+0x6be>
    153e:	d4 c0       	rjmp	.+424    	; 0x16e8 <key+0x866>
		{ c=80;	
    1540:	80 e5       	ldi	r24, 0x50	; 80
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	90 93 db 00 	sts	0x00DB, r25
    1548:	80 93 da 00 	sts	0x00DA, r24
			disp_cmd(x);	
    154c:	80 91 cd 00 	lds	r24, 0x00CD
    1550:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			if(LUC==2)
    1554:	80 91 d1 00 	lds	r24, 0x00D1
    1558:	90 91 d2 00 	lds	r25, 0x00D2
    155c:	02 97       	sbiw	r24, 0x02	; 2
    155e:	11 f4       	brne	.+4      	; 0x1564 <key+0x6e2>
			{
			printc();
    1560:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(LUC==1)
    1564:	80 91 d1 00 	lds	r24, 0x00D1
    1568:	90 91 d2 00 	lds	r25, 0x00D2
    156c:	01 97       	sbiw	r24, 0x01	; 1
    156e:	41 f4       	brne	.+16     	; 0x1580 <key+0x6fe>
			{c=112;
    1570:	80 e7       	ldi	r24, 0x70	; 112
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	90 93 db 00 	sts	0x00DB, r25
    1578:	80 93 da 00 	sts	0x00DA, r24
			printc();
    157c:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(NUM==1)
    1580:	80 91 dc 00 	lds	r24, 0x00DC
    1584:	90 91 dd 00 	lds	r25, 0x00DD
    1588:	01 97       	sbiw	r24, 0x01	; 1
    158a:	41 f4       	brne	.+16     	; 0x159c <key+0x71a>
			{
			c=54;
    158c:	86 e3       	ldi	r24, 0x36	; 54
    158e:	90 e0       	ldi	r25, 0x00	; 0
    1590:	90 93 db 00 	sts	0x00DB, r25
    1594:	80 93 da 00 	sts	0x00DA, r24
			printc();
    1598:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    159c:	88 e8       	ldi	r24, 0x88	; 136
    159e:	93 e1       	ldi	r25, 0x13	; 19
    15a0:	f6 01       	movw	r30, r12
    15a2:	31 97       	sbiw	r30, 0x01	; 1
    15a4:	f1 f7       	brne	.-4      	; 0x15a2 <key+0x720>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15a6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15a8:	d9 f7       	brne	.-10     	; 0x15a0 <key+0x71e>
    15aa:	ee 24       	eor	r14, r14
    15ac:	ff 24       	eor	r15, r15
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x0d)
			{ c=81;			
    15ae:	b1 e5       	ldi	r27, 0x51	; 81
    15b0:	4b 2e       	mov	r4, r27
    15b2:	51 2c       	mov	r5, r1
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x0d)
					{ c=82;
    15b4:	a2 e5       	ldi	r26, 0x52	; 82
    15b6:	6a 2e       	mov	r6, r26
    15b8:	71 2c       	mov	r7, r1
						if(LUC==2)
						{
						printc();
						}
						if(LUC==1)
						{c=114;
    15ba:	f2 e7       	ldi	r31, 0x72	; 114
    15bc:	8f 2e       	mov	r8, r31
    15be:	91 2c       	mov	r9, r1
				if(LUC==2)
				{
				printc();
				}
				if(LUC==1)
				{c=113;
    15c0:	e1 e7       	ldi	r30, 0x71	; 113
    15c2:	ae 2e       	mov	r10, r30
    15c4:	b1 2c       	mov	r11, r1
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x0d)
    15c6:	89 b3       	in	r24, 0x19	; 25
    15c8:	8d 30       	cpi	r24, 0x0D	; 13
    15ca:	09 f0       	breq	.+2      	; 0x15ce <key+0x74c>
    15cc:	83 c0       	rjmp	.+262    	; 0x16d4 <key+0x852>
			{ c=81;			
    15ce:	50 92 db 00 	sts	0x00DB, r5
    15d2:	40 92 da 00 	sts	0x00DA, r4
				disp_cmd(x);	
    15d6:	80 91 cd 00 	lds	r24, 0x00CD
    15da:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
				if(LUC==2)
    15de:	80 91 d1 00 	lds	r24, 0x00D1
    15e2:	90 91 d2 00 	lds	r25, 0x00D2
    15e6:	02 97       	sbiw	r24, 0x02	; 2
    15e8:	11 f4       	brne	.+4      	; 0x15ee <key+0x76c>
				{
				printc();
    15ea:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
				}
				if(LUC==1)
    15ee:	80 91 d1 00 	lds	r24, 0x00D1
    15f2:	90 91 d2 00 	lds	r25, 0x00D2
    15f6:	01 97       	sbiw	r24, 0x01	; 1
    15f8:	31 f4       	brne	.+12     	; 0x1606 <key+0x784>
				{c=113;
    15fa:	b0 92 db 00 	sts	0x00DB, r11
    15fe:	a0 92 da 00 	sts	0x00DA, r10
				printc();
    1602:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1606:	88 e8       	ldi	r24, 0x88	; 136
    1608:	93 e1       	ldi	r25, 0x13	; 19
    160a:	f6 01       	movw	r30, r12
    160c:	31 97       	sbiw	r30, 0x01	; 1
    160e:	f1 f7       	brne	.-4      	; 0x160c <key+0x78a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1610:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1612:	d9 f7       	brne	.-10     	; 0x160a <key+0x788>
    1614:	00 e0       	ldi	r16, 0x00	; 0
    1616:	10 e0       	ldi	r17, 0x00	; 0
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x0d)
    1618:	89 b3       	in	r24, 0x19	; 25
    161a:	8d 30       	cpi	r24, 0x0D	; 13
    161c:	09 f0       	breq	.+2      	; 0x1620 <key+0x79e>
    161e:	53 c0       	rjmp	.+166    	; 0x16c6 <key+0x844>
					{ c=82;
    1620:	70 92 db 00 	sts	0x00DB, r7
    1624:	60 92 da 00 	sts	0x00DA, r6
						disp_cmd(x);		
    1628:	80 91 cd 00 	lds	r24, 0x00CD
    162c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
						if(LUC==2)
    1630:	80 91 d1 00 	lds	r24, 0x00D1
    1634:	90 91 d2 00 	lds	r25, 0x00D2
    1638:	02 97       	sbiw	r24, 0x02	; 2
    163a:	11 f4       	brne	.+4      	; 0x1640 <key+0x7be>
						{
						printc();
    163c:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
						}
						if(LUC==1)
    1640:	80 91 d1 00 	lds	r24, 0x00D1
    1644:	90 91 d2 00 	lds	r25, 0x00D2
    1648:	01 97       	sbiw	r24, 0x01	; 1
    164a:	31 f4       	brne	.+12     	; 0x1658 <key+0x7d6>
						{c=114;
    164c:	90 92 db 00 	sts	0x00DB, r9
    1650:	80 92 da 00 	sts	0x00DA, r8
						printc();
    1654:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1658:	88 e8       	ldi	r24, 0x88	; 136
    165a:	93 e1       	ldi	r25, 0x13	; 19
    165c:	f6 01       	movw	r30, r12
    165e:	31 97       	sbiw	r30, 0x01	; 1
    1660:	f1 f7       	brne	.-4      	; 0x165e <key+0x7dc>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1662:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1664:	d9 f7       	brne	.-10     	; 0x165c <key+0x7da>
    1666:	c0 e0       	ldi	r28, 0x00	; 0
    1668:	d0 e0       	ldi	r29, 0x00	; 0
						}
					_delay_ms(500);
						for(int j=0;j<100;j++)
		 				 {
							if(PINA == 0x0d)
    166a:	89 b3       	in	r24, 0x19	; 25
    166c:	8d 30       	cpi	r24, 0x0D	; 13
    166e:	39 f5       	brne	.+78     	; 0x16be <key+0x83c>
							{ c=83;
    1670:	83 e5       	ldi	r24, 0x53	; 83
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	90 93 db 00 	sts	0x00DB, r25
    1678:	80 93 da 00 	sts	0x00DA, r24
								disp_cmd(x);		
    167c:	80 91 cd 00 	lds	r24, 0x00CD
    1680:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
								if(LUC==2)
    1684:	80 91 d1 00 	lds	r24, 0x00D1
    1688:	90 91 d2 00 	lds	r25, 0x00D2
    168c:	02 97       	sbiw	r24, 0x02	; 2
    168e:	11 f4       	brne	.+4      	; 0x1694 <key+0x812>
								{
								printc();
    1690:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
								}
								if(LUC==1)
    1694:	80 91 d1 00 	lds	r24, 0x00D1
    1698:	90 91 d2 00 	lds	r25, 0x00D2
    169c:	01 97       	sbiw	r24, 0x01	; 1
    169e:	41 f4       	brne	.+16     	; 0x16b0 <key+0x82e>
								{c=115;
    16a0:	83 e7       	ldi	r24, 0x73	; 115
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	90 93 db 00 	sts	0x00DB, r25
    16a8:	80 93 da 00 	sts	0x00DA, r24
								printc();
    16ac:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    16b0:	88 e8       	ldi	r24, 0x88	; 136
    16b2:	93 e1       	ldi	r25, 0x13	; 19
    16b4:	f6 01       	movw	r30, r12
    16b6:	31 97       	sbiw	r30, 0x01	; 1
    16b8:	f1 f7       	brne	.-4      	; 0x16b6 <key+0x834>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16ba:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16bc:	d9 f7       	brne	.-10     	; 0x16b4 <key+0x832>
						if(LUC==1)
						{c=114;
						printc();
						}
					_delay_ms(500);
						for(int j=0;j<100;j++)
    16be:	21 96       	adiw	r28, 0x01	; 1
    16c0:	c4 36       	cpi	r28, 0x64	; 100
    16c2:	d1 05       	cpc	r29, r1
    16c4:	91 f6       	brne	.-92     	; 0x166a <key+0x7e8>
				if(LUC==1)
				{c=113;
				printc();
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
    16c6:	0f 5f       	subi	r16, 0xFF	; 255
    16c8:	1f 4f       	sbci	r17, 0xFF	; 255
    16ca:	91 e0       	ldi	r25, 0x01	; 1
    16cc:	00 39       	cpi	r16, 0x90	; 144
    16ce:	19 07       	cpc	r17, r25
    16d0:	09 f0       	breq	.+2      	; 0x16d4 <key+0x852>
    16d2:	a2 cf       	rjmp	.-188    	; 0x1618 <key+0x796>
			{
			c=54;
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
    16d4:	08 94       	sec
    16d6:	e1 1c       	adc	r14, r1
    16d8:	f1 1c       	adc	r15, r1
    16da:	80 ea       	ldi	r24, 0xA0	; 160
    16dc:	e8 16       	cp	r14, r24
    16de:	8f e0       	ldi	r24, 0x0F	; 15
    16e0:	f8 06       	cpc	r15, r24
    16e2:	09 f0       	breq	.+2      	; 0x16e6 <key+0x864>
    16e4:	70 cf       	rjmp	.-288    	; 0x15c6 <key+0x744>
    16e6:	78 c1       	rjmp	.+752    	; 0x19d8 <key+0xb56>
         		 }
			 }
          }
		  x++;
		}
			else if(PINA == 0x0b)
    16e8:	89 b3       	in	r24, 0x19	; 25
    16ea:	8b 30       	cpi	r24, 0x0B	; 11
    16ec:	09 f0       	breq	.+2      	; 0x16f0 <key+0x86e>
    16ee:	9f c0       	rjmp	.+318    	; 0x182e <key+0x9ac>
		{ c=84;	
    16f0:	84 e5       	ldi	r24, 0x54	; 84
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	90 93 db 00 	sts	0x00DB, r25
    16f8:	80 93 da 00 	sts	0x00DA, r24
			disp_cmd(x);	
    16fc:	80 91 cd 00 	lds	r24, 0x00CD
    1700:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			if(LUC==2)
    1704:	80 91 d1 00 	lds	r24, 0x00D1
    1708:	90 91 d2 00 	lds	r25, 0x00D2
    170c:	02 97       	sbiw	r24, 0x02	; 2
    170e:	11 f4       	brne	.+4      	; 0x1714 <key+0x892>
			{
			printc();
    1710:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(LUC==1)
    1714:	80 91 d1 00 	lds	r24, 0x00D1
    1718:	90 91 d2 00 	lds	r25, 0x00D2
    171c:	01 97       	sbiw	r24, 0x01	; 1
    171e:	41 f4       	brne	.+16     	; 0x1730 <key+0x8ae>
			{c=116;
    1720:	84 e7       	ldi	r24, 0x74	; 116
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	90 93 db 00 	sts	0x00DB, r25
    1728:	80 93 da 00 	sts	0x00DA, r24
			printc();
    172c:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(NUM==1)
    1730:	80 91 dc 00 	lds	r24, 0x00DC
    1734:	90 91 dd 00 	lds	r25, 0x00DD
    1738:	01 97       	sbiw	r24, 0x01	; 1
    173a:	41 f4       	brne	.+16     	; 0x174c <key+0x8ca>
			{
			c=55;
    173c:	87 e3       	ldi	r24, 0x37	; 55
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	90 93 db 00 	sts	0x00DB, r25
    1744:	80 93 da 00 	sts	0x00DA, r24
			printc();
    1748:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    174c:	88 e8       	ldi	r24, 0x88	; 136
    174e:	93 e1       	ldi	r25, 0x13	; 19
    1750:	f6 01       	movw	r30, r12
    1752:	31 97       	sbiw	r30, 0x01	; 1
    1754:	f1 f7       	brne	.-4      	; 0x1752 <key+0x8d0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1756:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1758:	d9 f7       	brne	.-10     	; 0x1750 <key+0x8ce>
    175a:	00 e0       	ldi	r16, 0x00	; 0
    175c:	10 e0       	ldi	r17, 0x00	; 0
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x0b)
			{ c=85;			
    175e:	75 e5       	ldi	r23, 0x55	; 85
    1760:	67 2e       	mov	r6, r23
    1762:	71 2c       	mov	r7, r1
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x0b)
					{ c=86;
    1764:	66 e5       	ldi	r22, 0x56	; 86
    1766:	86 2e       	mov	r8, r22
    1768:	91 2c       	mov	r9, r1
						if(LUC==2)
						{
						printc();
						}
						if(LUC==1)
						{c=118;
    176a:	56 e7       	ldi	r21, 0x76	; 118
    176c:	a5 2e       	mov	r10, r21
    176e:	b1 2c       	mov	r11, r1
				if(LUC==2)
				{
				printc();
				}
				if(LUC==1)
				{c=117;
    1770:	45 e7       	ldi	r20, 0x75	; 117
    1772:	e4 2e       	mov	r14, r20
    1774:	f1 2c       	mov	r15, r1
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x0b)
    1776:	89 b3       	in	r24, 0x19	; 25
    1778:	8b 30       	cpi	r24, 0x0B	; 11
    177a:	09 f0       	breq	.+2      	; 0x177e <key+0x8fc>
    177c:	50 c0       	rjmp	.+160    	; 0x181e <key+0x99c>
			{ c=85;			
    177e:	70 92 db 00 	sts	0x00DB, r7
    1782:	60 92 da 00 	sts	0x00DA, r6
				disp_cmd(x);	
    1786:	80 91 cd 00 	lds	r24, 0x00CD
    178a:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
				if(LUC==2)
    178e:	80 91 d1 00 	lds	r24, 0x00D1
    1792:	90 91 d2 00 	lds	r25, 0x00D2
    1796:	02 97       	sbiw	r24, 0x02	; 2
    1798:	11 f4       	brne	.+4      	; 0x179e <key+0x91c>
				{
				printc();
    179a:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
				}
				if(LUC==1)
    179e:	80 91 d1 00 	lds	r24, 0x00D1
    17a2:	90 91 d2 00 	lds	r25, 0x00D2
    17a6:	01 97       	sbiw	r24, 0x01	; 1
    17a8:	31 f4       	brne	.+12     	; 0x17b6 <key+0x934>
				{c=117;
    17aa:	f0 92 db 00 	sts	0x00DB, r15
    17ae:	e0 92 da 00 	sts	0x00DA, r14
				printc();
    17b2:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    17b6:	88 e8       	ldi	r24, 0x88	; 136
    17b8:	93 e1       	ldi	r25, 0x13	; 19
    17ba:	f6 01       	movw	r30, r12
    17bc:	31 97       	sbiw	r30, 0x01	; 1
    17be:	f1 f7       	brne	.-4      	; 0x17bc <key+0x93a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17c0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17c2:	d9 f7       	brne	.-10     	; 0x17ba <key+0x938>
    17c4:	c0 e0       	ldi	r28, 0x00	; 0
    17c6:	d0 e0       	ldi	r29, 0x00	; 0
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x0b)
    17c8:	89 b3       	in	r24, 0x19	; 25
    17ca:	8b 30       	cpi	r24, 0x0B	; 11
    17cc:	19 f5       	brne	.+70     	; 0x1814 <key+0x992>
					{ c=86;
    17ce:	90 92 db 00 	sts	0x00DB, r9
    17d2:	80 92 da 00 	sts	0x00DA, r8
						disp_cmd(x);		
    17d6:	80 91 cd 00 	lds	r24, 0x00CD
    17da:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
						if(LUC==2)
    17de:	80 91 d1 00 	lds	r24, 0x00D1
    17e2:	90 91 d2 00 	lds	r25, 0x00D2
    17e6:	02 97       	sbiw	r24, 0x02	; 2
    17e8:	11 f4       	brne	.+4      	; 0x17ee <key+0x96c>
						{
						printc();
    17ea:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
						}
						if(LUC==1)
    17ee:	80 91 d1 00 	lds	r24, 0x00D1
    17f2:	90 91 d2 00 	lds	r25, 0x00D2
    17f6:	01 97       	sbiw	r24, 0x01	; 1
    17f8:	31 f4       	brne	.+12     	; 0x1806 <key+0x984>
						{c=118;
    17fa:	b0 92 db 00 	sts	0x00DB, r11
    17fe:	a0 92 da 00 	sts	0x00DA, r10
						printc();
    1802:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1806:	88 e8       	ldi	r24, 0x88	; 136
    1808:	93 e1       	ldi	r25, 0x13	; 19
    180a:	f6 01       	movw	r30, r12
    180c:	31 97       	sbiw	r30, 0x01	; 1
    180e:	f1 f7       	brne	.-4      	; 0x180c <key+0x98a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1810:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1812:	d9 f7       	brne	.-10     	; 0x180a <key+0x988>
				if(LUC==1)
				{c=117;
				printc();
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
    1814:	21 96       	adiw	r28, 0x01	; 1
    1816:	91 e0       	ldi	r25, 0x01	; 1
    1818:	c0 39       	cpi	r28, 0x90	; 144
    181a:	d9 07       	cpc	r29, r25
    181c:	a9 f6       	brne	.-86     	; 0x17c8 <key+0x946>
			{
			c=55;
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
    181e:	0f 5f       	subi	r16, 0xFF	; 255
    1820:	1f 4f       	sbci	r17, 0xFF	; 255
    1822:	8f e0       	ldi	r24, 0x0F	; 15
    1824:	00 3a       	cpi	r16, 0xA0	; 160
    1826:	18 07       	cpc	r17, r24
    1828:	09 f0       	breq	.+2      	; 0x182c <key+0x9aa>
    182a:	a5 cf       	rjmp	.-182    	; 0x1776 <key+0x8f4>
    182c:	d5 c0       	rjmp	.+426    	; 0x19d8 <key+0xb56>
         		 }
			}
          }
		  x++;
		}
		  	else if(PINA == 0x07)
    182e:	89 b3       	in	r24, 0x19	; 25
    1830:	87 30       	cpi	r24, 0x07	; 7
    1832:	09 f0       	breq	.+2      	; 0x1836 <key+0x9b4>
    1834:	da c0       	rjmp	.+436    	; 0x19ea <key+0xb68>
		{ c=87;	
    1836:	87 e5       	ldi	r24, 0x57	; 87
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	90 93 db 00 	sts	0x00DB, r25
    183e:	80 93 da 00 	sts	0x00DA, r24
			disp_cmd(x);	
    1842:	80 91 cd 00 	lds	r24, 0x00CD
    1846:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			if(LUC==2)
    184a:	80 91 d1 00 	lds	r24, 0x00D1
    184e:	90 91 d2 00 	lds	r25, 0x00D2
    1852:	02 97       	sbiw	r24, 0x02	; 2
    1854:	11 f4       	brne	.+4      	; 0x185a <key+0x9d8>
			{
			printc();
    1856:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(LUC==1)
    185a:	80 91 d1 00 	lds	r24, 0x00D1
    185e:	90 91 d2 00 	lds	r25, 0x00D2
    1862:	01 97       	sbiw	r24, 0x01	; 1
    1864:	41 f4       	brne	.+16     	; 0x1876 <key+0x9f4>
			{c=119;
    1866:	87 e7       	ldi	r24, 0x77	; 119
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	90 93 db 00 	sts	0x00DB, r25
    186e:	80 93 da 00 	sts	0x00DA, r24
			printc();
    1872:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
			}
			if(NUM==1)
    1876:	80 91 dc 00 	lds	r24, 0x00DC
    187a:	90 91 dd 00 	lds	r25, 0x00DD
    187e:	01 97       	sbiw	r24, 0x01	; 1
    1880:	41 f4       	brne	.+16     	; 0x1892 <key+0xa10>
			{
			c=56;
    1882:	88 e3       	ldi	r24, 0x38	; 56
    1884:	90 e0       	ldi	r25, 0x00	; 0
    1886:	90 93 db 00 	sts	0x00DB, r25
    188a:	80 93 da 00 	sts	0x00DA, r24
			printc();
    188e:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    1892:	88 e8       	ldi	r24, 0x88	; 136
    1894:	93 e1       	ldi	r25, 0x13	; 19
    1896:	f6 01       	movw	r30, r12
    1898:	31 97       	sbiw	r30, 0x01	; 1
    189a:	f1 f7       	brne	.-4      	; 0x1898 <key+0xa16>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    189c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    189e:	d9 f7       	brne	.-10     	; 0x1896 <key+0xa14>
    18a0:	ee 24       	eor	r14, r14
    18a2:	ff 24       	eor	r15, r15
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x07)
			{ c=88;			
    18a4:	38 e5       	ldi	r19, 0x58	; 88
    18a6:	43 2e       	mov	r4, r19
    18a8:	51 2c       	mov	r5, r1
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x07)
					{ c=89;
    18aa:	29 e5       	ldi	r18, 0x59	; 89
    18ac:	62 2e       	mov	r6, r18
    18ae:	71 2c       	mov	r7, r1
						if(LUC==2)
						{
						printc();
						}
						if(LUC==1)
						{c=121;
    18b0:	99 e7       	ldi	r25, 0x79	; 121
    18b2:	89 2e       	mov	r8, r25
    18b4:	91 2c       	mov	r9, r1
				if(LUC==2)
				{
				printc();
				}
				if(LUC==1)
				{c=120;
    18b6:	88 e7       	ldi	r24, 0x78	; 120
    18b8:	a8 2e       	mov	r10, r24
    18ba:	b1 2c       	mov	r11, r1
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
		  {
			if(PINA == 0x07)
    18bc:	89 b3       	in	r24, 0x19	; 25
    18be:	87 30       	cpi	r24, 0x07	; 7
    18c0:	09 f0       	breq	.+2      	; 0x18c4 <key+0xa42>
    18c2:	81 c0       	rjmp	.+258    	; 0x19c6 <key+0xb44>
			{ c=88;			
    18c4:	50 92 db 00 	sts	0x00DB, r5
    18c8:	40 92 da 00 	sts	0x00DA, r4
				disp_cmd(x);	
    18cc:	80 91 cd 00 	lds	r24, 0x00CD
    18d0:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
				if(LUC==2)
    18d4:	80 91 d1 00 	lds	r24, 0x00D1
    18d8:	90 91 d2 00 	lds	r25, 0x00D2
    18dc:	02 97       	sbiw	r24, 0x02	; 2
    18de:	11 f4       	brne	.+4      	; 0x18e4 <key+0xa62>
				{
				printc();
    18e0:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
				}
				if(LUC==1)
    18e4:	80 91 d1 00 	lds	r24, 0x00D1
    18e8:	90 91 d2 00 	lds	r25, 0x00D2
    18ec:	01 97       	sbiw	r24, 0x01	; 1
    18ee:	31 f4       	brne	.+12     	; 0x18fc <key+0xa7a>
				{c=120;
    18f0:	b0 92 db 00 	sts	0x00DB, r11
    18f4:	a0 92 da 00 	sts	0x00DA, r10
				printc();
    18f8:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    18fc:	88 e8       	ldi	r24, 0x88	; 136
    18fe:	93 e1       	ldi	r25, 0x13	; 19
    1900:	f6 01       	movw	r30, r12
    1902:	31 97       	sbiw	r30, 0x01	; 1
    1904:	f1 f7       	brne	.-4      	; 0x1902 <key+0xa80>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1906:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1908:	d9 f7       	brne	.-10     	; 0x1900 <key+0xa7e>
    190a:	00 e0       	ldi	r16, 0x00	; 0
    190c:	10 e0       	ldi	r17, 0x00	; 0
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
		 		 {
					if(PINA == 0x07)
    190e:	89 b3       	in	r24, 0x19	; 25
    1910:	87 30       	cpi	r24, 0x07	; 7
    1912:	09 f0       	breq	.+2      	; 0x1916 <key+0xa94>
    1914:	51 c0       	rjmp	.+162    	; 0x19b8 <key+0xb36>
					{ c=89;
    1916:	70 92 db 00 	sts	0x00DB, r7
    191a:	60 92 da 00 	sts	0x00DA, r6
						disp_cmd(x);		
    191e:	80 91 cd 00 	lds	r24, 0x00CD
    1922:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
						if(LUC==2)
    1926:	80 91 d1 00 	lds	r24, 0x00D1
    192a:	90 91 d2 00 	lds	r25, 0x00D2
    192e:	02 97       	sbiw	r24, 0x02	; 2
    1930:	11 f4       	brne	.+4      	; 0x1936 <key+0xab4>
						{
						printc();
    1932:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
						}
						if(LUC==1)
    1936:	80 91 d1 00 	lds	r24, 0x00D1
    193a:	90 91 d2 00 	lds	r25, 0x00D2
    193e:	01 97       	sbiw	r24, 0x01	; 1
    1940:	31 f4       	brne	.+12     	; 0x194e <key+0xacc>
						{c=121;
    1942:	90 92 db 00 	sts	0x00DB, r9
    1946:	80 92 da 00 	sts	0x00DA, r8
						printc();
    194a:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    194e:	88 e8       	ldi	r24, 0x88	; 136
    1950:	93 e1       	ldi	r25, 0x13	; 19
    1952:	f6 01       	movw	r30, r12
    1954:	31 97       	sbiw	r30, 0x01	; 1
    1956:	f1 f7       	brne	.-4      	; 0x1954 <key+0xad2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1958:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    195a:	d9 f7       	brne	.-10     	; 0x1952 <key+0xad0>
    195c:	c0 e0       	ldi	r28, 0x00	; 0
    195e:	d0 e0       	ldi	r29, 0x00	; 0
						}
					_delay_ms(500);
						for(int j=0;j<100;j++)
		 				 {
							if(PINA == 0x07)
    1960:	89 b3       	in	r24, 0x19	; 25
    1962:	87 30       	cpi	r24, 0x07	; 7
    1964:	29 f5       	brne	.+74     	; 0x19b0 <key+0xb2e>
							{ c=90;
    1966:	30 92 db 00 	sts	0x00DB, r3
    196a:	20 92 da 00 	sts	0x00DA, r2
								disp_cmd(x);		
    196e:	80 91 cd 00 	lds	r24, 0x00CD
    1972:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
								if(LUC==2)
    1976:	80 91 d1 00 	lds	r24, 0x00D1
    197a:	90 91 d2 00 	lds	r25, 0x00D2
    197e:	02 97       	sbiw	r24, 0x02	; 2
    1980:	11 f4       	brne	.+4      	; 0x1986 <key+0xb04>
								{
								printc();
    1982:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
								}
								if(LUC==1)
    1986:	80 91 d1 00 	lds	r24, 0x00D1
    198a:	90 91 d2 00 	lds	r25, 0x00D2
    198e:	01 97       	sbiw	r24, 0x01	; 1
    1990:	41 f4       	brne	.+16     	; 0x19a2 <key+0xb20>
								{c=122;
    1992:	8a e7       	ldi	r24, 0x7A	; 122
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	90 93 db 00 	sts	0x00DB, r25
    199a:	80 93 da 00 	sts	0x00DA, r24
								printc();
    199e:	0e 94 33 07 	call	0xe66	; 0xe66 <printc>
    19a2:	88 e8       	ldi	r24, 0x88	; 136
    19a4:	93 e1       	ldi	r25, 0x13	; 19
    19a6:	f6 01       	movw	r30, r12
    19a8:	31 97       	sbiw	r30, 0x01	; 1
    19aa:	f1 f7       	brne	.-4      	; 0x19a8 <key+0xb26>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ac:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19ae:	d9 f7       	brne	.-10     	; 0x19a6 <key+0xb24>
						if(LUC==1)
						{c=121;
						printc();
						}
					_delay_ms(500);
						for(int j=0;j<100;j++)
    19b0:	21 96       	adiw	r28, 0x01	; 1
    19b2:	c4 36       	cpi	r28, 0x64	; 100
    19b4:	d1 05       	cpc	r29, r1
    19b6:	a1 f6       	brne	.-88     	; 0x1960 <key+0xade>
				if(LUC==1)
				{c=120;
				printc();
				}
				_delay_ms(500);
				for(int j=0;j<400;j++)
    19b8:	0f 5f       	subi	r16, 0xFF	; 255
    19ba:	1f 4f       	sbci	r17, 0xFF	; 255
    19bc:	91 e0       	ldi	r25, 0x01	; 1
    19be:	00 39       	cpi	r16, 0x90	; 144
    19c0:	19 07       	cpc	r17, r25
    19c2:	09 f0       	breq	.+2      	; 0x19c6 <key+0xb44>
    19c4:	a4 cf       	rjmp	.-184    	; 0x190e <key+0xa8c>
			{
			c=56;
			printc();
			}
			_delay_ms(500);
		for(int i=0;i<4000;i++)
    19c6:	08 94       	sec
    19c8:	e1 1c       	adc	r14, r1
    19ca:	f1 1c       	adc	r15, r1
    19cc:	80 ea       	ldi	r24, 0xA0	; 160
    19ce:	e8 16       	cp	r14, r24
    19d0:	8f e0       	ldi	r24, 0x0F	; 15
    19d2:	f8 06       	cpc	r15, r24
    19d4:	09 f0       	breq	.+2      	; 0x19d8 <key+0xb56>
    19d6:	72 cf       	rjmp	.-284    	; 0x18bc <key+0xa3a>
         				 }
					}
         		 }
			 }
          }
		  x++;
    19d8:	80 91 cd 00 	lds	r24, 0x00CD
    19dc:	90 91 ce 00 	lds	r25, 0x00CE
    19e0:	01 96       	adiw	r24, 0x01	; 1
    19e2:	90 93 ce 00 	sts	0x00CE, r25
    19e6:	80 93 cd 00 	sts	0x00CD, r24
		}
   	}


	{	PORTB=0x0b;
    19ea:	8b e0       	ldi	r24, 0x0B	; 11
    19ec:	88 bb       	out	0x18, r24	; 24
    19ee:	82 ee       	ldi	r24, 0xE2	; 226
    19f0:	94 e0       	ldi	r25, 0x04	; 4
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	f1 f7       	brne	.-4      	; 0x19f2 <key+0xb70>
		_delay_ms(5);
		if(PINA==0x0e)
    19f6:	89 b3       	in	r24, 0x19	; 25
    19f8:	8e 30       	cpi	r24, 0x0E	; 14
    19fa:	b1 f1       	breq	.+108    	; 0x1a68 <key+0xbe6>
		{ 
		}

		else if(PINA==0x0d)
    19fc:	89 b3       	in	r24, 0x19	; 25
    19fe:	8d 30       	cpi	r24, 0x0D	; 13
    1a00:	99 f1       	breq	.+102    	; 0x1a68 <key+0xbe6>
		{ 
		}

		else if(PINA==0x0b)
    1a02:	89 b3       	in	r24, 0x19	; 25
    1a04:	8b 30       	cpi	r24, 0x0B	; 11
    1a06:	81 f1       	breq	.+96     	; 0x1a68 <key+0xbe6>
		{ 
		}

		else if(PINA==0x07)
    1a08:	89 b3       	in	r24, 0x19	; 25
    1a0a:	87 30       	cpi	r24, 0x07	; 7
    1a0c:	69 f5       	brne	.+90     	; 0x1a68 <key+0xbe6>
		{ 
			disp_cmd(0x80);	
    1a0e:	80 e8       	ldi	r24, 0x80	; 128
    1a10:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			disp_cmd(0x01);	
    1a14:	81 e0       	ldi	r24, 0x01	; 1
    1a16:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			x=0x80;n=0;h=0;
    1a1a:	80 e8       	ldi	r24, 0x80	; 128
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	90 93 ce 00 	sts	0x00CE, r25
    1a22:	80 93 cd 00 	sts	0x00CD, r24
    1a26:	10 92 df 00 	sts	0x00DF, r1
    1a2a:	10 92 de 00 	sts	0x00DE, r1
    1a2e:	80 e5       	ldi	r24, 0x50	; 80
    1a30:	93 ec       	ldi	r25, 0xC3	; 195
    1a32:	01 97       	sbiw	r24, 0x01	; 1
    1a34:	f1 f7       	brne	.-4      	; 0x1a32 <key+0xbb0>
			_delay_ms(200);
			disp_cmd(0x80);
    1a36:	80 e8       	ldi	r24, 0x80	; 128
    1a38:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			LCD_string("R3,C1 for R mode");
    1a3c:	80 e6       	ldi	r24, 0x60	; 96
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
			disp_cmd(0xc0);
    1a44:	80 ec       	ldi	r24, 0xC0	; 192
    1a46:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			LCD_string("R3,C2 for S mode");
    1a4a:	81 e7       	ldi	r24, 0x71	; 113
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1a52:	84 e2       	ldi	r24, 0x24	; 36
    1a54:	94 ef       	ldi	r25, 0xF4	; 244
    1a56:	01 97       	sbiw	r24, 0x01	; 1
    1a58:	f1 f7       	brne	.-4      	; 0x1a56 <key+0xbd4>
    return UDR; // return the byte
}
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
    1a5a:	5d 9b       	sbis	0x0b, 5	; 11
    1a5c:	fe cf       	rjmp	.-4      	; 0x1a5a <key+0xbd8>
   {
   }
   UDR=send;
    1a5e:	8e e5       	ldi	r24, 0x5E	; 94
    1a60:	8c b9       	out	0x0c, r24	; 12
    1a62:	ee 24       	eor	r14, r14
    1a64:	ff 24       	eor	r15, r15
    1a66:	03 c0       	rjmp	.+6      	; 0x1a6e <key+0xbec>
    1a68:	01 e0       	ldi	r16, 0x01	; 1
    1a6a:	e0 2e       	mov	r14, r16
    1a6c:	f1 2c       	mov	r15, r1
		}
	}



	{	PORTB=0x07;
    1a6e:	87 e0       	ldi	r24, 0x07	; 7
    1a70:	88 bb       	out	0x18, r24	; 24
    1a72:	82 ee       	ldi	r24, 0xE2	; 226
    1a74:	94 e0       	ldi	r25, 0x04	; 4
    1a76:	01 97       	sbiw	r24, 0x01	; 1
    1a78:	f1 f7       	brne	.-4      	; 0x1a76 <key+0xbf4>
		_delay_ms(5);
		if(PINA==0x0e)
    1a7a:	89 b3       	in	r24, 0x19	; 25
    1a7c:	8e 30       	cpi	r24, 0x0E	; 14
    1a7e:	91 f4       	brne	.+36     	; 0x1aa4 <key+0xc22>
		{NUM=1;
    1a80:	81 e0       	ldi	r24, 0x01	; 1
    1a82:	90 e0       	ldi	r25, 0x00	; 0
    1a84:	90 93 dd 00 	sts	0x00DD, r25
    1a88:	80 93 dc 00 	sts	0x00DC, r24
		LUC=0;
    1a8c:	10 92 d2 00 	sts	0x00D2, r1
    1a90:	10 92 d1 00 	sts	0x00D1, r1
    1a94:	80 ea       	ldi	r24, 0xA0	; 160
    1a96:	9f e0       	ldi	r25, 0x0F	; 15
    1a98:	f6 01       	movw	r30, r12
    1a9a:	31 97       	sbiw	r30, 0x01	; 1
    1a9c:	f1 f7       	brne	.-4      	; 0x1a9a <key+0xc18>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a9e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aa0:	d9 f7       	brne	.-10     	; 0x1a98 <key+0xc16>
    1aa2:	91 c0       	rjmp	.+290    	; 0x1bc6 <key+0xd44>
		_delay_ms(400);
		}

		else if(PINA==0x0d)
    1aa4:	89 b3       	in	r24, 0x19	; 25
    1aa6:	8d 30       	cpi	r24, 0x0D	; 13
    1aa8:	e1 f4       	brne	.+56     	; 0x1ae2 <key+0xc60>
		{ 
			disp_cmd(x);
    1aaa:	80 91 cd 00 	lds	r24, 0x00CD
    1aae:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			disp_data(' ');
    1ab2:	80 e2       	ldi	r24, 0x20	; 32
    1ab4:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
    return UDR; // return the byte
}
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
    1ab8:	5d 9b       	sbis	0x0b, 5	; 11
    1aba:	fe cf       	rjmp	.-4      	; 0x1ab8 <key+0xc36>
   {
   }
   UDR=send;
    1abc:	8b e5       	ldi	r24, 0x5B	; 91
    1abe:	8c b9       	out	0x0c, r24	; 12
    1ac0:	80 e1       	ldi	r24, 0x10	; 16
    1ac2:	97 e2       	ldi	r25, 0x27	; 39
    1ac4:	f6 01       	movw	r30, r12
    1ac6:	31 97       	sbiw	r30, 0x01	; 1
    1ac8:	f1 f7       	brne	.-4      	; 0x1ac6 <key+0xc44>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aca:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1acc:	d9 f7       	brne	.-10     	; 0x1ac4 <key+0xc42>
		{ 
			disp_cmd(x);
			disp_data(' ');
			usart_putch(91);
			_delay_ms(1000);
			x++;
    1ace:	80 91 cd 00 	lds	r24, 0x00CD
    1ad2:	90 91 ce 00 	lds	r25, 0x00CE
    1ad6:	01 96       	adiw	r24, 0x01	; 1
    1ad8:	90 93 ce 00 	sts	0x00CE, r25
    1adc:	80 93 cd 00 	sts	0x00CD, r24
    1ae0:	72 c0       	rjmp	.+228    	; 0x1bc6 <key+0xd44>
		}

		else if(PINA==0x0b)
    1ae2:	89 b3       	in	r24, 0x19	; 25
    1ae4:	8b 30       	cpi	r24, 0x0B	; 11
    1ae6:	71 f5       	brne	.+92     	; 0x1b44 <key+0xcc2>
		{ LUC=2;
    1ae8:	82 e0       	ldi	r24, 0x02	; 2
    1aea:	90 e0       	ldi	r25, 0x00	; 0
    1aec:	90 93 d2 00 	sts	0x00D2, r25
    1af0:	80 93 d1 00 	sts	0x00D1, r24
			NUM=0;
    1af4:	10 92 dd 00 	sts	0x00DD, r1
    1af8:	10 92 dc 00 	sts	0x00DC, r1
    1afc:	80 ea       	ldi	r24, 0xA0	; 160
    1afe:	9f e0       	ldi	r25, 0x0F	; 15
    1b00:	f6 01       	movw	r30, r12
    1b02:	31 97       	sbiw	r30, 0x01	; 1
    1b04:	f1 f7       	brne	.-4      	; 0x1b02 <key+0xc80>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b06:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b08:	d9 f7       	brne	.-10     	; 0x1b00 <key+0xc7e>
    1b0a:	20 e0       	ldi	r18, 0x00	; 0
    1b0c:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(400);
			for(int i=0;i<4000;i++)
			{
				if(PINA==0x0b)
				{	NUM=0;
					LUC=1;
    1b0e:	41 e0       	ldi	r20, 0x01	; 1
    1b10:	50 e0       	ldi	r21, 0x00	; 0
		{ LUC=2;
			NUM=0;
			_delay_ms(400);
			for(int i=0;i<4000;i++)
			{
				if(PINA==0x0b)
    1b12:	89 b3       	in	r24, 0x19	; 25
    1b14:	8b 30       	cpi	r24, 0x0B	; 11
    1b16:	79 f4       	brne	.+30     	; 0x1b36 <key+0xcb4>
				{	NUM=0;
    1b18:	10 92 dd 00 	sts	0x00DD, r1
    1b1c:	10 92 dc 00 	sts	0x00DC, r1
					LUC=1;
    1b20:	50 93 d2 00 	sts	0x00D2, r21
    1b24:	40 93 d1 00 	sts	0x00D1, r20
    1b28:	80 ea       	ldi	r24, 0xA0	; 160
    1b2a:	9f e0       	ldi	r25, 0x0F	; 15
    1b2c:	f6 01       	movw	r30, r12
    1b2e:	31 97       	sbiw	r30, 0x01	; 1
    1b30:	f1 f7       	brne	.-4      	; 0x1b2e <key+0xcac>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b32:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b34:	d9 f7       	brne	.-10     	; 0x1b2c <key+0xcaa>

		else if(PINA==0x0b)
		{ LUC=2;
			NUM=0;
			_delay_ms(400);
			for(int i=0;i<4000;i++)
    1b36:	2f 5f       	subi	r18, 0xFF	; 255
    1b38:	3f 4f       	sbci	r19, 0xFF	; 255
    1b3a:	9f e0       	ldi	r25, 0x0F	; 15
    1b3c:	20 3a       	cpi	r18, 0xA0	; 160
    1b3e:	39 07       	cpc	r19, r25
    1b40:	41 f7       	brne	.-48     	; 0x1b12 <key+0xc90>
    1b42:	41 c0       	rjmp	.+130    	; 0x1bc6 <key+0xd44>
					_delay_ms(400);
				}
			}
		}

		else if(PINA==0x07)
    1b44:	89 b3       	in	r24, 0x19	; 25
    1b46:	87 30       	cpi	r24, 0x07	; 7
    1b48:	09 f0       	breq	.+2      	; 0x1b4c <key+0xcca>
    1b4a:	3d c0       	rjmp	.+122    	; 0x1bc6 <key+0xd44>
    return UDR; // return the byte
}
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
    1b4c:	5d 9b       	sbis	0x0b, 5	; 11
    1b4e:	fe cf       	rjmp	.-4      	; 0x1b4c <key+0xcca>
   {
   }
   UDR=send;
    1b50:	8c e5       	ldi	r24, 0x5C	; 92
    1b52:	8c b9       	out	0x0c, r24	; 12
			}
		}

		else if(PINA==0x07)
		{	usart_putch(92);
			x--;
    1b54:	80 91 cd 00 	lds	r24, 0x00CD
    1b58:	90 91 ce 00 	lds	r25, 0x00CE
    1b5c:	01 97       	sbiw	r24, 0x01	; 1
    1b5e:	90 93 ce 00 	sts	0x00CE, r25
    1b62:	80 93 cd 00 	sts	0x00CD, r24
			disp_cmd(x);
    1b66:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
			disp_data(' ');
    1b6a:	80 e2       	ldi	r24, 0x20	; 32
    1b6c:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
    1b70:	80 e1       	ldi	r24, 0x10	; 16
    1b72:	97 e2       	ldi	r25, 0x27	; 39
    1b74:	f6 01       	movw	r30, r12
    1b76:	31 97       	sbiw	r30, 0x01	; 1
    1b78:	f1 f7       	brne	.-4      	; 0x1b76 <key+0xcf4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b7a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b7c:	d9 f7       	brne	.-10     	; 0x1b74 <key+0xcf2>
    1b7e:	c0 e0       	ldi	r28, 0x00	; 0
    1b80:	d0 e0       	ldi	r29, 0x00	; 0

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
   {
   }
   UDR=send;
    1b82:	1d e5       	ldi	r17, 0x5D	; 93
    1b84:	b1 2e       	mov	r11, r17
				if(PINA==0x07)
				{ 		usart_putch(93);
					 	disp_cmd(urc);
						LCD_string("                ");
						_delay_ms(400);
						x=0x80;
    1b86:	00 e8       	ldi	r16, 0x80	; 128
    1b88:	10 e0       	ldi	r17, 0x00	; 0
			disp_cmd(x);
			disp_data(' ');
			_delay_ms(1000);
			for(int i=0;i<2000;i++)
			{
				if(PINA==0x07)
    1b8a:	89 b3       	in	r24, 0x19	; 25
    1b8c:	87 30       	cpi	r24, 0x07	; 7
    1b8e:	b1 f4       	brne	.+44     	; 0x1bbc <key+0xd3a>
    return UDR; // return the byte
}
 

void usart_putch(unsigned char send)
{    while(!(UCSRA & (1<<UDRE)))
    1b90:	5d 9b       	sbis	0x0b, 5	; 11
    1b92:	fe cf       	rjmp	.-4      	; 0x1b90 <key+0xd0e>
   {
   }
   UDR=send;
    1b94:	bc b8       	out	0x0c, r11	; 12
			_delay_ms(1000);
			for(int i=0;i<2000;i++)
			{
				if(PINA==0x07)
				{ 		usart_putch(93);
					 	disp_cmd(urc);
    1b96:	80 91 d3 00 	lds	r24, 0x00D3
    1b9a:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
						LCD_string("                ");
    1b9e:	82 e8       	ldi	r24, 0x82	; 130
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1ba6:	80 ea       	ldi	r24, 0xA0	; 160
    1ba8:	9f e0       	ldi	r25, 0x0F	; 15
    1baa:	f6 01       	movw	r30, r12
    1bac:	31 97       	sbiw	r30, 0x01	; 1
    1bae:	f1 f7       	brne	.-4      	; 0x1bac <key+0xd2a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bb0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bb2:	d9 f7       	brne	.-10     	; 0x1baa <key+0xd28>
						_delay_ms(400);
						x=0x80;
    1bb4:	10 93 ce 00 	sts	0x00CE, r17
    1bb8:	00 93 cd 00 	sts	0x00CD, r16
		{	usart_putch(92);
			x--;
			disp_cmd(x);
			disp_data(' ');
			_delay_ms(1000);
			for(int i=0;i<2000;i++)
    1bbc:	21 96       	adiw	r28, 0x01	; 1
    1bbe:	87 e0       	ldi	r24, 0x07	; 7
    1bc0:	c0 3d       	cpi	r28, 0xD0	; 208
    1bc2:	d8 07       	cpc	r29, r24
    1bc4:	11 f7       	brne	.-60     	; 0x1b8a <key+0xd08>

//////////////////////////////

void key()
{int h=1;
  while(h)
    1bc6:	ef 28       	or	r14, r15
    1bc8:	09 f0       	breq	.+2      	; 0x1bcc <key+0xd4a>
    1bca:	73 c9       	rjmp	.-3354   	; 0xeb2 <key+0x30>
				}
			}
		}
	}
  }
}
    1bcc:	df 91       	pop	r29
    1bce:	cf 91       	pop	r28
    1bd0:	1f 91       	pop	r17
    1bd2:	0f 91       	pop	r16
    1bd4:	ff 90       	pop	r15
    1bd6:	ef 90       	pop	r14
    1bd8:	df 90       	pop	r13
    1bda:	cf 90       	pop	r12
    1bdc:	bf 90       	pop	r11
    1bde:	af 90       	pop	r10
    1be0:	9f 90       	pop	r9
    1be2:	8f 90       	pop	r8
    1be4:	7f 90       	pop	r7
    1be6:	6f 90       	pop	r6
    1be8:	5f 90       	pop	r5
    1bea:	4f 90       	pop	r4
    1bec:	3f 90       	pop	r3
    1bee:	2f 90       	pop	r2
    1bf0:	08 95       	ret

00001bf2 <main>:
void disp_data(unsigned char d);
unsigned int pass();

int x=0x80, t=65,c=0, LUC=1,urc=0x80, p =91,q=92,NUM=0,m,n=0;;
int main()
{   int i,passok,j;
    1bf2:	2f 92       	push	r2
    1bf4:	3f 92       	push	r3
    1bf6:	4f 92       	push	r4
    1bf8:	5f 92       	push	r5
    1bfa:	6f 92       	push	r6
    1bfc:	7f 92       	push	r7
    1bfe:	8f 92       	push	r8
    1c00:	9f 92       	push	r9
    1c02:	af 92       	push	r10
    1c04:	bf 92       	push	r11
    1c06:	cf 92       	push	r12
    1c08:	df 92       	push	r13
    1c0a:	ff 92       	push	r15
    1c0c:	0f 93       	push	r16
    1c0e:	1f 93       	push	r17
    1c10:	df 93       	push	r29
    1c12:	cf 93       	push	r28
    1c14:	cd b7       	in	r28, 0x3d	; 61
    1c16:	de b7       	in	r29, 0x3e	; 62
    1c18:	62 97       	sbiw	r28, 0x12	; 18
    1c1a:	0f b6       	in	r0, 0x3f	; 63
    1c1c:	f8 94       	cli
    1c1e:	de bf       	out	0x3e, r29	; 62
    1c20:	0f be       	out	0x3f, r0	; 63
    1c22:	cd bf       	out	0x3d, r28	; 61
	unsigned char value;
    char passmatch[4];
	char prepass[]="AAAA";
    1c24:	de 01       	movw	r26, r28
    1c26:	19 96       	adiw	r26, 0x09	; 9
    1c28:	e8 ec       	ldi	r30, 0xC8	; 200
    1c2a:	f0 e0       	ldi	r31, 0x00	; 0
    1c2c:	85 e0       	ldi	r24, 0x05	; 5
    1c2e:	01 90       	ld	r0, Z+
    1c30:	0d 92       	st	X+, r0
    1c32:	81 50       	subi	r24, 0x01	; 1
    1c34:	e1 f7       	brne	.-8      	; 0x1c2e <main+0x3c>
	unsigned char pas[]="AAAA";
    1c36:	de 01       	movw	r26, r28
    1c38:	1e 96       	adiw	r26, 0x0e	; 14
    1c3a:	e8 ec       	ldi	r30, 0xC8	; 200
    1c3c:	f0 e0       	ldi	r31, 0x00	; 0
    1c3e:	85 e0       	ldi	r24, 0x05	; 5
    1c40:	01 90       	ld	r0, Z+
    1c42:	0d 92       	st	X+, r0
    1c44:	81 50       	subi	r24, 0x01	; 1
    1c46:	e1 f7       	brne	.-8      	; 0x1c40 <main+0x4e>
	unsigned char q[4];
	DDRA=0xf0;
    1c48:	80 ef       	ldi	r24, 0xF0	; 240
    1c4a:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x0f;
    1c4c:	8f e0       	ldi	r24, 0x0F	; 15
    1c4e:	8b bb       	out	0x1b, r24	; 27
	DDRC=0xff;
    1c50:	8f ef       	ldi	r24, 0xFF	; 255
    1c52:	84 bb       	out	0x14, r24	; 20
    DDRB=0XFF;
    1c54:	87 bb       	out	0x17, r24	; 23
	LCD_init();
    1c56:	0e 94 8f 00 	call	0x11e	; 0x11e <LCD_init>
}
 
 
void usart_init()
{
    UCSRB |= (1 << RXEN)|(1<<TXEN);   // Turn on the transmission and reception circuitry
    1c5a:	8a b1       	in	r24, 0x0a	; 10
    1c5c:	88 61       	ori	r24, 0x18	; 24
    1c5e:	8a b9       	out	0x0a, r24	; 10
    UCSRC |= (1 << URSEL)  | (1<<USBS)| (1 << UCSZ0) | (1 << UCSZ1);                                            // Use 8-bit character sizes
    1c60:	80 b5       	in	r24, 0x20	; 32
    1c62:	8e 68       	ori	r24, 0x8E	; 142
    1c64:	80 bd       	out	0x20, r24	; 32
    UBRRL = BAUD_PRESCALE;            // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
    1c66:	83 e3       	ldi	r24, 0x33	; 51
    1c68:	89 b9       	out	0x09, r24	; 9
    UBRRH = (BAUD_PRESCALE >> 8); // Load upper 8-bits of the baud rate value..
    1c6a:	10 bc       	out	0x20, r1	; 32
	PORTA=0x0f;
	DDRC=0xff;
    DDRB=0XFF;
	LCD_init();
    usart_init();        // initialization of USART
		disp_cmd(0x01);
    1c6c:	81 e0       	ldi	r24, 0x01	; 1
    1c6e:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1c72:	84 ed       	ldi	r24, 0xD4	; 212
    1c74:	90 e3       	ldi	r25, 0x30	; 48
    1c76:	01 97       	sbiw	r24, 0x01	; 1
    1c78:	f1 f7       	brne	.-4      	; 0x1c76 <main+0x84>
		_delay_ms(50);
		disp_cmd(0x80);
    1c7a:	80 e8       	ldi	r24, 0x80	; 128
    1c7c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		LCD_string("R3,C1 for R mode");
    1c80:	80 e6       	ldi	r24, 0x60	; 96
    1c82:	90 e0       	ldi	r25, 0x00	; 0
    1c84:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
		disp_cmd(0xc0);
    1c88:	80 ec       	ldi	r24, 0xC0	; 192
    1c8a:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		LCD_string("R3,C2 for S mode");
    1c8e:	81 e7       	ldi	r24, 0x71	; 113
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1c96:	80 e5       	ldi	r24, 0x50	; 80
    1c98:	93 ec       	ldi	r25, 0xC3	; 195
    1c9a:	01 97       	sbiw	r24, 0x01	; 1
    1c9c:	f1 f7       	brne	.-4      	; 0x1c9a <main+0xa8>
	  againr : disp_cmd(0x01);
		_delay_ms(50);
	  	disp_cmd(0xc0);
		LCD_string("*Device Pairing*");
		_delay_ms(200);
		disp_cmd(0x80);
    1c9e:	84 ed       	ldi	r24, 0xD4	; 212
    1ca0:	c8 2e       	mov	r12, r24
    1ca2:	80 e3       	ldi	r24, 0x30	; 48
    1ca4:	d8 2e       	mov	r13, r24
    1ca6:	00 e5       	ldi	r16, 0x50	; 80
    1ca8:	a0 2e       	mov	r10, r16
    1caa:	03 ec       	ldi	r16, 0xC3	; 195
    1cac:	b0 2e       	mov	r11, r16
    1cae:	1e 01       	movw	r2, r28
    1cb0:	08 94       	sec
    1cb2:	21 1c       	adc	r2, r1
    1cb4:	31 1c       	adc	r3, r1
    1cb6:	19 e1       	ldi	r17, 0x19	; 25
    1cb8:	81 2e       	mov	r8, r17
    1cba:	91 2c       	mov	r9, r1
		for(i=0;i<4;i++)
    1cbc:	b5 e0       	ldi	r27, 0x05	; 5
    1cbe:	6b 2e       	mov	r6, r27
    1cc0:	71 2c       	mov	r7, r1
    1cc2:	6c 0e       	add	r6, r28
    1cc4:	7d 1e       	adc	r7, r29
		_delay_ms(50);
		disp_cmd(0xc0);
		LCD_string("*Device Pairing*");
		_delay_ms(200);
		disp_cmd(0x80);
		for(m=0;m<4;m++)
    1cc6:	ae e0       	ldi	r26, 0x0E	; 14
    1cc8:	4a 2e       	mov	r4, r26
    1cca:	51 2c       	mov	r5, r1
    1ccc:	4c 0e       	add	r4, r28
    1cce:	5d 1e       	adc	r5, r29
		disp_cmd(0xc0);
		LCD_string("R3,C2 for S mode");
		_delay_ms(200);
	while(1)
	{ 	
	 main : PORTB=0x0b;
    1cd0:	8b e0       	ldi	r24, 0x0B	; 11
    1cd2:	88 bb       	out	0x18, r24	; 24
    1cd4:	82 ee       	ldi	r24, 0xE2	; 226
    1cd6:	94 e0       	ldi	r25, 0x04	; 4
    1cd8:	01 97       	sbiw	r24, 0x01	; 1
    1cda:	f1 f7       	brne	.-4      	; 0x1cd8 <main+0xe6>
	  _delay_ms(5);
	  if(PINA==0x0e)
    1cdc:	89 b3       	in	r24, 0x19	; 25
    1cde:	8e 30       	cpi	r24, 0x0E	; 14
    1ce0:	09 f0       	breq	.+2      	; 0x1ce4 <main+0xf2>
    1ce2:	75 c0       	rjmp	.+234    	; 0x1dce <main+0x1dc>
	  {	
	  againr : disp_cmd(0x01);
    1ce4:	81 e0       	ldi	r24, 0x01	; 1
    1ce6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1cea:	c6 01       	movw	r24, r12
    1cec:	01 97       	sbiw	r24, 0x01	; 1
    1cee:	f1 f7       	brne	.-4      	; 0x1cec <main+0xfa>
		_delay_ms(50);
	  	disp_cmd(0xc0);
    1cf0:	80 ec       	ldi	r24, 0xC0	; 192
    1cf2:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		LCD_string("*Device Pairing*");
    1cf6:	83 e9       	ldi	r24, 0x93	; 147
    1cf8:	90 e0       	ldi	r25, 0x00	; 0
    1cfa:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1cfe:	c5 01       	movw	r24, r10
    1d00:	01 97       	sbiw	r24, 0x01	; 1
    1d02:	f1 f7       	brne	.-4      	; 0x1d00 <main+0x10e>
		_delay_ms(200);
		disp_cmd(0x80);
    1d04:	80 e8       	ldi	r24, 0x80	; 128
    1d06:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1d0a:	81 01       	movw	r16, r2
                                    // into the high byte of the UBRR register
}
 
unsigned int usart_getch()
{    unsigned int ret;
    while ((UCSRA & (1 << RXC)) == 0);
    1d0c:	5f 9b       	sbis	0x0b, 7	; 11
    1d0e:	fe cf       	rjmp	.-4      	; 0x1d0c <main+0x11a>
    {   
    }    // Do nothing until data has been received and is ready to be read from UDR
   
    return UDR; // return the byte
    1d10:	8c b1       	in	r24, 0x0c	; 12
		_delay_ms(200);
		disp_cmd(0x80);
		for(i=0;i<4;i++)
		{	
	    	value=usart_getch();
			passmatch[i]=value;
    1d12:	f8 01       	movw	r30, r16
    1d14:	80 83       	st	Z, r24
			disp_data('*');
    1d16:	8a e2       	ldi	r24, 0x2A	; 42
    1d18:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
    1d1c:	88 e8       	ldi	r24, 0x88	; 136
    1d1e:	93 e1       	ldi	r25, 0x13	; 19
    1d20:	f4 01       	movw	r30, r8
    1d22:	31 97       	sbiw	r30, 0x01	; 1
    1d24:	f1 f7       	brne	.-4      	; 0x1d22 <main+0x130>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d26:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d28:	d9 f7       	brne	.-10     	; 0x1d20 <main+0x12e>
    1d2a:	0f 5f       	subi	r16, 0xFF	; 255
    1d2c:	1f 4f       	sbci	r17, 0xFF	; 255
		_delay_ms(50);
	  	disp_cmd(0xc0);
		LCD_string("*Device Pairing*");
		_delay_ms(200);
		disp_cmd(0x80);
		for(i=0;i<4;i++)
    1d2e:	06 15       	cp	r16, r6
    1d30:	17 05       	cpc	r17, r7
    1d32:	61 f7       	brne	.-40     	; 0x1d0c <main+0x11a>
    1d34:	20 e0       	ldi	r18, 0x00	; 0
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	99 81       	ldd	r25, Y+1	; 0x01
    1d3a:	89 85       	ldd	r24, Y+9	; 0x09
    1d3c:	98 17       	cp	r25, r24
    1d3e:	11 f4       	brne	.+4      	; 0x1d44 <main+0x152>
    1d40:	21 e0       	ldi	r18, 0x01	; 1
    1d42:	30 e0       	ldi	r19, 0x00	; 0
			//disp_data(passmatch[i]);
			_delay_ms(500);
		}
		for(i=0;i<4;i++)
		{
		if(passmatch[i]==prepass[i])
    1d44:	9a 81       	ldd	r25, Y+2	; 0x02
    1d46:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d48:	98 17       	cp	r25, r24
    1d4a:	11 f4       	brne	.+4      	; 0x1d50 <main+0x15e>
		j=j+1;
    1d4c:	2f 5f       	subi	r18, 0xFF	; 255
    1d4e:	3f 4f       	sbci	r19, 0xFF	; 255
			//disp_data(passmatch[i]);
			_delay_ms(500);
		}
		for(i=0;i<4;i++)
		{
		if(passmatch[i]==prepass[i])
    1d50:	9b 81       	ldd	r25, Y+3	; 0x03
    1d52:	8b 85       	ldd	r24, Y+11	; 0x0b
    1d54:	98 17       	cp	r25, r24
    1d56:	11 f4       	brne	.+4      	; 0x1d5c <main+0x16a>
		j=j+1;
    1d58:	2f 5f       	subi	r18, 0xFF	; 255
    1d5a:	3f 4f       	sbci	r19, 0xFF	; 255
			//disp_data(passmatch[i]);
			_delay_ms(500);
		}
		for(i=0;i<4;i++)
		{
		if(passmatch[i]==prepass[i])
    1d5c:	9c 81       	ldd	r25, Y+4	; 0x04
    1d5e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d60:	98 17       	cp	r25, r24
    1d62:	11 f4       	brne	.+4      	; 0x1d68 <main+0x176>
		j=j+1;
    1d64:	2f 5f       	subi	r18, 0xFF	; 255
    1d66:	3f 4f       	sbci	r19, 0xFF	; 255
		}


		if(j==4)
    1d68:	24 30       	cpi	r18, 0x04	; 4
    1d6a:	31 05       	cpc	r19, r1
    1d6c:	b9 f4       	brne	.+46     	; 0x1d9c <main+0x1aa>
		{disp_cmd(0x01);
    1d6e:	81 e0       	ldi	r24, 0x01	; 1
    1d70:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1d74:	c6 01       	movw	r24, r12
    1d76:	01 97       	sbiw	r24, 0x01	; 1
    1d78:	f1 f7       	brne	.-4      	; 0x1d76 <main+0x184>
		_delay_ms(50);
		disp_cmd(0xc3);
    1d7a:	83 ec       	ldi	r24, 0xC3	; 195
    1d7c:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		LCD_string("Receving...");
    1d80:	84 ea       	ldi	r24, 0xA4	; 164
    1d82:	90 e0       	ldi	r25, 0x00	; 0
    1d84:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1d88:	c5 01       	movw	r24, r10
    1d8a:	01 97       	sbiw	r24, 0x01	; 1
    1d8c:	f1 f7       	brne	.-4      	; 0x1d8a <main+0x198>
		_delay_ms(200);
    		//while(1)
    		//{   
		
		 msgrcv();
    1d8e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <msgrcv>
    1d92:	88 ea       	ldi	r24, 0xA8	; 168
    1d94:	91 e6       	ldi	r25, 0x61	; 97
    1d96:	01 97       	sbiw	r24, 0x01	; 1
    1d98:	f1 f7       	brne	.-4      	; 0x1d96 <main+0x1a4>
    1d9a:	9a cf       	rjmp	.-204    	; 0x1cd0 <main+0xde>
			//}
			j=0;
			goto main;
		}
			else
			{disp_cmd(0x80);LCD_string("Try Again..!");j=0;_delay_ms(2000);disp_cmd(0x80);LCD_string("                ");_delay_ms(50); goto againr;}
    1d9c:	80 e8       	ldi	r24, 0x80	; 128
    1d9e:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1da2:	80 eb       	ldi	r24, 0xB0	; 176
    1da4:	90 e0       	ldi	r25, 0x00	; 0
    1da6:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1daa:	80 e2       	ldi	r24, 0x20	; 32
    1dac:	9e e4       	ldi	r25, 0x4E	; 78
    1dae:	f4 01       	movw	r30, r8
    1db0:	31 97       	sbiw	r30, 0x01	; 1
    1db2:	f1 f7       	brne	.-4      	; 0x1db0 <main+0x1be>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1db4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1db6:	d9 f7       	brne	.-10     	; 0x1dae <main+0x1bc>
    1db8:	80 e8       	ldi	r24, 0x80	; 128
    1dba:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1dbe:	82 e8       	ldi	r24, 0x82	; 130
    1dc0:	90 e0       	ldi	r25, 0x00	; 0
    1dc2:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1dc6:	c6 01       	movw	r24, r12
    1dc8:	01 97       	sbiw	r24, 0x01	; 1
    1dca:	f1 f7       	brne	.-4      	; 0x1dc8 <main+0x1d6>
    1dcc:	8b cf       	rjmp	.-234    	; 0x1ce4 <main+0xf2>
	  }
	  if(PINA==0x0d)
    1dce:	89 b3       	in	r24, 0x19	; 25
    1dd0:	8d 30       	cpi	r24, 0x0D	; 13
    1dd2:	09 f0       	breq	.+2      	; 0x1dd6 <main+0x1e4>
    1dd4:	7d cf       	rjmp	.-262    	; 0x1cd0 <main+0xde>
	   {
	   agains :disp_cmd(0x01);
    1dd6:	81 e0       	ldi	r24, 0x01	; 1
    1dd8:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1ddc:	c6 01       	movw	r24, r12
    1dde:	01 97       	sbiw	r24, 0x01	; 1
    1de0:	f1 f7       	brne	.-4      	; 0x1dde <main+0x1ec>
		_delay_ms(50);
		disp_cmd(0xc0);
    1de2:	80 ec       	ldi	r24, 0xC0	; 192
    1de4:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		LCD_string("*Device Pairing*");
    1de8:	83 e9       	ldi	r24, 0x93	; 147
    1dea:	90 e0       	ldi	r25, 0x00	; 0
    1dec:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1df0:	c5 01       	movw	r24, r10
    1df2:	01 97       	sbiw	r24, 0x01	; 1
    1df4:	f1 f7       	brne	.-4      	; 0x1df2 <main+0x200>
		_delay_ms(200);
		disp_cmd(0x80);
    1df6:	80 e8       	ldi	r24, 0x80	; 128
    1df8:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		for(m=0;m<4;m++)
    1dfc:	10 92 e1 00 	sts	0x00E1, r1
    1e00:	10 92 e0 00 	sts	0x00E0, r1
    1e04:	1e c0       	rjmp	.+60     	; 0x1e42 <main+0x250>
		{
		value=pass();
    1e06:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <pass>
    1e0a:	f8 2e       	mov	r15, r24
		q[m]=value;
    1e0c:	00 91 e0 00 	lds	r16, 0x00E0
    1e10:	10 91 e1 00 	lds	r17, 0x00E1
		disp_data('*');
    1e14:	8a e2       	ldi	r24, 0x2A	; 42
    1e16:	0e 94 9c 00 	call	0x138	; 0x138 <disp_data>
    1e1a:	88 e8       	ldi	r24, 0x88	; 136
    1e1c:	93 e1       	ldi	r25, 0x13	; 19
    1e1e:	f4 01       	movw	r30, r8
    1e20:	31 97       	sbiw	r30, 0x01	; 1
    1e22:	f1 f7       	brne	.-4      	; 0x1e20 <main+0x22e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e24:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e26:	d9 f7       	brne	.-10     	; 0x1e1e <main+0x22c>
		_delay_ms(200);
		disp_cmd(0x80);
		for(m=0;m<4;m++)
		{
		value=pass();
		q[m]=value;
    1e28:	06 0d       	add	r16, r6
    1e2a:	17 1d       	adc	r17, r7
    1e2c:	f8 01       	movw	r30, r16
    1e2e:	f0 82       	st	Z, r15
		_delay_ms(50);
		disp_cmd(0xc0);
		LCD_string("*Device Pairing*");
		_delay_ms(200);
		disp_cmd(0x80);
		for(m=0;m<4;m++)
    1e30:	80 91 e0 00 	lds	r24, 0x00E0
    1e34:	90 91 e1 00 	lds	r25, 0x00E1
    1e38:	01 96       	adiw	r24, 0x01	; 1
    1e3a:	90 93 e1 00 	sts	0x00E1, r25
    1e3e:	80 93 e0 00 	sts	0x00E0, r24
    1e42:	80 91 e0 00 	lds	r24, 0x00E0
    1e46:	90 91 e1 00 	lds	r25, 0x00E1
    1e4a:	04 97       	sbiw	r24, 0x04	; 4
    1e4c:	e4 f2       	brlt	.-72     	; 0x1e06 <main+0x214>
    1e4e:	40 91 de 00 	lds	r20, 0x00DE
    1e52:	50 91 df 00 	lds	r21, 0x00DF
    1e56:	d3 01       	movw	r26, r6
    1e58:	f2 01       	movw	r30, r4
    1e5a:	20 e0       	ldi	r18, 0x00	; 0
    1e5c:	30 e0       	ldi	r19, 0x00	; 0
    1e5e:	0a c0       	rjmp	.+20     	; 0x1e74 <main+0x282>
		//disp_data(q[i]);
		_delay_ms(500);
		}
		for(m=0;m<4;m++)
		{
		 if(q[m]==pas[m])
    1e60:	9c 91       	ld	r25, X
    1e62:	80 81       	ld	r24, Z
    1e64:	98 17       	cp	r25, r24
    1e66:	11 f4       	brne	.+4      	; 0x1e6c <main+0x27a>
		 n=n+1;
    1e68:	4f 5f       	subi	r20, 0xFF	; 255
    1e6a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e6c:	2f 5f       	subi	r18, 0xFF	; 255
    1e6e:	3f 4f       	sbci	r19, 0xFF	; 255
    1e70:	11 96       	adiw	r26, 0x01	; 1
    1e72:	31 96       	adiw	r30, 0x01	; 1
		q[m]=value;
		disp_data('*');
		//disp_data(q[i]);
		_delay_ms(500);
		}
		for(m=0;m<4;m++)
    1e74:	24 30       	cpi	r18, 0x04	; 4
    1e76:	31 05       	cpc	r19, r1
    1e78:	9c f3       	brlt	.-26     	; 0x1e60 <main+0x26e>
    1e7a:	40 93 de 00 	sts	0x00DE, r20
    1e7e:	50 93 df 00 	sts	0x00DF, r21
    1e82:	30 93 e1 00 	sts	0x00E1, r19
    1e86:	20 93 e0 00 	sts	0x00E0, r18
		{
		 if(q[m]==pas[m])
		 n=n+1;
		}
		if(n==4)
    1e8a:	44 30       	cpi	r20, 0x04	; 4
    1e8c:	51 05       	cpc	r21, r1
    1e8e:	d1 f4       	brne	.+52     	; 0x1ec4 <main+0x2d2>
		{disp_cmd(0x01);
    1e90:	81 e0       	ldi	r24, 0x01	; 1
    1e92:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1e96:	c6 01       	movw	r24, r12
    1e98:	01 97       	sbiw	r24, 0x01	; 1
    1e9a:	f1 f7       	brne	.-4      	; 0x1e98 <main+0x2a6>
		_delay_ms(50);
		disp_cmd(0xc3);
    1e9c:	83 ec       	ldi	r24, 0xC3	; 195
    1e9e:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
		LCD_string("Sending...");
    1ea2:	8d eb       	ldi	r24, 0xBD	; 189
    1ea4:	90 e0       	ldi	r25, 0x00	; 0
    1ea6:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1eaa:	c5 01       	movw	r24, r10
    1eac:	01 97       	sbiw	r24, 0x01	; 1
    1eae:	f1 f7       	brne	.-4      	; 0x1eac <main+0x2ba>
		_delay_ms(200);
		//	while(1)
		//	{
				key();
    1eb0:	0e 94 41 07 	call	0xe82	; 0xe82 <key>
    1eb4:	c5 01       	movw	r24, r10
    1eb6:	01 97       	sbiw	r24, 0x01	; 1
    1eb8:	f1 f7       	brne	.-4      	; 0x1eb6 <main+0x2c4>
				_delay_ms(200);
		//	}
		n=0;
    1eba:	10 92 df 00 	sts	0x00DF, r1
    1ebe:	10 92 de 00 	sts	0x00DE, r1
    1ec2:	06 cf       	rjmp	.-500    	; 0x1cd0 <main+0xde>
		goto main;
		}
		else
		{
		disp_cmd(0x80);	LCD_string("Try Again..!");	n=0;_delay_ms(2000);disp_cmd(0x80);LCD_string("                ");_delay_ms(50); goto agains;
    1ec4:	80 e8       	ldi	r24, 0x80	; 128
    1ec6:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1eca:	80 eb       	ldi	r24, 0xB0	; 176
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1ed2:	10 92 df 00 	sts	0x00DF, r1
    1ed6:	10 92 de 00 	sts	0x00DE, r1
    1eda:	80 e2       	ldi	r24, 0x20	; 32
    1edc:	9e e4       	ldi	r25, 0x4E	; 78
    1ede:	f4 01       	movw	r30, r8
    1ee0:	31 97       	sbiw	r30, 0x01	; 1
    1ee2:	f1 f7       	brne	.-4      	; 0x1ee0 <main+0x2ee>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ee4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ee6:	d9 f7       	brne	.-10     	; 0x1ede <main+0x2ec>
    1ee8:	80 e8       	ldi	r24, 0x80	; 128
    1eea:	0e 94 78 00 	call	0xf0	; 0xf0 <disp_cmd>
    1eee:	82 e8       	ldi	r24, 0x82	; 130
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_string>
    1ef6:	c6 01       	movw	r24, r12
    1ef8:	01 97       	sbiw	r24, 0x01	; 1
    1efa:	f1 f7       	brne	.-4      	; 0x1ef8 <main+0x306>
    1efc:	6c cf       	rjmp	.-296    	; 0x1dd6 <main+0x1e4>

00001efe <__udivmodhi4>:
    1efe:	aa 1b       	sub	r26, r26
    1f00:	bb 1b       	sub	r27, r27
    1f02:	51 e1       	ldi	r21, 0x11	; 17
    1f04:	07 c0       	rjmp	.+14     	; 0x1f14 <__udivmodhi4_ep>

00001f06 <__udivmodhi4_loop>:
    1f06:	aa 1f       	adc	r26, r26
    1f08:	bb 1f       	adc	r27, r27
    1f0a:	a6 17       	cp	r26, r22
    1f0c:	b7 07       	cpc	r27, r23
    1f0e:	10 f0       	brcs	.+4      	; 0x1f14 <__udivmodhi4_ep>
    1f10:	a6 1b       	sub	r26, r22
    1f12:	b7 0b       	sbc	r27, r23

00001f14 <__udivmodhi4_ep>:
    1f14:	88 1f       	adc	r24, r24
    1f16:	99 1f       	adc	r25, r25
    1f18:	5a 95       	dec	r21
    1f1a:	a9 f7       	brne	.-22     	; 0x1f06 <__udivmodhi4_loop>
    1f1c:	80 95       	com	r24
    1f1e:	90 95       	com	r25
    1f20:	bc 01       	movw	r22, r24
    1f22:	cd 01       	movw	r24, r26
    1f24:	08 95       	ret

00001f26 <_exit>:
    1f26:	f8 94       	cli

00001f28 <__stop_program>:
    1f28:	ff cf       	rjmp	.-2      	; 0x1f28 <__stop_program>
